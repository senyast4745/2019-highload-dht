<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950"
     xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="933"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="933"></text>
    <g id="frames">
        <g>
            <title>all (11,275 samples, 100.00%)</title>
            <rect x="10.0" y="899.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="13.0" y="910.0">all</text>
        </g>
        <g>
            <title>InstanceKlass::klass_holder() const (6 samples, 0.05%)</title>
            <rect x="10.3" y="883.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="13.3" y="894.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (68 samples, 0.60%)</title>
            <rect x="11.2" y="883.0" width="7.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="14.2" y="894.0"></text>
        </g>
        <g>
            <title>InstanceKlass::allocate_objArray(int, int, Thread*) (10 samples, 0.09%)</title>
            <rect x="11.9" y="867.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="14.9" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.06%)</title>
            <rect x="11.9" y="851.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="14.9" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (6 samples, 0.05%)</title>
            <rect x="12.0" y="835.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="15.0" y="846.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.04%)
            </title>
            <rect x="12.1" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="15.1" y="830.0"></text>
        </g>
        <g>
            <title>TypeArrayKlass::allocate_common(int, bool, Thread*) (50 samples, 0.44%)</title>
            <rect x="13.0" y="867.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="16.0" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (45 samples, 0.40%)</title>
            <rect x="13.3" y="851.0" width="4.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="16.3" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (44 samples, 0.39%)</title>
            <rect x="13.5" y="835.0" width="4.6" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="16.5" y="846.0"></text>
        </g>
        <g>
            <title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (4
                samples, 0.04%)
            </title>
            <rect x="14.3" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="17.3" y="830.0"></text>
        </g>
        <g>
            <title>LeakProfiler::is_running() (4 samples, 0.04%)</title>
            <rect x="14.3" y="803.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="17.3" y="814.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (3 samples, 0.03%)</title>
            <rect x="15.3" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="18.3" y="830.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (15 samples, 0.13%)
            </title>
            <rect x="15.8" y="819.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="18.8" y="830.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (7 samples, 0.06%)
            </title>
            <rect x="16.2" y="803.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="19.2" y="814.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (4 samples, 0.04%)</title>
            <rect x="16.5" y="787.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="19.5" y="798.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.14%)</title>
            <rect x="18.3" y="883.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="21.3" y="894.0"></text>
        </g>
        <g>
            <title>TypeArrayKlass::allocate_common(int, bool, Thread*) (15 samples, 0.13%)</title>
            <rect x="18.4" y="867.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="21.4" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.12%)</title>
            <rect x="18.5" y="851.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="21.5" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (14 samples, 0.12%)</title>
            <rect x="18.5" y="835.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="21.5" y="846.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.07%)
            </title>
            <rect x="18.8" y="819.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="21.8" y="830.0"></text>
        </g>
        <g>
            <title>G1Allocator::unsafe_max_tlab_alloc() (5 samples, 0.04%)</title>
            <rect x="18.9" y="803.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="21.9" y="814.0"></text>
        </g>
        <g>
            <title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.03%)</title>
            <rect x="19.6" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="22.6" y="830.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (64 samples, 0.57%)</title>
            <rect x="19.9" y="883.0" width="6.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="22.9" y="894.0"></text>
        </g>
        <g>
            <title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title>
            <rect x="20.2" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="23.2" y="878.0"></text>
        </g>
        <g>
            <title>InstanceKlass::allocate_instance(Thread*) (56 samples, 0.50%)</title>
            <rect x="20.5" y="867.0" width="5.8" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="23.5" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (54 samples, 0.48%)</title>
            <rect x="20.6" y="851.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="23.6" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (47 samples, 0.42%)</title>
            <rect x="20.7" y="835.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="23.7" y="846.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.03%)
            </title>
            <rect x="21.1" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="24.1" y="830.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (3 samples, 0.03%)</title>
            <rect x="21.4" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="24.4" y="830.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (25 samples, 0.22%)
            </title>
            <rect x="21.8" y="819.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="24.8" y="830.0"></text>
        </g>
        <g>
            <title>G1Allocator::unsafe_max_tlab_alloc() (6 samples, 0.05%)</title>
            <rect x="22.3" y="803.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="25.3" y="814.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (5 samples, 0.04%)
            </title>
            <rect x="23.2" y="803.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="26.2" y="814.0"></text>
        </g>
        <g>
            <title>ThreadLocalAllocBuffer::clear_before_allocation() (5 samples, 0.04%)</title>
            <rect x="23.8" y="803.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="26.8" y="814.0"></text>
        </g>
        <g>
            <title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (3 samples, 0.03%)</title>
            <rect x="23.9" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="26.9" y="798.0"></text>
        </g>
        <g>
            <title>ObjAllocator::initialize(HeapWord*) const (5 samples, 0.04%)</title>
            <rect x="24.4" y="819.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="27.4" y="830.0"></text>
        </g>
        <g>
            <title>ThreadHeapSampler::enabled() (3 samples, 0.03%)</title>
            <rect x="25.0" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="28.0" y="830.0"></text>
        </g>
        <g>
            <title>ObjAllocator::initialize(HeapWord*) const (3 samples, 0.03%)</title>
            <rect x="25.6" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="28.6" y="846.0"></text>
        </g>
        <g>
            <title>__tls_get_addr (3 samples, 0.03%)</title>
            <rect x="25.9" y="835.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="28.9" y="846.0"></text>
        </g>
        <g>
            <title>Klass::class_loader() const (3 samples, 0.03%)</title>
            <rect x="26.3" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="29.3" y="878.0"></text>
        </g>
        <g>
            <title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.16%)
            </title>
            <rect x="26.6" y="883.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="29.6" y="894.0"></text>
        </g>
        <g>
            <title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.14%)</title>
            <rect x="26.7" y="867.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="29.7" y="878.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title>
            <rect x="26.7" y="851.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="29.7" y="862.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) [clone .part.96] (10 samples, 0.09%)</title>
            <rect x="27.2" y="851.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="30.2" y="862.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::EnterI(Thread*) (8 samples, 0.07%)</title>
            <rect x="27.4" y="835.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="30.4" y="846.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (3 samples, 0.03%)</title>
            <rect x="27.5" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="30.5" y="830.0"></text>
        </g>
        <g>
            <title>[not_walkable] (5 samples, 0.04%)</title>
            <rect x="28.5" y="883.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="31.5" y="894.0"></text>
        </g>
        <g>
            <title>[not_walkable_Java] (32 samples, 0.28%)</title>
            <rect x="29.0" y="883.0" width="3.4" height="15" fill="#f87878" rx="2" ry="2"/>
            <text x="32.0" y="894.0"></text>
        </g>
        <g>
            <title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (5 samples, 0.04%)</title>
            <rect x="29.0" y="867.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="32.0" y="878.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (18 samples, 0.16%)</title>
            <rect x="29.7" y="867.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="32.7" y="878.0"></text>
        </g>
        <g>
            <title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (18 samples, 0.16%)</title>
            <rect x="29.7" y="851.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="32.7" y="862.0"></text>
        </g>
        <g>
            <title>JavaThread::pd_last_frame() (7 samples, 0.06%)</title>
            <rect x="29.8" y="835.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="32.8" y="846.0"></text>
        </g>
        <g>
            <title>CodeCache::find_blob(void*) (5 samples, 0.04%)</title>
            <rect x="29.8" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="32.8" y="830.0"></text>
        </g>
        <g>
            <title>frame::sender(RegisterMap*) const (10 samples, 0.09%)</title>
            <rect x="30.5" y="835.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="33.5" y="846.0"></text>
        </g>
        <g>
            <title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (7 samples, 0.06%)</title>
            <rect x="31.7" y="867.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="34.7" y="878.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.05%)</title>
            <rect x="32.4" y="883.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="35.4" y="894.0"></text>
        </g>
        <g>
            <title>do_futex_wait.constprop.1 (3 samples, 0.03%)</title>
            <rect x="32.7" y="867.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="35.7" y="878.0"></text>
        </g>
        <g>
            <title>[unknown_Java] (28 samples, 0.25%)</title>
            <rect x="33.0" y="883.0" width="3.0" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="36.0" y="894.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.05%)</title>
            <rect x="35.0" y="867.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="38.0" y="878.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title>
            <rect x="35.0" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="38.0" y="862.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.03%)</title>
            <rect x="35.6" y="867.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="38.6" y="878.0"></text>
        </g>
        <g>
            <title>__pthread_cond_timedwait (6 samples, 0.05%)</title>
            <rect x="36.1" y="883.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="39.1" y="894.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="36.3" y="867.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="39.3" y="878.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="36.3" y="851.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="39.3" y="862.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="36.4" y="835.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="39.4" y="846.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (7,412 samples, 65.74%)</title>
            <rect x="36.8" y="883.0" width="775.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="39.8" y="894.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,412 samples, 65.74%)</title>
            <rect x="36.8" y="867.0" width="775.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="39.8" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,412 samples, 65.74%)</title>
            <rect x="36.8" y="851.0" width="775.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="39.8" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (11 samples, 0.10%)</title>
            <rect x="38.0" y="835.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="41.0" y="846.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.10%)</title>
            <rect x="38.0" y="819.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="41.0" y="830.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (11 samples, 0.10%)</title>
            <rect x="38.0" y="803.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="41.0" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (11 samples, 0.10%)</title>
            <rect x="38.0" y="787.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="41.0" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (11 samples, 0.10%)</title>
            <rect x="38.0" y="771.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="41.0" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (11 samples, 0.10%)</title>
            <rect x="38.0" y="755.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="41.0" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (7 samples, 0.06%)</title>
            <rect x="39.2" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="42.2" y="846.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.05%)</title>
            <rect x="39.3" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="42.3" y="830.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (4 samples, 0.04%)</title>
            <rect x="39.5" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="42.5" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (4 samples, 0.04%)</title>
            <rect x="39.5" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="42.5" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (868 samples, 7.70%)</title>
            <rect x="39.9" y="835.0" width="90.9" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="42.9" y="846.0">java/util/..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.take (848 samples, 7.52%)</title>
            <rect x="42.0" y="819.0" width="88.8" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="45.0" y="830.0">java/util/..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.dequeue (13 samples, 0.12%)</title>
            <rect x="43.1" y="803.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="46.1" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/atomic/AtomicInteger.getAndDecrement (14 samples, 0.12%)</title>
            <rect x="44.6" y="803.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="47.6" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (687 samples, 6.09%)
            </title>
            <rect x="46.1" y="803.0" width="71.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="49.1" y="814.0">java/uti..</text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (19 samples, 0.17%)</title>
            <rect x="46.2" y="787.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="49.2" y="798.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title>
            <rect x="47.9" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="50.9" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples,
                0.12%)
            </title>
            <rect x="48.2" y="787.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="51.2" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (11
                samples, 0.10%)
            </title>
            <rect x="49.7" y="787.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="52.7" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (11 samples, 0.10%)</title>
            <rect x="49.7" y="771.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="52.7" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.06%)</title>
            <rect x="50.8" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="53.8" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title>
            <rect x="51.2" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="54.2" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title>
            <rect x="51.2" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="54.2" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (18 samples, 0.16%)</title>
            <rect x="51.5" y="787.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="54.5" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.16%)</title>
            <rect x="51.5" y="771.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="54.5" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.04%)</title>
            <rect x="51.5" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="54.5" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.04%)</title>
            <rect x="51.5" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="54.5" y="750.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.04%)</title>
            <rect x="51.5" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="54.5" y="734.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.03%)</title>
            <rect x="51.8" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="54.8" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="51.8" y="691.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="54.8" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="51.8" y="675.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="54.8" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="51.8" y="659.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="54.8" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="51.8" y="643.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="54.8" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="51.8" y="627.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="54.8" y="638.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (13 samples, 0.12%)</title>
            <rect x="52.1" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="55.1" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (616 samples, 5.46%)</title>
            <rect x="53.5" y="787.0" width="64.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="56.5" y="798.0">java/ut..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (614 samples, 5.45%)</title>
            <rect x="53.7" y="771.0" width="64.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="56.7" y="782.0">jdk/int..</text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3
                samples, 0.03%)
            </title>
            <rect x="54.5" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="57.5" y="766.0"></text>
        </g>
        <g>
            <title>Unsafe_Park (266 samples, 2.36%)</title>
            <rect x="54.8" y="755.0" width="27.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="57.8" y="766.0">U..</text>
        </g>
        <g>
            <title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.04%)</title>
            <rect x="57.9" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="60.9" y="750.0"></text>
        </g>
        <g>
            <title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (18 samples, 0.16%)</title>
            <rect x="58.4" y="739.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="61.4" y="750.0"></text>
        </g>
        <g>
            <title>Parker::park(bool, long) (64 samples, 0.57%)</title>
            <rect x="60.3" y="739.0" width="6.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="63.3" y="750.0"></text>
        </g>
        <g>
            <title>Monitor::lock_without_safepoint_check() (34 samples, 0.30%)</title>
            <rect x="62.0" y="723.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="65.0" y="734.0"></text>
        </g>
        <g>
            <title>Monitor::unlock() (4 samples, 0.04%)</title>
            <rect x="65.6" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="68.6" y="734.0"></text>
        </g>
        <g>
            <title>__tls_get_addr (8 samples, 0.07%)</title>
            <rect x="66.0" y="723.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="69.0" y="734.0"></text>
        </g>
        <g>
            <title>Thread::is_interrupted(Thread*, bool) (4 samples, 0.04%)</title>
            <rect x="67.0" y="739.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="70.0" y="750.0"></text>
        </g>
        <g>
            <title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.03%)</title>
            <rect x="67.5" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="70.5" y="750.0"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (104 samples, 0.92%)</title>
            <rect x="67.9" y="739.0" width="10.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="70.9" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (67 samples, 0.59%)</title>
            <rect x="71.7" y="723.0" width="7.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="74.7" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (67 samples, 0.59%)</title>
            <rect x="71.7" y="707.0" width="7.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
            <text x="74.7" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (38 samples, 0.34%)</title>
            <rect x="74.8" y="691.0" width="4.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="77.8" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (36 samples, 0.32%)</title>
            <rect x="75.0" y="675.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="78.0" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (34 samples, 0.30%)</title>
            <rect x="75.2" y="659.0" width="3.6" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="78.2" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="78.3" y="643.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="81.3" y="654.0"></text>
        </g>
        <g>
            <title>__pthread_cond_wait (12 samples, 0.11%)</title>
            <rect x="78.8" y="739.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="81.8" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_trylock (8 samples, 0.07%)</title>
            <rect x="80.0" y="739.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="83.0" y="750.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::get_thread_status(oopDesc*) (4 samples, 0.04%)</title>
            <rect x="81.3" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="84.3" y="750.0"></text>
        </g>
        <g>
            <title>os::is_interrupted(Thread*, bool) (3 samples, 0.03%)</title>
            <rect x="81.9" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="84.9" y="750.0"></text>
        </g>
        <g>
            <title>pthread_mutex_unlock (4 samples, 0.04%)</title>
            <rect x="82.2" y="739.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="85.2" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (337 samples, 2.99%)</title>
            <rect x="82.6" y="755.0" width="35.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="85.6" y="766.0">[un..</text>
        </g>
        <g>
            <title>__pthread_cleanup_pop (5 samples, 0.04%)</title>
            <rect x="82.6" y="739.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="85.6" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_cond_wait (303 samples, 2.69%)</title>
            <rect x="83.4" y="739.0" width="31.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="86.4" y="750.0">__..</text>
        </g>
        <g>
            <title>[unknown] (172 samples, 1.53%)</title>
            <rect x="97.1" y="723.0" width="18.0" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="100.1" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (172 samples, 1.53%)</title>
            <rect x="97.1" y="707.0" width="18.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="100.1" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (147 samples, 1.30%)</title>
            <rect x="99.7" y="691.0" width="15.4" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="102.7" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (137 samples, 1.22%)</title>
            <rect x="100.7" y="675.0" width="14.4" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="103.7" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (127 samples, 1.13%)</title>
            <rect x="101.8" y="659.0" width="13.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="104.8" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (114 samples, 1.01%)</title>
            <rect x="103.1" y="643.0" width="12.0" height="15" fill="#f57474" rx="2" ry="2"/>
            <text x="106.1" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (82 samples, 0.73%)</title>
            <rect x="106.5" y="627.0" width="8.6" height="15" fill="#f27070" rx="2" ry="2"/>
            <text x="109.5" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (65 samples, 0.58%)</title>
            <rect x="108.3" y="611.0" width="6.8" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="111.3" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (44 samples, 0.39%)</title>
            <rect x="110.5" y="595.0" width="4.6" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="113.5" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.06%)</title>
            <rect x="114.3" y="579.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="117.3" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.06%)</title>
            <rect x="114.3" y="563.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="117.3" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.06%)</title>
            <rect x="114.3" y="547.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="117.3" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.06%)</title>
            <rect x="114.3" y="531.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="117.3" y="542.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.06%)</title>
            <rect x="114.3" y="515.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="117.3" y="526.0"></text>
        </g>
        <g>
            <title>[unknown] (5 samples, 0.04%)</title>
            <rect x="114.6" y="499.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="117.6" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (5 samples, 0.04%)</title>
            <rect x="114.6" y="483.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="117.6" y="494.0"></text>
        </g>
        <g>
            <title>[unknown] (5 samples, 0.04%)</title>
            <rect x="114.6" y="467.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="117.6" y="478.0"></text>
        </g>
        <g>
            <title>__pthread_disable_asynccancel (14 samples, 0.12%)</title>
            <rect x="115.1" y="739.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="118.1" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_enable_asynccancel (3 samples, 0.03%)</title>
            <rect x="116.5" y="739.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="119.5" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_cond_lock (5 samples, 0.04%)</title>
            <rect x="116.9" y="739.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="119.9" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_trylock (4 samples, 0.04%)</title>
            <rect x="117.4" y="739.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
            <text x="120.4" y="750.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (61 samples, 0.54%)</title>
            <rect x="118.2" y="803.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="121.2" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (58 samples, 0.51%)
            </title>
            <rect x="118.4" y="787.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="121.4" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (16 samples, 0.14%)</title>
            <rect x="118.4" y="771.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="121.4" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (38 samples, 0.34%)
            </title>
            <rect x="120.1" y="771.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="123.1" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (4 samples, 0.04%)</title>
            <rect x="121.1" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="124.1" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.08%)
            </title>
            <rect x="121.7" y="755.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="124.7" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.08%)</title>
            <rect x="121.7" y="739.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="124.7" y="750.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (4 samples, 0.04%)</title>
            <rect x="122.2" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="125.2" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="122.2" y="707.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="125.2" y="718.0"></text>
        </g>
        <g>
            <title>__pthread_cond_wait (4 samples, 0.04%)</title>
            <rect x="122.2" y="691.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="125.2" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="122.2" y="675.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
            <text x="125.2" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="122.2" y="659.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="125.2" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="122.2" y="643.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="125.2" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="122.2" y="627.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="125.2" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="122.2" y="611.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="125.2" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="122.2" y="595.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="125.2" y="606.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (12 samples, 0.11%)</title>
            <rect x="122.6" y="755.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="125.6" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.04%)</title>
            <rect x="124.1" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="127.1" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.04%)</title>
            <rect x="124.1" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="127.1" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (59 samples, 0.52%)</title>
            <rect x="124.6" y="803.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="127.6" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (59 samples, 0.52%)</title>
            <rect x="124.6" y="787.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="127.6" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (55 samples, 0.49%)</title>
            <rect x="125.0" y="771.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="128.0" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (55 samples, 0.49%)</title>
            <rect x="125.0" y="755.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="128.0" y="766.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (55 samples, 0.49%)</title>
            <rect x="125.0" y="739.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="128.0" y="750.0"></text>
        </g>
        <g>
            <title>Unsafe_Unpark (6 samples, 0.05%)</title>
            <rect x="125.1" y="723.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="128.1" y="734.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (47 samples, 0.42%)</title>
            <rect x="125.9" y="723.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="128.9" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (43 samples, 0.38%)</title>
            <rect x="126.3" y="707.0" width="4.5" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="129.3" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (43 samples, 0.38%)</title>
            <rect x="126.3" y="691.0" width="4.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="129.3" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (39 samples, 0.35%)</title>
            <rect x="126.7" y="675.0" width="4.1" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="129.7" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (39 samples, 0.35%)</title>
            <rect x="126.7" y="659.0" width="4.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="129.7" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (38 samples, 0.34%)</title>
            <rect x="126.8" y="643.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="129.8" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (33 samples, 0.29%)</title>
            <rect x="127.3" y="627.0" width="3.5" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="130.3" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (31 samples, 0.27%)</title>
            <rect x="127.5" y="611.0" width="3.3" height="15" fill="#ec6868" rx="2" ry="2"/>
            <text x="130.5" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (30 samples, 0.27%)</title>
            <rect x="127.6" y="595.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="130.6" y="606.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$66/1460939219.run (6,513 samples, 57.76%)</title>
            <rect x="130.9" y="835.0" width="681.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="133.9" y="846.0">ru/mail/polis/service/senyast/ServiceImpl$$Lambda$66/1460939219.run</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.lambda$executeAsync$4 (6,508 samples, 57.72%)</title>
            <rect x="131.4" y="819.0" width="681.1" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="134.4" y="830.0">ru/mail/polis/service/senyast/ServiceImpl.lambda$executeAsync$4</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$64/1880295093.act (858 samples, 7.61%)</title>
            <rect x="131.4" y="803.0" width="89.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="134.4" y="814.0">ru/mail/po..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.lambda$daoMethods$2 (858 samples, 7.61%)</title>
            <rect x="131.4" y="787.0" width="89.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="134.4" y="798.0">ru/mail/po..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.putMethod (858 samples, 7.61%)</title>
            <rect x="131.4" y="771.0" width="89.8" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="134.4" y="782.0">ru/mail/po..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/LSMDao.upsert (857 samples, 7.60%)</title>
            <rect x="131.5" y="755.0" width="89.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="134.5" y="766.0">ru/mail/po..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTablePool.upsert (857 samples, 7.60%)</title>
            <rect x="131.5" y="739.0" width="89.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="134.5" y="750.0">ru/mail/po..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable.upsert (857 samples, 7.60%)</title>
            <rect x="131.5" y="723.0" width="89.7" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="134.5" y="734.0">ru/mail/po..</text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.put (855 samples, 7.58%)</title>
            <rect x="131.5" y="707.0" width="89.5" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="134.5" y="718.0">java/util/..</text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (853 samples, 7.57%)</title>
            <rect x="131.7" y="691.0" width="89.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="134.7" y="702.0">java/util/..</text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.05%)</title>
            <rect x="190.6" y="675.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="193.6" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.05%)</title>
            <rect x="190.6" y="659.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="193.6" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.05%)</title>
            <rect x="190.6" y="643.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="193.6" y="654.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandle.acquireFence (3 samples, 0.03%)</title>
            <rect x="191.3" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="194.3" y="686.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (15 samples, 0.13%)</title>
            <rect x="191.6" y="675.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="194.6" y="686.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (14 samples, 0.12%)</title>
            <rect x="191.7" y="659.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="194.7" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title>
            <rect x="193.1" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="196.1" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addCount (12 samples, 0.11%)</title>
            <rect x="193.6" y="675.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="196.6" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/atomic/LongAdder.add (12 samples, 0.11%)</title>
            <rect x="193.6" y="659.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="196.6" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/atomic/Striped64$Cell.cas (5 samples, 0.04%)</title>
            <rect x="194.3" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="197.3" y="654.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (5 samples, 0.04%)</title>
            <rect x="194.3" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="197.3" y="638.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (5 samples, 0.04%)</title>
            <rect x="194.3" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="197.3" y="622.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (14 samples, 0.12%)</title>
            <rect x="194.8" y="675.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="197.8" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (6 samples, 0.05%)</title>
            <rect x="195.3" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="198.3" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title>
            <rect x="196.0" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="199.0" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (234 samples, 2.08%)</title>
            <rect x="196.3" y="675.0" width="24.5" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="199.3" y="686.0">j..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (229 samples, 2.03%)</title>
            <rect x="196.8" y="659.0" width="24.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="199.8" y="670.0">j..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (158 samples, 1.40%)</title>
            <rect x="204.2" y="643.0" width="16.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="207.2" y="654.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.position (7 samples, 0.06%)</title>
            <rect x="205.1" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="208.1" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.remaining (35 samples, 0.31%)</title>
            <rect x="205.8" y="627.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="208.8" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (72 samples, 0.64%)</title>
            <rect x="209.5" y="627.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="212.5" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (45 samples, 0.40%)</title>
            <rect x="212.3" y="611.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="215.3" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (18 samples, 0.16%)</title>
            <rect x="214.6" y="595.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="217.6" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.ix (5 samples, 0.04%)</title>
            <rect x="216.5" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="219.5" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (36 samples, 0.32%)</title>
            <rect x="217.0" y="627.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="220.0" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (28 samples, 0.25%)</title>
            <rect x="217.4" y="611.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="220.4" y="622.0"></text>
        </g>
        <g>
            <title>vectorizedMismatch (25 samples, 0.22%)</title>
            <rect x="217.7" y="595.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="220.7" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.ix (4 samples, 0.04%)</title>
            <rect x="220.4" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="223.4" y="622.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$65/1177156252.act (2,402 samples, 21.30%)</title>
            <rect x="221.2" y="803.0" width="251.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="224.2" y="814.0">ru/mail/polis/service/senyast/Ser..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.lambda$daoMethods$0 (2,402 samples, 21.30%)</title>
            <rect x="221.2" y="787.0" width="251.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="224.2" y="798.0">ru/mail/polis/service/senyast/Ser..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.proxy (2,402 samples, 21.30%)</title>
            <rect x="221.2" y="771.0" width="251.4" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="224.2" y="782.0">ru/mail/polis/service/senyast/Ser..</text>
        </g>
        <g>
            <title>java/util/HashMap.get (4 samples, 0.04%)</title>
            <rect x="221.4" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="224.4" y="766.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.getNode (4 samples, 0.04%)</title>
            <rect x="221.4" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="224.4" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/String.equals (4 samples, 0.04%)</title>
            <rect x="221.4" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="224.4" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (2,396 samples, 21.25%)</title>
            <rect x="221.8" y="755.0" width="250.8" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="224.8" y="766.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (2,386 samples, 21.16%)</title>
            <rect x="222.5" y="739.0" width="249.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="225.5" y="750.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (496 samples, 4.40%)</title>
            <rect x="222.9" y="723.0" width="51.9" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="225.9" y="734.0">one/n..</text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.read (419 samples, 3.72%)</title>
            <rect x="230.9" y="707.0" width="43.9" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="233.9" y="718.0">one/..</text>
        </g>
        <g>
            <title>[unknown] (92 samples, 0.82%)</title>
            <rect x="233.5" y="691.0" width="9.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
            <text x="236.5" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (92 samples, 0.82%)</title>
            <rect x="233.5" y="675.0" width="9.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="236.5" y="686.0"></text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_read (79 samples, 0.70%)</title>
            <rect x="233.5" y="659.0" width="8.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="236.5" y="670.0"></text>
        </g>
        <g>
            <title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;,
                (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.05%)
            </title>
            <rect x="234.9" y="643.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="237.9" y="654.0"></text>
        </g>
        <g>
            <title>jni_SetByteArrayRegion (57 samples, 0.51%)</title>
            <rect x="235.8" y="643.0" width="6.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="238.8" y="654.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (11 samples, 0.10%)</title>
            <rect x="236.7" y="627.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="239.7" y="638.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (9
                samples, 0.08%)
            </title>
            <rect x="237.9" y="627.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="240.9" y="638.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (27 samples, 0.24%)</title>
            <rect x="239.0" y="627.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="242.0" y="638.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (13 samples, 0.12%)</title>
            <rect x="240.3" y="611.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="243.3" y="622.0"></text>
        </g>
        <g>
            <title>__GI___recv (3 samples, 0.03%)</title>
            <rect x="241.8" y="659.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="244.8" y="670.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (8 samples, 0.07%)</title>
            <rect x="242.1" y="659.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="245.1" y="670.0"></text>
        </g>
        <g>
            <title>__GI___recv (294 samples, 2.61%)</title>
            <rect x="243.2" y="691.0" width="30.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="246.2" y="702.0">__..</text>
        </g>
        <g>
            <title>[unknown] (246 samples, 2.18%)</title>
            <rect x="248.2" y="675.0" width="25.7" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="251.2" y="686.0">[..</text>
        </g>
        <g>
            <title>[unknown] (246 samples, 2.18%)</title>
            <rect x="248.2" y="659.0" width="25.7" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="251.2" y="670.0">[..</text>
        </g>
        <g>
            <title>[unknown] (231 samples, 2.05%)</title>
            <rect x="249.8" y="643.0" width="24.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="252.8" y="654.0">[..</text>
        </g>
        <g>
            <title>[unknown] (231 samples, 2.05%)</title>
            <rect x="249.8" y="627.0" width="24.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
            <text x="252.8" y="638.0">[..</text>
        </g>
        <g>
            <title>[unknown] (223 samples, 1.98%)</title>
            <rect x="250.6" y="611.0" width="23.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="253.6" y="622.0">[..</text>
        </g>
        <g>
            <title>[unknown] (212 samples, 1.88%)</title>
            <rect x="251.8" y="595.0" width="22.1" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="254.8" y="606.0">[..</text>
        </g>
        <g>
            <title>[unknown] (204 samples, 1.81%)</title>
            <rect x="252.6" y="579.0" width="21.3" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="255.6" y="590.0">[..</text>
        </g>
        <g>
            <title>[unknown] (169 samples, 1.50%)</title>
            <rect x="256.3" y="563.0" width="17.6" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="259.3" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (131 samples, 1.16%)</title>
            <rect x="260.2" y="547.0" width="13.7" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="263.2" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (102 samples, 0.90%)</title>
            <rect x="263.3" y="531.0" width="10.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="266.3" y="542.0"></text>
        </g>
        <g>
            <title>[unknown] (48 samples, 0.43%)</title>
            <rect x="268.9" y="515.0" width="5.0" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="271.9" y="526.0"></text>
        </g>
        <g>
            <title>[unknown] (28 samples, 0.25%)</title>
            <rect x="271.0" y="499.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="274.0" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (21 samples, 0.19%)</title>
            <rect x="271.7" y="483.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="274.7" y="494.0"></text>
        </g>
        <g>
            <title>[unknown] (5 samples, 0.04%)</title>
            <rect x="273.4" y="467.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="276.4" y="478.0"></text>
        </g>
        <g>
            <title>[unknown] (5 samples, 0.04%)</title>
            <rect x="273.4" y="451.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="276.4" y="462.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="273.5" y="435.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="276.5" y="446.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="273.5" y="419.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="276.5" y="430.0"></text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (8 samples, 0.07%)</title>
            <rect x="273.9" y="691.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="276.9" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readResponse (83 samples, 0.74%)</title>
            <rect x="274.8" y="723.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="277.8" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (5 samples, 0.04%)</title>
            <rect x="274.9" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="277.9" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (5 samples, 0.04%)</title>
            <rect x="274.9" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="277.9" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (6 samples, 0.05%)</title>
            <rect x="275.4" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="278.4" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (6 samples, 0.05%)</title>
            <rect x="275.4" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="278.4" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (6 samples, 0.05%)</title>
            <rect x="275.4" y="675.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="278.4" y="686.0"></text>
        </g>
        <g>
            <title>java/lang/Object.&lt;init&gt; (6 samples, 0.05%)</title>
            <rect x="275.4" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="278.4" y="670.0"></text>
        </g>
        <g>
            <title>register_finalizer Runtime1 stub (6 samples, 0.05%)</title>
            <rect x="275.4" y="643.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="278.4" y="654.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readLine (42 samples, 0.37%)</title>
            <rect x="276.0" y="707.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="279.0" y="718.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (38 samples, 0.34%)</title>
            <rect x="276.5" y="691.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="279.5" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (37 samples, 0.33%)</title>
            <rect x="276.6" y="675.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="279.6" y="686.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title>
            <rect x="280.0" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="283.0" y="670.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.04%)</title>
            <rect x="280.4" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="283.4" y="718.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.getHeader (25 samples, 0.22%)</title>
            <rect x="280.9" y="707.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="283.9" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (4 samples, 0.04%)</title>
            <rect x="281.2" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="284.2" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (17 samples, 0.15%)</title>
            <rect x="281.6" y="691.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="284.6" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.14%)</title>
            <rect x="281.7" y="675.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="284.7" y="686.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (5 samples, 0.04%)</title>
            <rect x="282.8" y="659.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="285.8" y="670.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.toBytes (380 samples, 3.37%)</title>
            <rect x="283.5" y="723.0" width="39.7" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="286.5" y="734.0">one..</text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.03%)</title>
            <rect x="284.1" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="287.1" y="718.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.append (360 samples, 3.19%)</title>
            <rect x="284.4" y="707.0" width="37.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="287.4" y="718.0">one..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.length (26 samples, 0.23%)</title>
            <rect x="285.0" y="691.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="288.0" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (21 samples, 0.19%)</title>
            <rect x="285.6" y="675.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="288.6" y="686.0"></text>
        </g>
        <g>
            <title>java/lang/String.isLatin1 (4 samples, 0.04%)</title>
            <rect x="286.9" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="289.9" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.charAt (4 samples, 0.04%)</title>
            <rect x="287.3" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="290.3" y="670.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.write (328 samples, 2.91%)</title>
            <rect x="287.8" y="691.0" width="34.3" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="290.8" y="702.0">on..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.write (325 samples, 2.88%)</title>
            <rect x="288.1" y="675.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="291.1" y="686.0">on..</text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="310.9" y="659.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="313.9" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="310.9" y="643.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="313.9" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="310.9" y="627.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="313.9" y="638.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (19 samples, 0.17%)</title>
            <rect x="311.6" y="659.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="314.6" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/String.coder (4 samples, 0.04%)</title>
            <rect x="313.6" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="316.6" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/String.isLatin1 (13 samples, 0.12%)</title>
            <rect x="314.0" y="659.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="317.0" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (9 samples, 0.08%)</title>
            <rect x="315.4" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="318.4" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.charAt (9 samples, 0.08%)</title>
            <rect x="316.3" y="659.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="319.3" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.limit (5 samples, 0.04%)</title>
            <rect x="317.3" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="320.3" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title>
            <rect x="317.8" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="320.8" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.04%)</title>
            <rect x="318.4" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="321.4" y="670.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (20 samples, 0.18%)</title>
            <rect x="318.9" y="659.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="321.9" y="670.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (4 samples, 0.04%)</title>
            <rect x="321.7" y="659.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="324.7" y="670.0"></text>
        </g>
        <g>
            <title>gettimeofday (4 samples, 0.04%)</title>
            <rect x="321.7" y="643.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
            <text x="324.7" y="654.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.length (11 samples, 0.10%)</title>
            <rect x="322.1" y="707.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="325.1" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (10 samples, 0.09%)</title>
            <rect x="322.1" y="691.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="325.1" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.getHeader (15 samples, 0.13%)</title>
            <rect x="323.2" y="723.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="326.2" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (3 samples, 0.03%)</title>
            <rect x="323.9" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="326.9" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (5 samples, 0.04%)</title>
            <rect x="324.2" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="327.2" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.04%)</title>
            <rect x="324.2" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="327.2" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.setTimeout (230 samples, 2.04%)</title>
            <rect x="324.8" y="723.0" width="24.1" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="327.8" y="734.0">o..</text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_setTimeout (4 samples, 0.04%)</title>
            <rect x="325.2" y="707.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="328.2" y="718.0"></text>
        </g>
        <g>
            <title>__GI___setsockopt (222 samples, 1.97%)</title>
            <rect x="325.6" y="707.0" width="23.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="328.6" y="718.0">_..</text>
        </g>
        <g>
            <title>[unknown] (159 samples, 1.41%)</title>
            <rect x="332.2" y="691.0" width="16.7" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="335.2" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (159 samples, 1.41%)</title>
            <rect x="332.2" y="675.0" width="16.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="335.2" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (130 samples, 1.15%)</title>
            <rect x="335.3" y="659.0" width="13.6" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="338.3" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (120 samples, 1.06%)</title>
            <rect x="336.3" y="643.0" width="12.6" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="339.3" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (86 samples, 0.76%)</title>
            <rect x="339.9" y="627.0" width="9.0" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="342.9" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (66 samples, 0.59%)</title>
            <rect x="342.0" y="611.0" width="6.9" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="345.0" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (44 samples, 0.39%)</title>
            <rect x="344.3" y="595.0" width="4.6" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="347.3" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (16 samples, 0.14%)</title>
            <rect x="347.2" y="579.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="350.2" y="590.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.writeFully (1,136 samples, 10.08%)</title>
            <rect x="348.9" y="723.0" width="118.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="351.9" y="734.0">one/nio/net/Na..</text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_writeFully (41 samples, 0.36%)</title>
            <rect x="351.9" y="707.0" width="4.3" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="354.9" y="718.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4
                samples, 0.04%)
            </title>
            <rect x="353.2" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="356.2" y="702.0"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (6 samples, 0.05%)</title>
            <rect x="353.6" y="691.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="356.6" y="702.0"></text>
        </g>
        <g>
            <title>jni_GetByteArrayRegion (17 samples, 0.15%)</title>
            <rect x="354.2" y="691.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="357.2" y="702.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (4 samples, 0.04%)</title>
            <rect x="354.4" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="357.4" y="686.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (8 samples, 0.07%)</title>
            <rect x="355.2" y="675.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="358.2" y="686.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (3 samples, 0.03%)</title>
            <rect x="355.7" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="358.7" y="670.0"></text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (9 samples, 0.08%)</title>
            <rect x="356.2" y="707.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="359.2" y="718.0"></text>
        </g>
        <g>
            <title>__send (1,052 samples, 9.33%)</title>
            <rect x="357.4" y="707.0" width="110.1" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="360.4" y="718.0">__send</text>
        </g>
        <g>
            <title>[unknown] (1,016 samples, 9.01%)</title>
            <rect x="361.1" y="691.0" width="106.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="364.1" y="702.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,016 samples, 9.01%)</title>
            <rect x="361.1" y="675.0" width="106.4" height="15" fill="#e96464" rx="2" ry="2"/>
            <text x="364.1" y="686.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,006 samples, 8.92%)</title>
            <rect x="362.2" y="659.0" width="105.3" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="365.2" y="670.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,000 samples, 8.87%)</title>
            <rect x="362.8" y="643.0" width="104.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
            <text x="365.8" y="654.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (993 samples, 8.81%)</title>
            <rect x="363.5" y="627.0" width="104.0" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="366.5" y="638.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (981 samples, 8.70%)</title>
            <rect x="364.8" y="611.0" width="102.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="367.8" y="622.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (967 samples, 8.58%)</title>
            <rect x="366.3" y="595.0" width="101.2" height="15" fill="#e66060" rx="2" ry="2"/>
            <text x="369.3" y="606.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (963 samples, 8.54%)</title>
            <rect x="366.7" y="579.0" width="100.8" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="369.7" y="590.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (923 samples, 8.19%)</title>
            <rect x="370.9" y="563.0" width="96.6" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="373.9" y="574.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (902 samples, 8.00%)</title>
            <rect x="373.1" y="547.0" width="94.4" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="376.1" y="558.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (861 samples, 7.64%)</title>
            <rect x="377.3" y="531.0" width="90.2" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="380.3" y="542.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (836 samples, 7.41%)</title>
            <rect x="380.0" y="515.0" width="87.5" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="383.0" y="526.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (781 samples, 6.93%)</title>
            <rect x="385.7" y="499.0" width="81.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="388.7" y="510.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (754 samples, 6.69%)</title>
            <rect x="388.5" y="483.0" width="79.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="391.5" y="494.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (738 samples, 6.55%)</title>
            <rect x="390.2" y="467.0" width="77.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="393.2" y="478.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (728 samples, 6.46%)</title>
            <rect x="391.3" y="451.0" width="76.2" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="394.3" y="462.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (697 samples, 6.18%)</title>
            <rect x="394.5" y="435.0" width="73.0" height="15" fill="#e96464" rx="2" ry="2"/>
            <text x="397.5" y="446.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (675 samples, 5.99%)</title>
            <rect x="396.8" y="419.0" width="70.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="399.8" y="430.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (635 samples, 5.63%)</title>
            <rect x="401.0" y="403.0" width="66.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="404.0" y="414.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (572 samples, 5.07%)</title>
            <rect x="407.6" y="387.0" width="59.9" height="15" fill="#f57474" rx="2" ry="2"/>
            <text x="410.6" y="398.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (554 samples, 4.91%)</title>
            <rect x="409.5" y="371.0" width="58.0" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="412.5" y="382.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (532 samples, 4.72%)</title>
            <rect x="411.8" y="355.0" width="55.7" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="414.8" y="366.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (520 samples, 4.61%)</title>
            <rect x="413.0" y="339.0" width="54.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="416.0" y="350.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (512 samples, 4.54%)</title>
            <rect x="413.9" y="323.0" width="53.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="416.9" y="334.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (508 samples, 4.51%)</title>
            <rect x="414.3" y="307.0" width="53.2" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="417.3" y="318.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (498 samples, 4.42%)</title>
            <rect x="415.3" y="291.0" width="52.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="418.3" y="302.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (490 samples, 4.35%)</title>
            <rect x="416.2" y="275.0" width="51.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="419.2" y="286.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (465 samples, 4.12%)</title>
            <rect x="418.8" y="259.0" width="48.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="421.8" y="270.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (459 samples, 4.07%)</title>
            <rect x="419.4" y="243.0" width="48.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="422.4" y="254.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (452 samples, 4.01%)</title>
            <rect x="420.1" y="227.0" width="47.4" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="423.1" y="238.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (434 samples, 3.85%)</title>
            <rect x="422.0" y="211.0" width="45.5" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="425.0" y="222.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (389 samples, 3.45%)</title>
            <rect x="426.7" y="195.0" width="40.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="429.7" y="206.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (376 samples, 3.33%)</title>
            <rect x="428.1" y="179.0" width="39.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
            <text x="431.1" y="190.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (341 samples, 3.02%)</title>
            <rect x="431.8" y="163.0" width="35.7" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="434.8" y="174.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (301 samples, 2.67%)</title>
            <rect x="436.0" y="147.0" width="31.5" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="439.0" y="158.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (289 samples, 2.56%)</title>
            <rect x="437.2" y="131.0" width="30.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="440.2" y="142.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (281 samples, 2.49%)</title>
            <rect x="438.0" y="115.0" width="29.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="441.0" y="126.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (16 samples, 0.14%)</title>
            <rect x="465.8" y="99.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
            <text x="468.8" y="110.0"></text>
        </g>
        <g>
            <title>[unknown] (15 samples, 0.13%)</title>
            <rect x="465.9" y="83.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="468.9" y="94.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.05%)</title>
            <rect x="466.8" y="67.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="469.8" y="78.0"></text>
        </g>
        <g>
            <title>one/nio/pool/Pool.borrowObject (41 samples, 0.36%)</title>
            <rect x="467.8" y="723.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="470.8" y="734.0"></text>
        </g>
        <g>
            <title>java/util/LinkedList.pollFirst (41 samples, 0.36%)</title>
            <rect x="467.8" y="707.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="470.8" y="718.0"></text>
        </g>
        <g>
            <title>java/util/LinkedList.unlinkFirst (41 samples, 0.36%)</title>
            <rect x="467.8" y="691.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="470.8" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.read (4 samples, 0.04%)</title>
            <rect x="472.2" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="475.2" y="750.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.sendResponse (3,248 samples, 28.81%)</title>
            <rect x="472.6" y="803.0" width="339.9" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="475.6" y="814.0">ru/mail/polis/service/senyast/ServiceImpl.send..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (3,248 samples, 28.81%)</title>
            <rect x="472.6" y="787.0" width="339.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="475.6" y="798.0">one/nio/http/HttpSession.sendResponse</text>
        </g>
        <g>
            <title>java/lang/String.equalsIgnoreCase (43 samples, 0.38%)</title>
            <rect x="475.8" y="771.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="478.8" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (43 samples, 0.38%)</title>
            <rect x="475.8" y="755.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="478.8" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (43 samples, 0.38%)</title>
            <rect x="475.8" y="739.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="478.8" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (7 samples, 0.06%)</title>
            <rect x="479.6" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="482.6" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (3,113 samples, 27.61%)</title>
            <rect x="480.5" y="771.0" width="325.8" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="483.5" y="782.0">one/nio/http/HttpSession.writeResponse</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (101 samples, 0.90%)</title>
            <rect x="480.6" y="755.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="483.6" y="766.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (6 samples, 0.05%)</title>
            <rect x="482.8" y="739.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="485.8" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.append (74 samples, 0.66%)</title>
            <rect x="483.5" y="739.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="486.5" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.ensureCapacity (3 samples, 0.03%)</title>
            <rect x="484.0" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="487.0" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.length (29 samples, 0.26%)</title>
            <rect x="484.3" y="723.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="487.3" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (5 samples, 0.04%)</title>
            <rect x="486.7" y="707.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="489.7" y="718.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.write (37 samples, 0.33%)</title>
            <rect x="487.3" y="723.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="490.3" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.write (37 samples, 0.33%)</title>
            <rect x="487.3" y="707.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="490.3" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (6 samples, 0.05%)</title>
            <rect x="490.0" y="691.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="493.0" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/String.isLatin1 (4 samples, 0.04%)</title>
            <rect x="490.0" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="493.0" y="686.0"></text>
        </g>
        <g>
            <title>sun/misc/Unsafe.putByte (6 samples, 0.05%)</title>
            <rect x="490.6" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="493.6" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.write (3,011 samples, 26.71%)</title>
            <rect x="491.2" y="755.0" width="315.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="494.2" y="766.0">one/nio/net/Session.write</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (3,006 samples, 26.66%)</title>
            <rect x="491.7" y="739.0" width="314.6" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="494.7" y="750.0">one/nio/net/Session.write</text>
        </g>
        <g>
            <title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.04%)
            </title>
            <rect x="492.2" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="495.2" y="734.0"></text>
        </g>
        <g>
            <title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.03%)</title>
            <rect x="492.2" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="495.2" y="718.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (2,990 samples, 26.52%)</title>
            <rect x="493.0" y="723.0" width="312.9" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="496.0" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.write (2,984 samples, 26.47%)</title>
            <rect x="493.6" y="707.0" width="312.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="496.6" y="718.0">one/nio/net/NativeSocket.write</text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_write (3 samples, 0.03%)</title>
            <rect x="495.6" y="691.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="498.6" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (78 samples, 0.69%)</title>
            <rect x="495.9" y="691.0" width="8.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="498.9" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (78 samples, 0.69%)</title>
            <rect x="495.9" y="675.0" width="8.2" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="498.9" y="686.0"></text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_write (62 samples, 0.55%)</title>
            <rect x="495.9" y="659.0" width="6.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="498.9" y="670.0"></text>
        </g>
        <g>
            <title>jni_GetByteArrayRegion (46 samples, 0.41%)</title>
            <rect x="497.4" y="643.0" width="4.8" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="500.4" y="654.0"></text>
        </g>
        <g>
            <title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.03%)</title>
            <rect x="498.2" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="501.2" y="638.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198]
                (14 samples, 0.12%)
            </title>
            <rect x="498.5" y="627.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="501.5" y="638.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (21 samples, 0.19%)</title>
            <rect x="500.0" y="627.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="503.0" y="638.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (14 samples, 0.12%)</title>
            <rect x="500.7" y="611.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="503.7" y="622.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (4 samples, 0.04%)</title>
            <rect x="502.4" y="659.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="505.4" y="670.0"></text>
        </g>
        <g>
            <title>__send (5 samples, 0.04%)</title>
            <rect x="502.8" y="659.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="505.8" y="670.0"></text>
        </g>
        <g>
            <title>jni_GetByteArrayRegion (6 samples, 0.05%)</title>
            <rect x="503.5" y="659.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="506.5" y="670.0"></text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (9 samples, 0.08%)</title>
            <rect x="504.1" y="691.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="507.1" y="702.0"></text>
        </g>
        <g>
            <title>__send (2,874 samples, 25.49%)</title>
            <rect x="505.0" y="691.0" width="300.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="508.0" y="702.0">__send</text>
        </g>
        <g>
            <title>[unknown] (2,778 samples, 24.64%)</title>
            <rect x="515.1" y="675.0" width="290.7" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="518.1" y="686.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,778 samples, 24.64%)</title>
            <rect x="515.1" y="659.0" width="290.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="518.1" y="670.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,726 samples, 24.18%)</title>
            <rect x="520.5" y="643.0" width="285.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="523.5" y="654.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,720 samples, 24.12%)</title>
            <rect x="521.1" y="627.0" width="284.7" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="524.1" y="638.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,672 samples, 23.70%)</title>
            <rect x="526.2" y="611.0" width="279.6" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="529.2" y="622.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,647 samples, 23.48%)</title>
            <rect x="528.8" y="595.0" width="277.0" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="531.8" y="606.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,620 samples, 23.24%)</title>
            <rect x="531.6" y="579.0" width="274.2" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="534.6" y="590.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,612 samples, 23.17%)</title>
            <rect x="532.4" y="563.0" width="273.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="535.4" y="574.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,451 samples, 21.74%)</title>
            <rect x="549.3" y="547.0" width="256.5" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="552.3" y="558.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,371 samples, 21.03%)</title>
            <rect x="557.7" y="531.0" width="248.1" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="560.7" y="542.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,268 samples, 20.12%)</title>
            <rect x="568.4" y="515.0" width="237.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="571.4" y="526.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,195 samples, 19.47%)</title>
            <rect x="576.1" y="499.0" width="229.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="579.1" y="510.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,054 samples, 18.22%)</title>
            <rect x="590.8" y="483.0" width="215.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="593.8" y="494.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,973 samples, 17.50%)</title>
            <rect x="599.3" y="467.0" width="206.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="602.3" y="478.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,931 samples, 17.13%)</title>
            <rect x="603.7" y="451.0" width="202.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="606.7" y="462.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,899 samples, 16.84%)</title>
            <rect x="607.1" y="435.0" width="198.7" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="610.1" y="446.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,807 samples, 16.03%)</title>
            <rect x="616.7" y="419.0" width="189.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="619.7" y="430.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,709 samples, 15.16%)</title>
            <rect x="626.9" y="403.0" width="178.9" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="629.9" y="414.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,547 samples, 13.72%)</title>
            <rect x="643.9" y="387.0" width="161.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="646.9" y="398.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,305 samples, 11.57%)</title>
            <rect x="669.2" y="371.0" width="136.6" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="672.2" y="382.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,242 samples, 11.02%)</title>
            <rect x="675.8" y="355.0" width="130.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="678.8" y="366.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,173 samples, 10.40%)</title>
            <rect x="683.0" y="339.0" width="122.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="686.0" y="350.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,128 samples, 10.00%)</title>
            <rect x="687.8" y="323.0" width="118.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="690.8" y="334.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,103 samples, 9.78%)</title>
            <rect x="690.4" y="307.0" width="115.4" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="693.4" y="318.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,078 samples, 9.56%)</title>
            <rect x="693.0" y="291.0" width="112.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="696.0" y="302.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,041 samples, 9.23%)</title>
            <rect x="696.9" y="275.0" width="108.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="699.9" y="286.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,013 samples, 8.98%)</title>
            <rect x="699.8" y="259.0" width="106.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
            <text x="702.8" y="270.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (961 samples, 8.52%)</title>
            <rect x="705.2" y="243.0" width="100.6" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="708.2" y="254.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (947 samples, 8.40%)</title>
            <rect x="706.7" y="227.0" width="99.1" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="709.7" y="238.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (907 samples, 8.04%)</title>
            <rect x="710.9" y="211.0" width="94.9" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="713.9" y="222.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (840 samples, 7.45%)</title>
            <rect x="717.9" y="195.0" width="87.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="720.9" y="206.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (710 samples, 6.30%)</title>
            <rect x="731.5" y="179.0" width="74.3" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="734.5" y="190.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (636 samples, 5.64%)</title>
            <rect x="739.2" y="163.0" width="66.6" height="15" fill="#f87878" rx="2" ry="2"/>
            <text x="742.2" y="174.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (493 samples, 4.37%)</title>
            <rect x="754.2" y="147.0" width="51.6" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="757.2" y="158.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (379 samples, 3.36%)</title>
            <rect x="766.1" y="131.0" width="39.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="769.1" y="142.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (346 samples, 3.07%)</title>
            <rect x="769.6" y="115.0" width="36.2" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="772.6" y="126.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (331 samples, 2.94%)</title>
            <rect x="771.2" y="99.0" width="34.6" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="774.2" y="110.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (44 samples, 0.39%)</title>
            <rect x="801.2" y="83.0" width="4.6" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="804.2" y="94.0"></text>
        </g>
        <g>
            <title>[unknown] (36 samples, 0.32%)</title>
            <rect x="802.0" y="67.0" width="3.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="805.0" y="78.0"></text>
        </g>
        <g>
            <title>[unknown] (10 samples, 0.09%)</title>
            <rect x="804.8" y="51.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="807.8" y="62.0"></text>
        </g>
        <g>
            <title>[unknown] (5 samples, 0.04%)</title>
            <rect x="805.3" y="35.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="808.3" y="46.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (4 samples, 0.04%)</title>
            <rect x="805.9" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="808.9" y="734.0"></text>
        </g>
        <g>
            <title>gettimeofday (4 samples, 0.04%)</title>
            <rect x="805.9" y="707.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="808.9" y="718.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (52 samples, 0.46%)</title>
            <rect x="806.3" y="771.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="809.3" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (39 samples, 0.35%)</title>
            <rect x="807.7" y="755.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="810.7" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (25 samples, 0.22%)</title>
            <rect x="807.8" y="739.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="810.8" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/String.coder (7 samples, 0.06%)</title>
            <rect x="809.7" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="812.7" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.12%)</title>
            <rect x="810.4" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="813.4" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toLowerCase (3 samples, 0.03%)</title>
            <rect x="810.8" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="813.8" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (6 samples, 0.05%)</title>
            <rect x="811.1" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="814.1" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (6 samples, 0.05%)</title>
            <rect x="811.1" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="814.1" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.05%)</title>
            <rect x="811.1" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="814.1" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/server/Server.incRequestsProcessed (4 samples, 0.04%)</title>
            <rect x="812.1" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="815.1" y="782.0"></text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (2,804 samples, 24.87%)</title>
            <rect x="812.6" y="883.0" width="293.5" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="815.6" y="894.0">one/nio/server/SelectorThread.run</text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.hasNext (6 samples, 0.05%)</title>
            <rect x="814.8" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="817.8" y="878.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.next (34 samples, 0.30%)</title>
            <rect x="815.4" y="867.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="818.4" y="878.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.next (34 samples, 0.30%)</title>
            <rect x="815.4" y="851.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="818.4" y="862.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector.select (935 samples, 8.29%)</title>
            <rect x="819.0" y="867.0" width="97.8" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="822.0" y="878.0">one/nio/net..</text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.&lt;init&gt; (41 samples, 0.36%)</title>
            <rect x="820.4" y="851.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="823.4" y="862.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.findNext (27 samples, 0.24%)</title>
            <rect x="821.8" y="835.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="824.8" y="846.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector.epollWait (881 samples, 7.81%)</title>
            <rect x="824.6" y="851.0" width="92.2" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="827.6" y="862.0">one/nio/net..</text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSelector_epollWait (12 samples, 0.11%)</title>
            <rect x="831.1" y="835.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="834.1" y="846.0"></text>
        </g>
        <g>
            <title>[unknown] (766 samples, 6.79%)</title>
            <rect x="832.4" y="835.0" width="80.2" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="835.4" y="846.0">[unknown]</text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (16 samples, 0.14%)</title>
            <rect x="832.4" y="819.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="835.4" y="830.0"></text>
        </g>
        <g>
            <title>epoll_wait (744 samples, 6.60%)</title>
            <rect x="834.7" y="819.0" width="77.9" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="837.7" y="830.0">epoll_wait</text>
        </g>
        <g>
            <title>[unknown] (594 samples, 5.27%)</title>
            <rect x="850.4" y="803.0" width="62.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="853.4" y="814.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (594 samples, 5.27%)</title>
            <rect x="850.4" y="787.0" width="62.2" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="853.4" y="798.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (546 samples, 4.84%)</title>
            <rect x="855.4" y="771.0" width="57.2" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="858.4" y="782.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (519 samples, 4.60%)</title>
            <rect x="858.2" y="755.0" width="54.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="861.2" y="766.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (481 samples, 4.27%)</title>
            <rect x="862.2" y="739.0" width="50.4" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="865.2" y="750.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (427 samples, 3.79%)</title>
            <rect x="867.9" y="723.0" width="44.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="870.9" y="734.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (315 samples, 2.79%)</title>
            <rect x="879.6" y="707.0" width="33.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="882.6" y="718.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (228 samples, 2.02%)</title>
            <rect x="888.7" y="691.0" width="23.9" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="891.7" y="702.0">[..</text>
        </g>
        <g>
            <title>[unknown] (107 samples, 0.95%)</title>
            <rect x="901.4" y="675.0" width="11.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
            <text x="904.4" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.07%)</title>
            <rect x="911.7" y="659.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="914.7" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.05%)</title>
            <rect x="911.9" y="643.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="914.9" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.05%)</title>
            <rect x="911.9" y="627.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="914.9" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (5 samples, 0.04%)</title>
            <rect x="912.0" y="611.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="915.0" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.04%)</title>
            <rect x="912.1" y="595.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="915.1" y="606.0"></text>
        </g>
        <g>
            <title>_init (3 samples, 0.03%)</title>
            <rect x="912.6" y="835.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="915.6" y="846.0"></text>
        </g>
        <g>
            <title>clock_gettime (6 samples, 0.05%)</title>
            <rect x="912.9" y="835.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="915.9" y="846.0"></text>
        </g>
        <g>
            <title>epoll_wait (10 samples, 0.09%)</title>
            <rect x="913.5" y="835.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="916.5" y="846.0"></text>
        </g>
        <g>
            <title>gettimeofday (4 samples, 0.04%)</title>
            <rect x="914.5" y="835.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="917.5" y="846.0"></text>
        </g>
        <g>
            <title>clock_gettime (4 samples, 0.04%)</title>
            <rect x="914.5" y="819.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="917.5" y="830.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (4 samples, 0.04%)</title>
            <rect x="914.5" y="803.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="917.5" y="814.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (17 samples, 0.15%)</title>
            <rect x="915.0" y="835.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="918.0" y="846.0"></text>
        </g>
        <g>
            <title>gettimeofday (17 samples, 0.15%)</title>
            <rect x="915.0" y="819.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="918.0" y="830.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (5 samples, 0.04%)</title>
            <rect x="915.0" y="803.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="918.0" y="814.0"></text>
        </g>
        <g>
            <title>clock_gettime (12 samples, 0.11%)</title>
            <rect x="915.5" y="803.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="918.5" y="814.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (5 samples, 0.04%)</title>
            <rect x="916.2" y="787.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="919.2" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.process (1,808 samples, 16.04%)</title>
            <rect x="916.8" y="867.0" width="189.3" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="919.8" y="878.0">one/nio/net/Session.process</text>
        </g>
        <g>
            <title>_init (3 samples, 0.03%)</title>
            <rect x="918.9" y="851.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="921.9" y="862.0"></text>
        </g>
        <g>
            <title>gettimeofday (8 samples, 0.07%)</title>
            <rect x="919.3" y="851.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="922.3" y="862.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (1,767 samples, 15.67%)</title>
            <rect x="920.1" y="851.0" width="184.9" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="923.1" y="862.0">one/nio/http/HttpSession..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (1,121 samples, 9.94%)</title>
            <rect x="921.5" y="835.0" width="117.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="924.5" y="846.0">one/nio/http/H..</text>
        </g>
        <g>
            <title>jbyte_arraycopy (4 samples, 0.04%)</title>
            <rect x="924.7" y="819.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
            <text x="927.7" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (753 samples, 6.68%)</title>
            <rect x="925.3" y="819.0" width="78.8" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="928.3" y="830.0">one/nio/h..</text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (753 samples, 6.68%)</title>
            <rect x="925.3" y="803.0" width="78.8" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="928.3" y="814.0">one/nio/h..</text>
        </g>
        <g>
            <title>RequestHandler1_daoMethods.handleRequest (641 samples, 5.69%)</title>
            <rect x="925.7" y="787.0" width="67.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="928.7" y="798.0">Request..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (49 samples, 0.43%)</title>
            <rect x="926.1" y="771.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="929.1" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (12 samples, 0.11%)</title>
            <rect x="927.1" y="755.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="930.1" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (11 samples, 0.10%)</title>
            <rect x="927.2" y="739.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="930.2" y="750.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (4 samples, 0.04%)</title>
            <rect x="927.4" y="723.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="930.4" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/URLEncoder.decode (5 samples, 0.04%)</title>
            <rect x="927.8" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="930.8" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.startsWith (14 samples, 0.12%)</title>
            <rect x="928.4" y="755.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="931.4" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (12 samples, 0.11%)</title>
            <rect x="928.6" y="739.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="931.6" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/String.coder (4 samples, 0.04%)</title>
            <rect x="929.4" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="932.4" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/URLEncoder.decode (11 samples, 0.10%)</title>
            <rect x="930.0" y="755.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="933.0" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (9 samples, 0.08%)</title>
            <rect x="930.2" y="739.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="933.2" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (9 samples, 0.08%)</title>
            <rect x="930.2" y="723.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="933.2" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (8 samples, 0.07%)</title>
            <rect x="930.3" y="707.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="933.3" y="718.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.daoMethods (589 samples, 5.22%)</title>
            <rect x="931.2" y="771.0" width="61.6" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="934.2" y="782.0">ru/mai..</text>
        </g>
        <g>
            <title>java/lang/String.getBytes (15 samples, 0.13%)</title>
            <rect x="932.1" y="755.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="935.1" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encode (14 samples, 0.12%)</title>
            <rect x="932.2" y="739.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="935.2" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.12%)</title>
            <rect x="932.2" y="723.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="935.2" y="734.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOf (11 samples, 0.10%)</title>
            <rect x="932.5" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="935.5" y="718.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (42 samples, 0.37%)</title>
            <rect x="933.8" y="755.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="936.8" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (36 samples, 0.32%)</title>
            <rect x="934.1" y="739.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="937.1" y="750.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.&lt;init&gt; (33 samples, 0.29%)</title>
            <rect x="934.4" y="723.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="937.4" y="734.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.29%)</title>
            <rect x="934.4" y="707.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="937.4" y="718.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.&lt;init&gt; (31 samples, 0.27%)</title>
            <rect x="934.6" y="691.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="937.6" y="702.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (7 samples, 0.06%)</title>
            <rect x="937.0" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="940.0" y="686.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (7 samples, 0.06%)</title>
            <rect x="937.0" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="940.0" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.position (7 samples, 0.06%)</title>
            <rect x="937.0" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="940.0" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.03%)</title>
            <rect x="937.9" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="940.9" y="750.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/Node.getNodeName (19 samples, 0.17%)</title>
            <rect x="938.2" y="755.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="941.2" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.hashCode (18 samples, 0.16%)</title>
            <rect x="938.3" y="739.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="941.3" y="750.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.executeAsync (503 samples, 4.46%)</title>
            <rect x="940.2" y="755.0" width="52.6" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="943.2" y="766.0">ru/ma..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (501 samples, 4.44%)</title>
            <rect x="940.4" y="739.0" width="52.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="943.4" y="750.0">java/..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.offer (500 samples, 4.43%)</title>
            <rect x="940.5" y="723.0" width="52.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="943.5" y="734.0">java/..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.enqueue (10 samples, 0.09%)</title>
            <rect x="942.7" y="707.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="945.7" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (430 samples, 3.81%)</title>
            <rect x="943.7" y="707.0" width="45.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="946.7" y="718.0">java..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (428 samples, 3.80%)</title>
            <rect x="944.0" y="691.0" width="44.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="947.0" y="702.0">java..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (428 samples, 3.80%)</title>
            <rect x="944.0" y="675.0" width="44.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="947.0" y="686.0">java..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (428 samples, 3.80%)</title>
            <rect x="944.0" y="659.0" width="44.7" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="947.0" y="670.0">java..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (428 samples, 3.80%)</title>
            <rect x="944.0" y="643.0" width="44.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="947.0" y="654.0">java..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (428 samples, 3.80%)</title>
            <rect x="944.0" y="627.0" width="44.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="947.0" y="638.0">jdk/..</text>
        </g>
        <g>
            <title>ThreadsListHandle::~ThreadsListHandle() (4 samples, 0.04%)</title>
            <rect x="944.4" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="947.4" y="622.0"></text>
        </g>
        <g>
            <title>Unsafe_Unpark (80 samples, 0.71%)</title>
            <rect x="944.8" y="611.0" width="8.4" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="947.8" y="622.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (6
                samples, 0.05%)
            </title>
            <rect x="946.3" y="595.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="949.3" y="606.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.03%)</title>
            <rect x="946.9" y="595.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="949.9" y="606.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples,
                0.09%)
            </title>
            <rect x="947.2" y="595.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="950.2" y="606.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_lock (21 samples, 0.19%)</title>
            <rect x="948.3" y="595.0" width="2.2" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="951.3" y="606.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::thread(oopDesc*) (4 samples, 0.04%)</title>
            <rect x="950.8" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="953.8" y="606.0"></text>
        </g>
        <g>
            <title>oopDesc::address_field(int) const (10 samples, 0.09%)</title>
            <rect x="951.2" y="595.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="954.2" y="606.0"></text>
        </g>
        <g>
            <title>pthread_mutex_lock (6 samples, 0.05%)</title>
            <rect x="952.2" y="595.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="955.2" y="606.0"></text>
        </g>
        <g>
            <title>pthread_mutex_unlock (3 samples, 0.03%)</title>
            <rect x="952.8" y="595.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="955.8" y="606.0"></text>
        </g>
        <g>
            <title>__pthread_cond_signal (3 samples, 0.03%)</title>
            <rect x="953.2" y="611.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="956.2" y="622.0"></text>
        </g>
        <g>
            <title>__tls_get_addr (13 samples, 0.12%)</title>
            <rect x="953.5" y="611.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="956.5" y="622.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (320 samples, 2.84%)</title>
            <rect x="955.3" y="611.0" width="33.4" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="958.3" y="622.0">pt..</text>
        </g>
        <g>
            <title>[unknown] (267 samples, 2.37%)</title>
            <rect x="960.8" y="595.0" width="27.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="963.8" y="606.0">[..</text>
        </g>
        <g>
            <title>[unknown] (267 samples, 2.37%)</title>
            <rect x="960.8" y="579.0" width="27.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
            <text x="963.8" y="590.0">[..</text>
        </g>
        <g>
            <title>[unknown] (248 samples, 2.20%)</title>
            <rect x="962.8" y="563.0" width="25.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="965.8" y="574.0">[..</text>
        </g>
        <g>
            <title>[unknown] (245 samples, 2.17%)</title>
            <rect x="963.1" y="547.0" width="25.6" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="966.1" y="558.0">[..</text>
        </g>
        <g>
            <title>[unknown] (244 samples, 2.16%)</title>
            <rect x="963.2" y="531.0" width="25.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="966.2" y="542.0">[..</text>
        </g>
        <g>
            <title>[unknown] (180 samples, 1.60%)</title>
            <rect x="969.9" y="515.0" width="18.8" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="972.9" y="526.0"></text>
        </g>
        <g>
            <title>[unknown] (165 samples, 1.46%)</title>
            <rect x="971.5" y="499.0" width="17.2" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="974.5" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (160 samples, 1.42%)</title>
            <rect x="972.0" y="483.0" width="16.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="975.0" y="494.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (20 samples, 0.18%)
            </title>
            <rect x="988.7" y="707.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="991.7" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (17 samples, 0.15%)
            </title>
            <rect x="989.1" y="691.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="992.1" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (15 samples, 0.13%)</title>
            <rect x="989.3" y="675.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="992.3" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (3 samples,
                0.03%)
            </title>
            <rect x="989.3" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="992.3" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (12 samples, 0.11%)</title>
            <rect x="989.6" y="659.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="992.6" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (6 samples, 0.05%)</title>
            <rect x="989.9" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="992.9" y="654.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LL_V (6 samples, 0.05%)</title>
            <rect x="989.9" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="992.9" y="638.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (6 samples, 0.05%)</title>
            <rect x="989.9" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="992.9" y="622.0"></text>
        </g>
        <g>
            <title>java/util/Objects.requireNonNull (3 samples, 0.03%)</title>
            <rect x="990.2" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="993.2" y="606.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (3 samples, 0.03%)</title>
            <rect x="990.5" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="993.5" y="654.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.03%)</title>
            <rect x="990.5" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="993.5" y="638.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.03%)</title>
            <rect x="990.5" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="993.5" y="622.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (15 samples, 0.13%)</title>
            <rect x="990.8" y="707.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="993.8" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.12%)</title>
            <rect x="991.0" y="691.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="994.0" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.04%)</title>
            <rect x="991.7" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="994.7" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.04%)</title>
            <rect x="991.7" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="994.7" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.03%)</title>
            <rect x="991.9" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="994.9" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.04%)</title>
            <rect x="992.4" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="995.4" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.04%)</title>
            <rect x="992.4" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="995.4" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.findHandlerByHost (15 samples, 0.13%)</title>
            <rect x="992.8" y="787.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="995.8" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/http/PathMapper.find (32 samples, 0.28%)</title>
            <rect x="994.4" y="787.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="997.4" y="798.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.get (32 samples, 0.28%)</title>
            <rect x="994.4" y="771.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="997.4" y="782.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.getNode (17 samples, 0.15%)</title>
            <rect x="994.5" y="755.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="997.5" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.equals (14 samples, 0.12%)</title>
            <rect x="994.8" y="739.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="997.8" y="750.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.hash (14 samples, 0.12%)</title>
            <rect x="996.3" y="755.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="999.3" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.hashCode (8 samples, 0.07%)</title>
            <rect x="996.9" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="999.9" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getPath (61 samples, 0.54%)</title>
            <rect x="997.7" y="787.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="1000.7" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (61 samples, 0.54%)</title>
            <rect x="997.7" y="771.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1000.7" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (61 samples, 0.54%)</title>
            <rect x="997.7" y="755.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1000.7" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (58 samples, 0.51%)</title>
            <rect x="997.9" y="739.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="1000.9" y="750.0"></text>
        </g>
        <g>
            <title>RequestHandler1_daoMethods.handleRequest (23 samples, 0.20%)</title>
            <rect x="998.0" y="723.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="1001.0" y="734.0"></text>
        </g>
        <g>
            <title>itable stub (33 samples, 0.29%)</title>
            <rect x="1000.4" y="723.0" width="3.4" height="15" fill="#e96464" rx="2" ry="2"/>
            <text x="1003.4" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.parseRequest (145 samples, 1.29%)</title>
            <rect x="1004.1" y="819.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1007.1" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (73 samples, 0.65%)</title>
            <rect x="1004.2" y="803.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="1007.2" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (31 samples, 0.27%)</title>
            <rect x="1008.6" y="787.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1011.6" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (29 samples, 0.26%)</title>
            <rect x="1008.8" y="771.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1011.8" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (27 samples, 0.24%)</title>
            <rect x="1009.0" y="755.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1012.0" y="766.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (4 samples, 0.04%)</title>
            <rect x="1011.5" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1014.5" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (39 samples, 0.35%)</title>
            <rect x="1011.9" y="803.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1014.9" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (39 samples, 0.35%)</title>
            <rect x="1011.9" y="787.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1014.9" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.startsWith (32 samples, 0.28%)</title>
            <rect x="1016.0" y="803.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1019.0" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.startParsingRequestBody (34 samples, 0.30%)</title>
            <rect x="1019.3" y="819.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="1022.3" y="830.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (27 samples, 0.24%)</title>
            <rect x="1020.0" y="803.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1023.0" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (24 samples, 0.21%)</title>
            <rect x="1020.4" y="787.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1023.4" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Character.digit (15 samples, 0.13%)</title>
            <rect x="1021.3" y="771.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="1024.3" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/Character.digit (13 samples, 0.12%)</title>
            <rect x="1021.5" y="755.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="1024.5" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.digit (13 samples, 0.12%)</title>
            <rect x="1021.5" y="739.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="1024.5" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.addHeader (46 samples, 0.41%)</title>
            <rect x="1022.9" y="819.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1025.9" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (69 samples, 0.61%)</title>
            <rect x="1027.7" y="819.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="1030.7" y="830.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (35 samples, 0.31%)</title>
            <rect x="1028.4" y="803.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1031.4" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/String.isLatin1 (3 samples, 0.03%)</title>
            <rect x="1029.0" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1032.0" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.12%)</title>
            <rect x="1029.4" y="787.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="1032.4" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toLowerCase (3 samples, 0.03%)</title>
            <rect x="1029.6" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="1032.6" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toLowerCase (3 samples, 0.03%)</title>
            <rect x="1029.6" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="1032.6" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.03%)</title>
            <rect x="1029.6" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1032.6" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (8 samples, 0.07%)</title>
            <rect x="1029.9" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="1032.9" y="782.0"></text>
        </g>
        <g>
            <title>jlong_disjoint_arraycopy (13 samples, 0.12%)</title>
            <rect x="1030.7" y="787.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="1033.7" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (27 samples, 0.24%)</title>
            <rect x="1032.1" y="803.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="1035.1" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (22 samples, 0.20%)</title>
            <rect x="1032.6" y="787.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="1035.6" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (9 samples, 0.08%)</title>
            <rect x="1032.7" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="1035.7" y="782.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (6 samples, 0.05%)</title>
            <rect x="1033.0" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1036.0" y="766.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (12 samples, 0.11%)</title>
            <rect x="1033.6" y="771.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="1036.6" y="782.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (37 samples, 0.33%)</title>
            <rect x="1034.9" y="819.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1037.9" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (37 samples, 0.33%)</title>
            <rect x="1034.9" y="803.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="1037.9" y="814.0"></text>
        </g>
        <g>
            <title>sun/misc/Unsafe.getByte (3 samples, 0.03%)</title>
            <rect x="1038.5" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="1041.5" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.read (633 samples, 5.61%)</title>
            <rect x="1038.8" y="835.0" width="66.2" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="1041.8" y="846.0">one/nio..</text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.read (628 samples, 5.57%)</title>
            <rect x="1039.3" y="819.0" width="65.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1042.3" y="830.0">one/nio..</text>
        </g>
        <g>
            <title>[unknown] (148 samples, 1.31%)</title>
            <rect x="1041.0" y="803.0" width="15.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="1044.0" y="814.0"></text>
        </g>
        <g>
            <title>[unknown] (148 samples, 1.31%)</title>
            <rect x="1041.0" y="787.0" width="15.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="1044.0" y="798.0"></text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_read (131 samples, 1.16%)</title>
            <rect x="1041.0" y="771.0" width="13.7" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="1044.0" y="782.0"></text>
        </g>
        <g>
            <title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;,
                (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.05%)
            </title>
            <rect x="1042.7" y="755.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1045.7" y="766.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (6
                samples, 0.05%)
            </title>
            <rect x="1043.4" y="755.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1046.4" y="766.0"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (6 samples, 0.05%)</title>
            <rect x="1044.0" y="755.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="1047.0" y="766.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (3 samples, 0.03%)</title>
            <rect x="1044.6" y="755.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="1047.6" y="766.0"></text>
        </g>
        <g>
            <title>jni_SetByteArrayRegion (91 samples, 0.81%)</title>
            <rect x="1044.9" y="755.0" width="9.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="1047.9" y="766.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (8 samples, 0.07%)</title>
            <rect x="1046.1" y="739.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1049.1" y="750.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198]
                (22 samples, 0.20%)
            </title>
            <rect x="1047.2" y="739.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1050.2" y="750.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (45 samples, 0.40%)</title>
            <rect x="1049.7" y="739.0" width="4.7" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="1052.7" y="750.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (23 samples, 0.20%)</title>
            <rect x="1052.0" y="723.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1055.0" y="734.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (8 samples, 0.07%)</title>
            <rect x="1054.9" y="771.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="1057.9" y="782.0"></text>
        </g>
        <g>
            <title>jni_SetByteArrayRegion (7 samples, 0.06%)</title>
            <rect x="1055.7" y="771.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="1058.7" y="782.0"></text>
        </g>
        <g>
            <title>__GI___recv (462 samples, 4.10%)</title>
            <rect x="1056.5" y="803.0" width="48.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="1059.5" y="814.0">__GI..</text>
        </g>
        <g>
            <title>[unknown] (358 samples, 3.18%)</title>
            <rect x="1067.3" y="787.0" width="37.5" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="1070.3" y="798.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (358 samples, 3.18%)</title>
            <rect x="1067.3" y="771.0" width="37.5" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="1070.3" y="782.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (310 samples, 2.75%)</title>
            <rect x="1072.4" y="755.0" width="32.4" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="1075.4" y="766.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (302 samples, 2.68%)</title>
            <rect x="1073.2" y="739.0" width="31.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="1076.2" y="750.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (287 samples, 2.55%)</title>
            <rect x="1074.8" y="723.0" width="30.0" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="1077.8" y="734.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (268 samples, 2.38%)</title>
            <rect x="1076.8" y="707.0" width="28.0" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="1079.8" y="718.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (242 samples, 2.15%)</title>
            <rect x="1079.5" y="691.0" width="25.3" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="1082.5" y="702.0">[..</text>
        </g>
        <g>
            <title>[unknown] (200 samples, 1.77%)</title>
            <rect x="1083.9" y="675.0" width="20.9" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="1086.9" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (146 samples, 1.29%)</title>
            <rect x="1089.5" y="659.0" width="15.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="1092.5" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (94 samples, 0.83%)</title>
            <rect x="1095.0" y="643.0" width="9.8" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="1098.0" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.07%)</title>
            <rect x="1104.0" y="627.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="1107.0" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="1104.5" y="611.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="1107.5" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="1104.5" y="595.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="1107.5" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="1104.5" y="579.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="1107.5" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.03%)</title>
            <rect x="1104.5" y="563.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="1107.5" y="574.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (8 samples, 0.07%)</title>
            <rect x="1105.2" y="851.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1108.2" y="862.0"></text>
        </g>
        <g>
            <title>gettimeofday (6 samples, 0.05%)</title>
            <rect x="1105.4" y="835.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="1108.4" y="846.0"></text>
        </g>
        <g>
            <title>start_thread (798 samples, 7.08%)</title>
            <rect x="1106.5" y="883.0" width="83.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="1109.5" y="894.0">start_thr..</text>
        </g>
        <g>
            <title>thread_native_entry(Thread*) (798 samples, 7.08%)</title>
            <rect x="1106.5" y="867.0" width="83.5" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="1109.5" y="878.0">thread_na..</text>
        </g>
        <g>
            <title>Thread::call_run() (798 samples, 7.08%)</title>
            <rect x="1106.5" y="851.0" width="83.5" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1109.5" y="862.0">Thread::c..</text>
        </g>
        <g>
            <title>GangWorker::loop() (702 samples, 6.23%)</title>
            <rect x="1106.7" y="835.0" width="73.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1109.7" y="846.0">GangWork..</text>
        </g>
        <g>
            <title>G1CMConcurrentMarkingTask::work(unsigned int) (224 samples, 1.99%)</title>
            <rect x="1106.7" y="819.0" width="23.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1109.7" y="830.0">G..</text>
        </g>
        <g>
            <title>G1CMTask::do_marking_step(double, bool, bool) (221 samples, 1.96%)</title>
            <rect x="1106.9" y="803.0" width="23.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1109.9" y="814.0">G..</text>
        </g>
        <g>
            <title>G1CMBitMapClosure::do_addr(HeapWord*) (167 samples, 1.48%)</title>
            <rect x="1107.4" y="787.0" width="17.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1110.4" y="798.0"></text>
        </g>
        <g>
            <title>G1CMTask::drain_local_queue(bool) [clone .part.154] (97 samples, 0.86%)</title>
            <rect x="1108.6" y="771.0" width="10.1" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1111.6" y="782.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (87 samples, 0.77%)</title>
            <rect x="1109.4" y="755.0" width="9.1" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1112.4" y="766.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (81 samples, 0.72%)
            </title>
            <rect x="1109.9" y="739.0" width="8.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1112.9" y="750.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (69 samples, 0.61%)</title>
            <rect x="1110.9" y="723.0" width="7.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1113.9" y="734.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (27 samples, 0.24%)</title>
            <rect x="1115.0" y="707.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1118.0" y="718.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (3 samples, 0.03%)</title>
            <rect x="1117.8" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1120.8" y="718.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (3 samples, 0.03%)</title>
            <rect x="1118.8" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1121.8" y="782.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (54 samples, 0.48%)</title>
            <rect x="1119.1" y="771.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1122.1" y="782.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (35 samples, 0.31%)
            </title>
            <rect x="1120.7" y="755.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1123.7" y="766.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (30 samples, 0.27%)</title>
            <rect x="1121.1" y="739.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1124.1" y="750.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (14 samples, 0.12%)</title>
            <rect x="1122.8" y="723.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1125.8" y="734.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass,
                unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (3 samples, 0.03%)
            </title>
            <rect x="1124.4" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1127.4" y="766.0"></text>
        </g>
        <g>
            <title>G1CMTask::drain_local_queue(bool) [clone .part.154] (47 samples, 0.42%)</title>
            <rect x="1124.9" y="787.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1127.9" y="798.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (34 samples, 0.30%)</title>
            <rect x="1126.3" y="771.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1129.3" y="782.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (33 samples, 0.29%)
            </title>
            <rect x="1126.4" y="755.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1129.4" y="766.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (20 samples, 0.18%)</title>
            <rect x="1127.4" y="739.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1130.4" y="750.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (9 samples, 0.08%)</title>
            <rect x="1128.6" y="723.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1131.6" y="734.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (3 samples, 0.03%)</title>
            <rect x="1129.5" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1132.5" y="750.0"></text>
        </g>
        <g>
            <title>G1ParTask::work(unsigned int) (366 samples, 3.25%)</title>
            <rect x="1130.7" y="819.0" width="38.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1133.7" y="830.0">G1P..</text>
        </g>
        <g>
            <title>G1ParEvacuateFollowersClosure::do_void() (54 samples, 0.48%)</title>
            <rect x="1130.7" y="803.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1133.7" y="814.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::trim_queue() (3 samples, 0.03%)</title>
            <rect x="1131.1" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1134.1" y="798.0"></text>
        </g>
        <g>
            <title>SpinPause (45 samples, 0.40%)</title>
            <rect x="1131.6" y="787.0" width="4.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="1134.6" y="798.0"></text>
        </g>
        <g>
            <title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (300 samples, 2.66%)
            </title>
            <rect x="1136.4" y="803.0" width="31.4" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1139.4" y="814.0">G1..</text>
        </g>
        <g>
            <title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (300 samples, 2.66%)</title>
            <rect x="1136.4" y="787.0" width="31.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1139.4" y="798.0">G1..</text>
        </g>
        <g>
            <title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (300 samples,
                2.66%)
            </title>
            <rect x="1136.4" y="771.0" width="31.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1139.4" y="782.0">G1..</text>
        </g>
        <g>
            <title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (300 samples,
                2.66%)
            </title>
            <rect x="1136.4" y="755.0" width="31.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1139.4" y="766.0">Di..</text>
        </g>
        <g>
            <title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (300 samples, 2.66%)</title>
            <rect x="1136.4" y="739.0" width="31.4" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1139.4" y="750.0">G1..</text>
        </g>
        <g>
            <title>G1ParScanThreadState::trim_queue_partially() (222 samples, 1.97%)</title>
            <rect x="1136.9" y="723.0" width="23.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1139.9" y="734.0">G..</text>
        </g>
        <g>
            <title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (134 samples,
                1.19%)
            </title>
            <rect x="1145.5" y="707.0" width="14.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1148.5" y="718.0"></text>
        </g>
        <g>
            <title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass,
                unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (45 samples, 0.40%)
            </title>
            <rect x="1154.7" y="691.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1157.7" y="702.0"></text>
        </g>
        <g>
            <title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass,
                unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.03%)
            </title>
            <rect x="1159.8" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1162.8" y="718.0"></text>
        </g>
        <g>
            <title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (73
                samples, 0.65%)
            </title>
            <rect x="1160.2" y="723.0" width="7.6" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1163.2" y="734.0"></text>
        </g>
        <g>
            <title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion,
                G1ScanObjsDuringUpdateRSClosure*) (67 samples, 0.59%)
            </title>
            <rect x="1160.2" y="707.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1163.2" y="718.0"></text>
        </g>
        <g>
            <title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (16
                samples, 0.14%)
            </title>
            <rect x="1162.0" y="691.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1165.0" y="702.0"></text>
        </g>
        <g>
            <title>HeapRegion::block_size(HeapWord const*) const (8 samples, 0.07%)</title>
            <rect x="1162.8" y="675.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1165.8" y="686.0"></text>
        </g>
        <g>
            <title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.03%)</title>
            <rect x="1163.6" y="691.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1166.6" y="702.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (6 samples, 0.05%)</title>
            <rect x="1164.3" y="691.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1167.3" y="702.0"></text>
        </g>
        <g>
            <title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (9 samples,
                0.08%)
            </title>
            <rect x="1165.0" y="691.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1168.0" y="702.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass,
                unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (12 samples, 0.11%)
            </title>
            <rect x="1165.9" y="691.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1168.9" y="702.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (4 samples, 0.04%)</title>
            <rect x="1167.3" y="707.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1170.3" y="718.0"></text>
        </g>
        <g>
            <title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.04%)</title>
            <rect x="1167.8" y="803.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1170.8" y="814.0"></text>
        </g>
        <g>
            <title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples,
                0.04%)
            </title>
            <rect x="1167.8" y="787.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1170.8" y="798.0"></text>
        </g>
        <g>
            <title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.04%)</title>
            <rect x="1167.8" y="771.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1170.8" y="782.0"></text>
        </g>
        <g>
            <title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (4 samples, 0.04%)</title>
            <rect x="1167.8" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1170.8" y="766.0"></text>
        </g>
        <g>
            <title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (7 samples, 0.06%)</title>
            <rect x="1168.2" y="803.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1171.2" y="814.0"></text>
        </g>
        <g>
            <title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (7 samples,
                0.06%)
            </title>
            <rect x="1168.2" y="787.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1171.2" y="798.0"></text>
        </g>
        <g>
            <title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (6 samples, 0.05%)</title>
            <rect x="1168.3" y="771.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1171.3" y="782.0"></text>
        </g>
        <g>
            <title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (5 samples, 0.04%)</title>
            <rect x="1168.4" y="755.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1171.4" y="766.0"></text>
        </g>
        <g>
            <title>G1ParallelCleaningTask::work(unsigned int) (6 samples, 0.05%)</title>
            <rect x="1169.0" y="819.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1172.0" y="830.0"></text>
        </g>
        <g>
            <title>G1RebuildRemSetTask::work(unsigned int) (96 samples, 0.85%)</title>
            <rect x="1169.6" y="819.0" width="10.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1172.6" y="830.0"></text>
        </g>
        <g>
            <title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (96
                samples, 0.85%)
            </title>
            <rect x="1169.6" y="803.0" width="10.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1172.6" y="814.0"></text>
        </g>
        <g>
            <title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (94 samples,
                0.83%)
            </title>
            <rect x="1169.6" y="787.0" width="9.8" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1172.6" y="798.0"></text>
        </g>
        <g>
            <title>OtherRegionsTable::add_reference(void*, unsigned int) (4 samples, 0.04%)</title>
            <rect x="1174.3" y="771.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1177.3" y="782.0"></text>
        </g>
        <g>
            <title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (7
                samples, 0.06%)
            </title>
            <rect x="1174.7" y="771.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1177.7" y="782.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass,
                unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (37 samples, 0.33%)
            </title>
            <rect x="1175.5" y="771.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1178.5" y="782.0"></text>
        </g>
        <g>
            <title>OtherRegionsTable::add_reference(void*, unsigned int) (9 samples, 0.08%)</title>
            <rect x="1177.1" y="755.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1180.1" y="766.0"></text>
        </g>
        <g>
            <title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (12
                samples, 0.11%)
            </title>
            <rect x="1178.1" y="755.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1181.1" y="766.0"></text>
        </g>
        <g>
            <title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.03%)</title>
            <rect x="1179.7" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1182.7" y="830.0"></text>
        </g>
        <g>
            <title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.03%)</title>
            <rect x="1179.7" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1182.7" y="814.0"></text>
        </g>
        <g>
            <title>JavaThread::run() (79 samples, 0.70%)</title>
            <rect x="1180.2" y="835.0" width="8.2" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1183.2" y="846.0"></text>
        </g>
        <g>
            <title>JavaThread::thread_main_inner() (79 samples, 0.70%)</title>
            <rect x="1180.2" y="819.0" width="8.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1183.2" y="830.0"></text>
        </g>
        <g>
            <title>CompileBroker::compiler_thread_loop() (79 samples, 0.70%)</title>
            <rect x="1180.2" y="803.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1183.2" y="814.0"></text>
        </g>
        <g>
            <title>CompileBroker::invoke_compiler_on_method(CompileTask*) (79 samples, 0.70%)</title>
            <rect x="1180.2" y="787.0" width="8.2" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1183.2" y="798.0"></text>
        </g>
        <g>
            <title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (75 samples, 0.67%)</title>
            <rect x="1180.2" y="771.0" width="7.8" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1183.2" y="782.0"></text>
        </g>
        <g>
            <title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (75 samples,
                0.67%)
            </title>
            <rect x="1180.2" y="755.0" width="7.8" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1183.2" y="766.0"></text>
        </g>
        <g>
            <title>Compile::Code_Gen() (49 samples, 0.43%)</title>
            <rect x="1180.2" y="739.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1183.2" y="750.0"></text>
        </g>
        <g>
            <title>Matcher::match() (4 samples, 0.04%)</title>
            <rect x="1180.5" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1183.5" y="734.0"></text>
        </g>
        <g>
            <title>Matcher::xform(Node*, int) (3 samples, 0.03%)</title>
            <rect x="1180.6" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1183.6" y="718.0"></text>
        </g>
        <g>
            <title>PhaseCFG::do_global_code_motion() (4 samples, 0.04%)</title>
            <rect x="1180.9" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1183.9" y="734.0"></text>
        </g>
        <g>
            <title>PhaseCFG::global_code_motion() (4 samples, 0.04%)</title>
            <rect x="1180.9" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1183.9" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Register_Allocate() (37 samples, 0.33%)</title>
            <rect x="1181.4" y="723.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1184.4" y="734.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Select() (3 samples, 0.03%)</title>
            <rect x="1181.5" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1184.5" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::build_ifg_physical(ResourceArea*) (10 samples, 0.09%)</title>
            <rect x="1182.2" y="707.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1185.2" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 0.04%)</title>
            <rect x="1183.7" y="707.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1186.7" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIFG::Compute_Effective_Degree() (3 samples, 0.03%)</title>
            <rect x="1184.3" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1187.3" y="718.0"></text>
        </g>
        <g>
            <title>Compile::Optimize() (14 samples, 0.12%)</title>
            <rect x="1185.3" y="739.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1188.3" y="750.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (11 samples, 0.10%)</title>
            <rect x="1185.4" y="723.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1188.4" y="734.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 0.04%)
            </title>
            <rect x="1185.7" y="707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1188.7" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.03%)</title>
            <rect x="1185.9" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1188.9" y="702.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (12 samples, 0.11%)</title>
            <rect x="1186.8" y="739.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1189.8" y="750.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.11%)</title>
            <rect x="1186.8" y="723.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1189.8" y="734.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (12 samples, 0.11%)</title>
            <rect x="1186.8" y="707.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1189.8" y="718.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (12 samples, 0.11%)</title>
            <rect x="1186.8" y="691.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1189.8" y="702.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (12 samples, 0.11%)</title>
            <rect x="1186.8" y="675.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1189.8" y="686.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (12 samples, 0.11%)</title>
            <rect x="1186.8" y="659.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1189.8" y="670.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (10 samples, 0.09%)</title>
            <rect x="1186.9" y="643.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1189.9" y="654.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.09%)</title>
            <rect x="1186.9" y="627.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1189.9" y="638.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (10 samples, 0.09%)</title>
            <rect x="1186.9" y="611.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1189.9" y="622.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (10 samples, 0.09%)</title>
            <rect x="1186.9" y="595.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1189.9" y="606.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (10 samples, 0.09%)</title>
            <rect x="1186.9" y="579.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1189.9" y="590.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (9 samples, 0.08%)</title>
            <rect x="1186.9" y="563.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1189.9" y="574.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (8 samples, 0.07%)</title>
            <rect x="1186.9" y="547.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1189.9" y="558.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.07%)</title>
            <rect x="1186.9" y="531.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1189.9" y="542.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (8 samples, 0.07%)</title>
            <rect x="1186.9" y="515.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1189.9" y="526.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (8 samples, 0.07%)</title>
            <rect x="1186.9" y="499.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1189.9" y="510.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (8 samples, 0.07%)</title>
            <rect x="1186.9" y="483.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1189.9" y="494.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (6 samples, 0.05%)</title>
            <rect x="1186.9" y="467.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1189.9" y="478.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (5 samples, 0.04%)</title>
            <rect x="1187.0" y="451.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1190.0" y="462.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.04%)</title>
            <rect x="1187.0" y="435.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1190.0" y="446.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (5 samples, 0.04%)</title>
            <rect x="1187.0" y="419.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1190.0" y="430.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (5 samples, 0.04%)</title>
            <rect x="1187.0" y="403.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1190.0" y="414.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (5 samples, 0.04%)</title>
            <rect x="1187.0" y="387.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1190.0" y="398.0"></text>
        </g>
        <g>
            <title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.03%)</title>
            <rect x="1188.1" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1191.1" y="782.0"></text>
        </g>
        <g>
            <title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (3
                samples, 0.03%)
            </title>
            <rect x="1188.1" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1191.1" y="766.0"></text>
        </g>
        <g>
            <title>Compilation::compile_method() (3 samples, 0.03%)</title>
            <rect x="1188.1" y="739.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1191.1" y="750.0"></text>
        </g>
        <g>
            <title>Compilation::compile_java_method() (3 samples, 0.03%)</title>
            <rect x="1188.1" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1191.1" y="734.0"></text>
        </g>
        <g>
            <title>VMThread::run() (12 samples, 0.11%)</title>
            <rect x="1188.4" y="835.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1191.4" y="846.0"></text>
        </g>
        <g>
            <title>VMThread::loop() (11 samples, 0.10%)</title>
            <rect x="1188.4" y="819.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1191.4" y="830.0"></text>
        </g>
        <g>
            <title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (5 samples, 0.04%)</title>
            <rect x="1188.7" y="803.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1191.7" y="814.0"></text>
        </g>
        <g>
            <title>VM_Operation::evaluate() (5 samples, 0.04%)</title>
            <rect x="1188.7" y="787.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1191.7" y="798.0"></text>
        </g>
        <g>
            <title>VM_G1CollectForAllocation::doit() (4 samples, 0.04%)</title>
            <rect x="1188.8" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1191.8" y="782.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.04%)</title>
            <rect x="1188.8" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1191.8" y="766.0"></text>
        </g>
        <g>
            <title>WatcherThread::run() (3 samples, 0.03%)</title>
            <rect x="1189.7" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1192.7" y="846.0"></text>
        </g>
        <g>
            <title>WatcherThread::sleep() const (3 samples, 0.03%)</title>
            <rect x="1189.7" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1192.7" y="830.0"></text>
        </g>
    </g>
</svg>
