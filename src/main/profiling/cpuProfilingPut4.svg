<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950"
     xmlns="http://www.w3.org/2000/svg">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="933"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="933"></text>
    <g id="frames">
        <g>
            <title>all (25,957 samples, 100.00%)</title>
            <rect x="10.0" y="899.0" width="1180.0" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="13.0" y="910.0">all</text>
        </g>
        <g>
            <title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (27 samples, 0.10%)</title>
            <rect x="10.4" y="883.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="13.4" y="894.0"></text>
        </g>
        <g>
            <title>InstanceKlass::allocate_objArray(int, int, Thread*) (8 samples, 0.03%)</title>
            <rect x="10.7" y="867.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="13.7" y="878.0"></text>
        </g>
        <g>
            <title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.04%)</title>
            <rect x="11.1" y="867.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="14.1" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.04%)</title>
            <rect x="11.1" y="851.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="14.1" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (10 samples, 0.04%)</title>
            <rect x="11.1" y="835.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="14.1" y="846.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.03%)
            </title>
            <rect x="11.2" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="14.2" y="830.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title>
            <rect x="11.6" y="883.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="14.6" y="894.0"></text>
        </g>
        <g>
            <title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title>
            <rect x="11.6" y="867.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="14.6" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.03%)</title>
            <rect x="11.6" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="14.6" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (7 samples, 0.03%)</title>
            <rect x="11.6" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="14.6" y="846.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (28 samples, 0.11%)</title>
            <rect x="12.0" y="883.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="15.0" y="894.0"></text>
        </g>
        <g>
            <title>InstanceKlass::allocate_instance(Thread*) (27 samples, 0.10%)</title>
            <rect x="12.0" y="867.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="15.0" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (24 samples, 0.09%)</title>
            <rect x="12.1" y="851.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="15.1" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (22 samples, 0.08%)</title>
            <rect x="12.2" y="835.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="15.2" y="846.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (15 samples, 0.06%)
            </title>
            <rect x="12.4" y="819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="15.4" y="830.0"></text>
        </g>
        <g>
            <title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (35 samples, 0.13%)
            </title>
            <rect x="13.3" y="883.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="16.3" y="894.0"></text>
        </g>
        <g>
            <title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (32 samples, 0.12%)</title>
            <rect x="13.4" y="867.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="16.4" y="878.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) (8 samples, 0.03%)</title>
            <rect x="13.6" y="851.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="16.6" y="862.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (6 samples, 0.02%)</title>
            <rect x="13.6" y="835.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="16.6" y="846.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) [clone .part.96] (15 samples, 0.06%)</title>
            <rect x="14.0" y="851.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="17.0" y="862.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::EnterI(Thread*) (15 samples, 0.06%)</title>
            <rect x="14.0" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="17.0" y="846.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (10 samples, 0.04%)</title>
            <rect x="14.0" y="819.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="17.0" y="830.0"></text>
        </g>
        <g>
            <title>[not_walkable_Java] (24 samples, 0.09%)</title>
            <rect x="15.0" y="883.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="18.0" y="894.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.06%)</title>
            <rect x="15.2" y="867.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="18.2" y="878.0"></text>
        </g>
        <g>
            <title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (13 samples, 0.05%)</title>
            <rect x="15.3" y="851.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="18.3" y="862.0"></text>
        </g>
        <g>
            <title>frame::sender(RegisterMap*) const (11 samples, 0.04%)</title>
            <rect x="15.4" y="835.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="18.4" y="846.0"></text>
        </g>
        <g>
            <title>[unknown_Java] (152 samples, 0.59%)</title>
            <rect x="16.3" y="883.0" width="6.9" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="19.3" y="894.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.02%)</title>
            <rect x="22.7" y="867.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="25.7" y="878.0"></text>
        </g>
        <g>
            <title>__pthread_cond_timedwait (7 samples, 0.03%)</title>
            <rect x="23.3" y="883.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="26.3" y="894.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (10,729 samples, 41.33%)</title>
            <rect x="23.7" y="883.0" width="487.8" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="26.7" y="894.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,729 samples, 41.33%)</title>
            <rect x="23.7" y="867.0" width="487.8" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="26.7" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,729 samples, 41.33%)</title>
            <rect x="23.7" y="851.0" width="487.8" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="26.7" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (12 samples, 0.05%)</title>
            <rect x="24.2" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="27.2" y="846.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.05%)</title>
            <rect x="24.2" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="27.2" y="830.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (12 samples, 0.05%)</title>
            <rect x="24.2" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="27.2" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (12 samples, 0.05%)</title>
            <rect x="24.2" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="27.2" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (12 samples, 0.05%)</title>
            <rect x="24.2" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="27.2" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (12 samples, 0.05%)</title>
            <rect x="24.2" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="27.2" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (24 samples, 0.09%)</title>
            <rect x="24.7" y="835.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="27.7" y="846.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.09%)</title>
            <rect x="24.7" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="27.7" y="830.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (16 samples, 0.06%)</title>
            <rect x="25.1" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="28.1" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (16 samples, 0.06%)</title>
            <rect x="25.1" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="28.1" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (1,793 samples, 6.91%)</title>
            <rect x="25.8" y="835.0" width="81.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="28.8" y="846.0">java/util..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.take (1,763 samples, 6.79%)</title>
            <rect x="27.1" y="819.0" width="80.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="30.1" y="830.0">java/util..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,390 samples, 5.36%)
            </title>
            <rect x="27.7" y="803.0" width="63.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="30.7" y="814.0">java/ut..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (74 samples,
                0.29%)
            </title>
            <rect x="28.4" y="787.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="31.4" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (41 samples, 0.16%)</title>
            <rect x="29.8" y="771.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="32.8" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LI_V (13 samples, 0.05%)</title>
            <rect x="30.0" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="33.0" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarForm.getMemberName (8 samples, 0.03%)</title>
            <rect x="30.0" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="33.0" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LL_V (22 samples, 0.08%)</title>
            <rect x="30.6" y="755.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="33.6" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (11 samples, 0.04%)</title>
            <rect x="31.1" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="34.1" y="750.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (28 samples, 0.11%)</title>
            <rect x="31.7" y="787.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="34.7" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (6 samples, 0.02%)</title>
            <rect x="31.9" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="34.9" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (18 samples, 0.07%)</title>
            <rect x="32.2" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="35.2" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (18 samples, 0.07%)</title>
            <rect x="32.2" y="755.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="35.2" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (7 samples, 0.03%)</title>
            <rect x="32.7" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="35.7" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (7 samples, 0.03%)</title>
            <rect x="32.7" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="35.7" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (7 samples, 0.03%)</title>
            <rect x="32.7" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="35.7" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (170 samples, 0.65%)</title>
            <rect x="33.0" y="787.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="36.0" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (161 samples, 0.62%)</title>
            <rect x="33.4" y="771.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="36.4" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (144 samples, 0.55%)</title>
            <rect x="34.1" y="755.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="37.1" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (10 samples,
                0.04%)
            </title>
            <rect x="34.9" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="37.9" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (10 samples, 0.04%)</title>
            <rect x="34.9" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="37.9" y="734.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (116 samples, 0.45%)</title>
            <rect x="35.4" y="739.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="38.4" y="750.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (114 samples, 0.44%)</title>
            <rect x="35.5" y="723.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="38.5" y="734.0"></text>
        </g>
        <g>
            <title>Unsafe_Unpark (16 samples, 0.06%)</title>
            <rect x="35.5" y="707.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="38.5" y="718.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (96 samples, 0.37%)</title>
            <rect x="36.3" y="707.0" width="4.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="39.3" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (75 samples, 0.29%)</title>
            <rect x="37.2" y="691.0" width="3.4" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="40.2" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (75 samples, 0.29%)</title>
            <rect x="37.2" y="675.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="40.2" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (68 samples, 0.26%)</title>
            <rect x="37.5" y="659.0" width="3.1" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="40.5" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (67 samples, 0.26%)</title>
            <rect x="37.6" y="643.0" width="3.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="40.6" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (67 samples, 0.26%)</title>
            <rect x="37.6" y="627.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="40.6" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (62 samples, 0.24%)</title>
            <rect x="37.8" y="611.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="40.8" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (57 samples, 0.22%)</title>
            <rect x="38.0" y="595.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="41.0" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (53 samples, 0.20%)</title>
            <rect x="38.2" y="579.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="41.2" y="590.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (6 samples, 0.02%)</title>
            <rect x="40.7" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="43.7" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (1,098 samples, 4.23%)</title>
            <rect x="41.0" y="787.0" width="49.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="44.0" y="798.0">java/..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (1,093 samples, 4.21%)</title>
            <rect x="41.2" y="771.0" width="49.7" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="44.2" y="782.0">jdk/i..</text>
        </g>
        <g>
            <title>Parker::park(bool, long) (6 samples, 0.02%)</title>
            <rect x="41.8" y="755.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="44.8" y="766.0"></text>
        </g>
        <g>
            <title>Unsafe_Park (598 samples, 2.30%)</title>
            <rect x="42.3" y="755.0" width="27.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="45.3" y="766.0">U..</text>
        </g>
        <g>
            <title>JavaFrameAnchor::make_walkable(JavaThread*) (11 samples, 0.04%)</title>
            <rect x="43.0" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="46.0" y="750.0"></text>
        </g>
        <g>
            <title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (11 samples, 0.04%)</title>
            <rect x="43.5" y="739.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="46.5" y="750.0"></text>
        </g>
        <g>
            <title>Parker::park(bool, long) (78 samples, 0.30%)</title>
            <rect x="44.3" y="739.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="47.3" y="750.0"></text>
        </g>
        <g>
            <title>Monitor::lock_without_safepoint_check() (19 samples, 0.07%)</title>
            <rect x="46.1" y="723.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="49.1" y="734.0"></text>
        </g>
        <g>
            <title>__tls_get_addr (14 samples, 0.05%)</title>
            <rect x="47.1" y="723.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="50.1" y="734.0"></text>
        </g>
        <g>
            <title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.03%)</title>
            <rect x="47.8" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="50.8" y="750.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216]
                (11 samples, 0.04%)
            </title>
            <rect x="48.1" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="51.1" y="750.0"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (383 samples, 1.48%)</title>
            <rect x="48.6" y="739.0" width="17.5" height="15" fill="#f57474" rx="2" ry="2"/>
            <text x="51.6" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (252 samples, 0.97%)</title>
            <rect x="54.6" y="723.0" width="11.5" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="57.6" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (252 samples, 0.97%)</title>
            <rect x="54.6" y="707.0" width="11.5" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="57.6" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (91 samples, 0.35%)</title>
            <rect x="61.9" y="691.0" width="4.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
            <text x="64.9" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (77 samples, 0.30%)</title>
            <rect x="62.6" y="675.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="65.6" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (71 samples, 0.27%)</title>
            <rect x="62.8" y="659.0" width="3.3" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="65.8" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (21 samples, 0.08%)</title>
            <rect x="65.1" y="643.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="68.1" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.03%)</title>
            <rect x="65.7" y="627.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="68.7" y="638.0"></text>
        </g>
        <g>
            <title>__pthread_cond_wait (14 samples, 0.05%)</title>
            <rect x="66.1" y="739.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="69.1" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_trylock (9 samples, 0.03%)</title>
            <rect x="66.7" y="739.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="69.7" y="750.0"></text>
        </g>
        <g>
            <title>__tls_get_addr (7 samples, 0.03%)</title>
            <rect x="67.1" y="739.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
            <text x="70.1" y="750.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::get_thread_status(oopDesc*) (8 samples, 0.03%)</title>
            <rect x="67.6" y="739.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="70.6" y="750.0"></text>
        </g>
        <g>
            <title>pthread_mutex_unlock (30 samples, 0.12%)</title>
            <rect x="68.1" y="739.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="71.1" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (469 samples, 1.81%)</title>
            <rect x="69.5" y="755.0" width="21.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="72.5" y="766.0">[..</text>
        </g>
        <g>
            <title>__pthread_cleanup_pop (6 samples, 0.02%)</title>
            <rect x="69.5" y="739.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="72.5" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_cond_wait (403 samples, 1.55%)</title>
            <rect x="69.9" y="739.0" width="18.3" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="72.9" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (239 samples, 0.92%)</title>
            <rect x="77.4" y="723.0" width="10.8" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="80.4" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (239 samples, 0.92%)</title>
            <rect x="77.4" y="707.0" width="10.8" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="80.4" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (166 samples, 0.64%)</title>
            <rect x="80.7" y="691.0" width="7.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="83.7" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (162 samples, 0.62%)</title>
            <rect x="80.9" y="675.0" width="7.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
            <text x="83.9" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (156 samples, 0.60%)</title>
            <rect x="81.1" y="659.0" width="7.1" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="84.1" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (141 samples, 0.54%)</title>
            <rect x="81.8" y="643.0" width="6.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="84.8" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (103 samples, 0.40%)</title>
            <rect x="83.6" y="627.0" width="4.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="86.6" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (59 samples, 0.23%)</title>
            <rect x="85.6" y="611.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="88.6" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (38 samples, 0.15%)</title>
            <rect x="86.5" y="595.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="89.5" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (14 samples, 0.05%)</title>
            <rect x="87.6" y="579.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="90.6" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (13 samples, 0.05%)</title>
            <rect x="87.6" y="563.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="90.6" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (13 samples, 0.05%)</title>
            <rect x="87.6" y="547.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="90.6" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (13 samples, 0.05%)</title>
            <rect x="87.6" y="531.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="90.6" y="542.0"></text>
        </g>
        <g>
            <title>[unknown] (12 samples, 0.05%)</title>
            <rect x="87.7" y="515.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="90.7" y="526.0"></text>
        </g>
        <g>
            <title>[unknown] (11 samples, 0.04%)</title>
            <rect x="87.7" y="499.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="90.7" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (10 samples, 0.04%)</title>
            <rect x="87.8" y="483.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="90.8" y="494.0"></text>
        </g>
        <g>
            <title>[unknown] (9 samples, 0.03%)</title>
            <rect x="87.8" y="467.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="90.8" y="478.0"></text>
        </g>
        <g>
            <title>__pthread_disable_asynccancel (22 samples, 0.08%)</title>
            <rect x="88.2" y="739.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="91.2" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_enable_asynccancel (6 samples, 0.02%)</title>
            <rect x="89.2" y="739.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="92.2" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_cond_lock (13 samples, 0.05%)</title>
            <rect x="89.5" y="739.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="92.5" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_trylock (11 samples, 0.04%)</title>
            <rect x="90.1" y="739.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
            <text x="93.1" y="750.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (70 samples, 0.27%)</title>
            <rect x="90.9" y="803.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="93.9" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (62 samples, 0.24%)
            </title>
            <rect x="91.3" y="787.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="94.3" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (20 samples, 0.08%)</title>
            <rect x="91.3" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="94.3" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (29 samples, 0.11%)
            </title>
            <rect x="92.2" y="771.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="95.2" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (26 samples, 0.10%)
            </title>
            <rect x="92.2" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="95.2" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.10%)</title>
            <rect x="92.2" y="739.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="95.2" y="750.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (26 samples, 0.10%)</title>
            <rect x="92.2" y="723.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="95.2" y="734.0"></text>
        </g>
        <g>
            <title>Unsafe_Park (14 samples, 0.05%)</title>
            <rect x="92.2" y="707.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="95.2" y="718.0"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (9 samples, 0.03%)</title>
            <rect x="92.5" y="691.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="95.5" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.02%)</title>
            <rect x="92.6" y="675.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="95.6" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.02%)</title>
            <rect x="92.6" y="659.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
            <text x="95.6" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (12 samples, 0.05%)</title>
            <rect x="92.9" y="707.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="95.9" y="718.0"></text>
        </g>
        <g>
            <title>__pthread_cond_wait (11 samples, 0.04%)</title>
            <rect x="92.9" y="691.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="95.9" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (13 samples, 0.05%)</title>
            <rect x="93.5" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="96.5" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (13 samples, 0.05%)</title>
            <rect x="93.5" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="96.5" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (12 samples, 0.05%)</title>
            <rect x="93.5" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="96.5" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (12 samples, 0.05%)</title>
            <rect x="93.5" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="96.5" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (12 samples, 0.05%)</title>
            <rect x="93.5" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="96.5" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (289 samples, 1.11%)</title>
            <rect x="94.1" y="803.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="97.1" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (289 samples, 1.11%)</title>
            <rect x="94.1" y="787.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="97.1" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (289 samples, 1.11%)</title>
            <rect x="94.1" y="771.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="97.1" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (289 samples, 1.11%)</title>
            <rect x="94.1" y="755.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="97.1" y="766.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (289 samples, 1.11%)</title>
            <rect x="94.1" y="739.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="97.1" y="750.0"></text>
        </g>
        <g>
            <title>Unsafe_Unpark (42 samples, 0.16%)</title>
            <rect x="94.3" y="723.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="97.3" y="734.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (6
                samples, 0.02%)
            </title>
            <rect x="94.7" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="97.7" y="718.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_lock (10 samples, 0.04%)</title>
            <rect x="95.4" y="707.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="98.4" y="718.0"></text>
        </g>
        <g>
            <title>oopDesc::address_field(int) const (6 samples, 0.02%)</title>
            <rect x="95.8" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="98.8" y="718.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (239 samples, 0.92%)</title>
            <rect x="96.4" y="723.0" width="10.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="99.4" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (182 samples, 0.70%)</title>
            <rect x="99.0" y="707.0" width="8.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="102.0" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (182 samples, 0.70%)</title>
            <rect x="99.0" y="691.0" width="8.2" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="102.0" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (165 samples, 0.64%)</title>
            <rect x="99.7" y="675.0" width="7.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="102.7" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (163 samples, 0.63%)</title>
            <rect x="99.8" y="659.0" width="7.4" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="102.8" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (161 samples, 0.62%)</title>
            <rect x="99.9" y="643.0" width="7.3" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="102.9" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (149 samples, 0.57%)</title>
            <rect x="100.5" y="627.0" width="6.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="103.5" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (140 samples, 0.54%)</title>
            <rect x="100.9" y="611.0" width="6.3" height="15" fill="#f57474" rx="2" ry="2"/>
            <text x="103.9" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (137 samples, 0.53%)</title>
            <rect x="101.0" y="595.0" width="6.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="104.0" y="606.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$68/1965081261.run (8,889 samples, 34.25%)</title>
            <rect x="107.4" y="835.0" width="404.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="110.4" y="846.0">ru/mail/polis/service/senyast/ServiceImpl$$Lambda$68/19..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.lambda$executeAsync$4 (8,887 samples, 34.24%)</title>
            <rect x="107.5" y="819.0" width="404.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="110.5" y="830.0">ru/mail/polis/service/senyast/ServiceImpl.lambda$execut..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$65/2078745505.act (1,620 samples, 6.24%)</title>
            <rect x="107.7" y="803.0" width="73.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="110.7" y="814.0">ru/mail/..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.lambda$daoMethods$1 (1,620 samples, 6.24%)</title>
            <rect x="107.7" y="787.0" width="73.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="110.7" y="798.0">ru/mail/..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.putMethod (1,619 samples, 6.24%)</title>
            <rect x="107.7" y="771.0" width="73.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="110.7" y="782.0">ru/mail/..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (62 samples, 0.24%)</title>
            <rect x="107.9" y="755.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="110.9" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (62 samples, 0.24%)</title>
            <rect x="107.9" y="739.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="110.9" y="750.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.17%)</title>
            <rect x="108.6" y="723.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="111.6" y="734.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.12%)</title>
            <rect x="109.3" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="112.3" y="718.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.04%)</title>
            <rect x="109.9" y="691.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="112.9" y="702.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (6 samples, 0.02%)</title>
            <rect x="110.1" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="113.1" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.02%)</title>
            <rect x="110.4" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="113.4" y="702.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/LSMDao.upsert (1,554 samples, 5.99%)</title>
            <rect x="110.7" y="755.0" width="70.6" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="113.7" y="766.0">ru/mail/..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTablePool.upsert (1,554 samples, 5.99%)</title>
            <rect x="110.7" y="739.0" width="70.6" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="113.7" y="750.0">ru/mail/..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable.upsert (1,464 samples, 5.64%)</title>
            <rect x="110.7" y="723.0" width="66.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="113.7" y="734.0">ru/mail..</text>
        </g>
        <g>
            <title>java/nio/Buffer.remaining (11 samples, 0.04%)</title>
            <rect x="111.1" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="114.1" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.put (1,412 samples, 5.44%)</title>
            <rect x="111.6" y="707.0" width="64.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="114.6" y="718.0">java/ut..</text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (1,412 samples, 5.44%)</title>
            <rect x="111.6" y="691.0" width="64.1" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="114.6" y="702.0">java/ut..</text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (123 samples, 0.47%)</title>
            <rect x="124.4" y="675.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="127.4" y="686.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (118 samples, 0.45%)</title>
            <rect x="124.6" y="659.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="127.6" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.02%)</title>
            <rect x="129.3" y="643.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="132.3" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.02%)</title>
            <rect x="129.3" y="627.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="132.3" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.02%)</title>
            <rect x="129.3" y="611.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="132.3" y="622.0"></text>
        </g>
        <g>
            <title>java/util/Objects.requireNonNull (9 samples, 0.03%)</title>
            <rect x="129.6" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="132.6" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (458 samples, 1.76%)</title>
            <rect x="130.0" y="675.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="133.0" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (9 samples, 0.03%)</title>
            <rect x="150.4" y="659.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
            <text x="153.4" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (9 samples, 0.03%)</title>
            <rect x="150.4" y="643.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="153.4" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (9 samples, 0.03%)</title>
            <rect x="150.4" y="627.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="153.4" y="638.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (81 samples, 0.31%)</title>
            <rect x="150.9" y="675.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="153.9" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (16 samples, 0.06%)</title>
            <rect x="152.4" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="155.4" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (8 samples, 0.03%)</title>
            <rect x="152.7" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="155.7" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (31 samples, 0.12%)</title>
            <rect x="153.2" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="156.2" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (31 samples, 0.12%)</title>
            <rect x="153.2" y="643.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="156.2" y="654.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (30 samples, 0.12%)</title>
            <rect x="153.2" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="156.2" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.position (10 samples, 0.04%)</title>
            <rect x="153.3" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="156.3" y="622.0"></text>
        </g>
        <g>
            <title>vectorizedMismatch (10 samples, 0.04%)</title>
            <rect x="153.3" y="595.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="156.3" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (15 samples, 0.06%)</title>
            <rect x="153.7" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="156.7" y="622.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (423 samples, 1.63%)</title>
            <rect x="154.6" y="675.0" width="19.2" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="157.6" y="686.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (410 samples, 1.58%)</title>
            <rect x="155.2" y="659.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="158.2" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (400 samples, 1.54%)</title>
            <rect x="155.6" y="643.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="158.6" y="654.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.position (81 samples, 0.31%)</title>
            <rect x="158.5" y="627.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="161.5" y="638.0"></text>
        </g>
        <g>
            <title>vectorizedMismatch (71 samples, 0.27%)</title>
            <rect x="159.0" y="611.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="162.0" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.remaining (13 samples, 0.05%)</title>
            <rect x="162.2" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="165.2" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (208 samples, 0.80%)</title>
            <rect x="162.8" y="627.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="165.8" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.03%)</title>
            <rect x="168.1" y="611.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="171.1" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.03%)</title>
            <rect x="168.1" y="595.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="171.1" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.03%)</title>
            <rect x="168.1" y="579.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="171.1" y="590.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (83 samples, 0.32%)</title>
            <rect x="168.5" y="611.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="171.5" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (22 samples, 0.08%)</title>
            <rect x="170.8" y="595.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="173.8" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.ix (10 samples, 0.04%)</title>
            <rect x="171.8" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="174.8" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (34 samples, 0.13%)</title>
            <rect x="172.2" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="175.2" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (13 samples, 0.05%)</title>
            <rect x="172.9" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="175.9" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.ix (7 samples, 0.03%)</title>
            <rect x="173.5" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="176.5" y="622.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (43 samples, 0.17%)</title>
            <rect x="173.8" y="675.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="176.8" y="686.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (21 samples, 0.08%)</title>
            <rect x="175.7" y="707.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="178.7" y="718.0"></text>
        </g>
        <g>
            <title>gettimeofday (15 samples, 0.06%)</title>
            <rect x="176.0" y="691.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="179.0" y="702.0"></text>
        </g>
        <g>
            <title>[vdso] (10 samples, 0.04%)</title>
            <rect x="176.2" y="675.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="179.2" y="686.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/model/Value.of (9 samples, 0.03%)</title>
            <rect x="176.9" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="179.9" y="718.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTablePool.syncAddToFlush (89 samples, 0.34%)</title>
            <rect x="177.3" y="723.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="180.3" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.valueOf (6 samples, 0.02%)</title>
            <rect x="178.4" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="181.4" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock.writeLock (14 samples, 0.05%)</title>
            <rect x="178.7" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="181.7" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock.writeLock (12 samples, 0.05%)</title>
            <rect x="178.8" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="181.8" y="702.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable.&lt;init&gt; (35 samples, 0.13%)</title>
            <rect x="179.4" y="707.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="182.4" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.&lt;init&gt; (35 samples, 0.13%)</title>
            <rect x="179.4" y="691.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="182.4" y="702.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (33 samples, 0.13%)</title>
            <rect x="179.5" y="675.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="182.5" y="686.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/TableToFlush.&lt;init&gt; (8 samples, 0.03%)</title>
            <rect x="181.0" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="184.0" y="718.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/TableToFlush.&lt;init&gt; (8 samples, 0.03%)</title>
            <rect x="181.0" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="184.0" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/Object.&lt;init&gt; (6 samples, 0.02%)</title>
            <rect x="181.1" y="675.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="184.1" y="686.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.sendResponse (7,262 samples, 27.98%)</title>
            <rect x="181.3" y="803.0" width="330.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="184.3" y="814.0">ru/mail/polis/service/senyast/ServiceImpl.sen..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (7,261 samples, 27.97%)</title>
            <rect x="181.4" y="787.0" width="330.1" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="184.4" y="798.0">one/nio/http/HttpSession.sendResponse</text>
        </g>
        <g>
            <title>java/lang/String.equalsIgnoreCase (75 samples, 0.29%)</title>
            <rect x="185.0" y="771.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="188.0" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (75 samples, 0.29%)</title>
            <rect x="185.0" y="755.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="188.0" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (75 samples, 0.29%)</title>
            <rect x="185.0" y="739.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="188.0" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (10 samples, 0.04%)</title>
            <rect x="187.9" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="190.9" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (7,036 samples, 27.11%)</title>
            <rect x="188.5" y="771.0" width="319.8" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="191.5" y="782.0">one/nio/http/HttpSession.writeResponse</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (309 samples, 1.19%)</title>
            <rect x="188.5" y="755.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="191.5" y="766.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (22 samples, 0.08%)</title>
            <rect x="190.5" y="739.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="193.5" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.append (239 samples, 0.92%)</title>
            <rect x="191.7" y="739.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="194.7" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.07%)</title>
            <rect x="192.2" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="195.2" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.ensureCapacity (16 samples, 0.06%)</title>
            <rect x="192.2" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="195.2" y="718.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.ensureCapacity (7 samples, 0.03%)</title>
            <rect x="192.9" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="195.9" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.length (103 samples, 0.40%)</title>
            <rect x="193.2" y="723.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="196.2" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (22 samples, 0.08%)</title>
            <rect x="196.6" y="707.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="199.6" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.charAt (10 samples, 0.04%)</title>
            <rect x="197.2" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="200.2" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (7 samples, 0.03%)</title>
            <rect x="197.6" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="200.6" y="718.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.write (102 samples, 0.39%)</title>
            <rect x="197.9" y="723.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="200.9" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.write (97 samples, 0.37%)</title>
            <rect x="198.2" y="707.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="201.2" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (23 samples, 0.09%)</title>
            <rect x="201.1" y="691.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="204.1" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/String.isLatin1 (20 samples, 0.08%)</title>
            <rect x="201.1" y="675.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="204.1" y="686.0"></text>
        </g>
        <g>
            <title>sun/misc/Unsafe.putByte (6 samples, 0.02%)</title>
            <rect x="202.3" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="205.3" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.write (6,726 samples, 25.91%)</title>
            <rect x="202.6" y="755.0" width="305.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="205.6" y="766.0">one/nio/net/Session.write</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (6,710 samples, 25.85%)</title>
            <rect x="203.3" y="739.0" width="305.0" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="206.3" y="750.0">one/nio/net/Session.write</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (6,673 samples, 25.71%)</title>
            <rect x="203.9" y="723.0" width="303.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="206.9" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.write (6,663 samples, 25.67%)</title>
            <rect x="204.3" y="707.0" width="302.9" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="207.3" y="718.0">one/nio/net/NativeSocket.write</text>
        </g>
        <g>
            <title>[unknown] (156 samples, 0.60%)</title>
            <rect x="207.0" y="691.0" width="7.1" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="210.0" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (156 samples, 0.60%)</title>
            <rect x="207.0" y="675.0" width="7.1" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="210.0" y="686.0"></text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_write (135 samples, 0.52%)</title>
            <rect x="207.0" y="659.0" width="6.1" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="210.0" y="670.0"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (15 samples, 0.06%)</title>
            <rect x="208.5" y="643.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="211.5" y="654.0"></text>
        </g>
        <g>
            <title>jni_GetByteArrayRegion (74 samples, 0.29%)</title>
            <rect x="209.4" y="643.0" width="3.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="212.4" y="654.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (14 samples, 0.05%)</title>
            <rect x="209.7" y="627.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="212.7" y="638.0"></text>
        </g>
        <g>
            <title>ThreadInVMfromNative::~ThreadInVMfromNative() (9 samples, 0.03%)</title>
            <rect x="210.4" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="213.4" y="638.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198]
                (20 samples, 0.08%)
            </title>
            <rect x="210.8" y="627.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="213.8" y="638.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (21 samples, 0.08%)</title>
            <rect x="211.7" y="627.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="214.7" y="638.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (9 samples, 0.03%)</title>
            <rect x="212.2" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="215.2" y="622.0"></text>
        </g>
        <g>
            <title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long)
                (7 samples, 0.03%)
            </title>
            <rect x="212.8" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="215.8" y="654.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (10 samples, 0.04%)</title>
            <rect x="213.2" y="659.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="216.2" y="670.0"></text>
        </g>
        <g>
            <title>__send (6 samples, 0.02%)</title>
            <rect x="213.6" y="659.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="216.6" y="670.0"></text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (19 samples, 0.07%)</title>
            <rect x="214.1" y="691.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="217.1" y="702.0"></text>
        </g>
        <g>
            <title>__send (6,430 samples, 24.77%)</title>
            <rect x="214.9" y="691.0" width="292.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
            <text x="217.9" y="702.0">__send</text>
        </g>
        <g>
            <title>[unknown] (6,082 samples, 23.43%)</title>
            <rect x="230.8" y="675.0" width="276.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="233.8" y="686.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (6,082 samples, 23.43%)</title>
            <rect x="230.8" y="659.0" width="276.4" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="233.8" y="670.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (5,909 samples, 22.76%)</title>
            <rect x="238.6" y="643.0" width="268.6" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="241.6" y="654.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (5,899 samples, 22.73%)</title>
            <rect x="239.1" y="627.0" width="268.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="242.1" y="638.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (5,847 samples, 22.53%)</title>
            <rect x="241.4" y="611.0" width="265.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="244.4" y="622.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (5,803 samples, 22.36%)</title>
            <rect x="243.4" y="595.0" width="263.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="246.4" y="606.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (5,741 samples, 22.12%)</title>
            <rect x="246.3" y="579.0" width="260.9" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="249.3" y="590.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (5,711 samples, 22.00%)</title>
            <rect x="247.6" y="563.0" width="259.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="250.6" y="574.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (5,426 samples, 20.90%)</title>
            <rect x="260.6" y="547.0" width="246.6" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="263.6" y="558.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (5,226 samples, 20.13%)</title>
            <rect x="269.7" y="531.0" width="237.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="272.7" y="542.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (4,945 samples, 19.05%)</title>
            <rect x="282.4" y="515.0" width="224.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="285.4" y="526.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (4,749 samples, 18.30%)</title>
            <rect x="291.4" y="499.0" width="215.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="294.4" y="510.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (4,360 samples, 16.80%)</title>
            <rect x="309.0" y="483.0" width="198.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="312.0" y="494.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (4,184 samples, 16.12%)</title>
            <rect x="317.0" y="467.0" width="190.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="320.0" y="478.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (4,030 samples, 15.53%)</title>
            <rect x="324.0" y="451.0" width="183.2" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="327.0" y="462.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (3,954 samples, 15.23%)</title>
            <rect x="327.5" y="435.0" width="179.7" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="330.5" y="446.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (3,658 samples, 14.09%)</title>
            <rect x="340.9" y="419.0" width="166.3" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="343.9" y="430.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (3,417 samples, 13.16%)</title>
            <rect x="351.9" y="403.0" width="155.3" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="354.9" y="414.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (3,107 samples, 11.97%)</title>
            <rect x="366.0" y="387.0" width="141.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="369.0" y="398.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,684 samples, 10.34%)</title>
            <rect x="385.2" y="371.0" width="122.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="388.2" y="382.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,505 samples, 9.65%)</title>
            <rect x="393.4" y="355.0" width="113.8" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="396.4" y="366.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,372 samples, 9.14%)</title>
            <rect x="399.4" y="339.0" width="107.8" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="402.4" y="350.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,262 samples, 8.71%)</title>
            <rect x="404.4" y="323.0" width="102.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="407.4" y="334.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,200 samples, 8.48%)</title>
            <rect x="407.2" y="307.0" width="100.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="410.2" y="318.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,156 samples, 8.31%)</title>
            <rect x="409.2" y="291.0" width="98.0" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="412.2" y="302.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,073 samples, 7.99%)</title>
            <rect x="413.0" y="275.0" width="94.2" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="416.0" y="286.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,017 samples, 7.77%)</title>
            <rect x="415.5" y="259.0" width="91.7" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="418.5" y="270.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,884 samples, 7.26%)</title>
            <rect x="421.6" y="243.0" width="85.6" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="424.6" y="254.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,854 samples, 7.14%)</title>
            <rect x="423.0" y="227.0" width="84.2" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="426.0" y="238.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,711 samples, 6.59%)</title>
            <rect x="429.5" y="211.0" width="77.7" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="432.5" y="222.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,577 samples, 6.08%)</title>
            <rect x="435.5" y="195.0" width="71.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="438.5" y="206.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,276 samples, 4.92%)</title>
            <rect x="449.2" y="179.0" width="58.0" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="452.2" y="190.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (1,164 samples, 4.48%)</title>
            <rect x="454.3" y="163.0" width="52.9" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="457.3" y="174.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (890 samples, 3.43%)</title>
            <rect x="466.8" y="147.0" width="40.4" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="469.8" y="158.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (620 samples, 2.39%)</title>
            <rect x="479.1" y="131.0" width="28.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="482.1" y="142.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (536 samples, 2.06%)</title>
            <rect x="482.9" y="115.0" width="24.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="485.9" y="126.0">[..</text>
        </g>
        <g>
            <title>[unknown] (496 samples, 1.91%)</title>
            <rect x="484.7" y="99.0" width="22.5" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="487.7" y="110.0">[..</text>
        </g>
        <g>
            <title>[unknown] (110 samples, 0.42%)</title>
            <rect x="502.2" y="83.0" width="5.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="505.2" y="94.0"></text>
        </g>
        <g>
            <title>[unknown] (86 samples, 0.33%)</title>
            <rect x="503.3" y="67.0" width="3.9" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="506.3" y="78.0"></text>
        </g>
        <g>
            <title>[unknown] (28 samples, 0.11%)</title>
            <rect x="506.0" y="51.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="509.0" y="62.0"></text>
        </g>
        <g>
            <title>[unknown] (19 samples, 0.07%)</title>
            <rect x="506.4" y="35.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="509.4" y="46.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (24 samples, 0.09%)</title>
            <rect x="507.2" y="723.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="510.2" y="734.0"></text>
        </g>
        <g>
            <title>gettimeofday (23 samples, 0.09%)</title>
            <rect x="507.3" y="707.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="510.3" y="718.0"></text>
        </g>
        <g>
            <title>[vdso] (13 samples, 0.05%)</title>
            <rect x="507.7" y="691.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="510.7" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (55 samples, 0.21%)</title>
            <rect x="508.3" y="771.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="511.3" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (52 samples, 0.20%)</title>
            <rect x="508.5" y="755.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="511.5" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (8 samples, 0.03%)</title>
            <rect x="508.6" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="511.6" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (40 samples, 0.15%)</title>
            <rect x="509.0" y="739.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="512.0" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toLowerCase (14 samples, 0.05%)</title>
            <rect x="509.5" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="512.5" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toLowerCase (8 samples, 0.03%)</title>
            <rect x="509.8" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="512.8" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.toLowerCase (7 samples, 0.03%)</title>
            <rect x="509.8" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="512.8" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (15 samples, 0.06%)</title>
            <rect x="510.1" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="513.1" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (15 samples, 0.06%)</title>
            <rect x="510.1" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="513.1" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.toUpperCase (15 samples, 0.06%)</title>
            <rect x="510.1" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="513.1" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (6,052 samples, 23.32%)</title>
            <rect x="511.6" y="883.0" width="275.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="514.6" y="894.0">one/nio/server/SelectorThread.run</text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.hasNext (16 samples, 0.06%)</title>
            <rect x="512.0" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="515.0" y="878.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.next (29 samples, 0.11%)</title>
            <rect x="512.7" y="867.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="515.7" y="878.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.next (29 samples, 0.11%)</title>
            <rect x="512.7" y="851.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="515.7" y="862.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.findNext (7 samples, 0.03%)</title>
            <rect x="513.7" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="516.7" y="846.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector.select (2,157 samples, 8.31%)</title>
            <rect x="514.1" y="867.0" width="98.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="517.1" y="878.0">one/nio/net/..</text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.&lt;init&gt; (126 samples, 0.49%)</title>
            <rect x="514.6" y="851.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="517.6" y="862.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.findNext (68 samples, 0.26%)</title>
            <rect x="517.3" y="835.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="520.3" y="846.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector.epollWait (2,020 samples, 7.78%)</title>
            <rect x="520.4" y="851.0" width="91.8" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="523.4" y="862.0">one/nio/net..</text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSelector_epollWait (15 samples, 0.06%)</title>
            <rect x="521.7" y="835.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="524.7" y="846.0"></text>
        </g>
        <g>
            <title>[unknown] (1,904 samples, 7.34%)</title>
            <rect x="522.4" y="835.0" width="86.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="525.4" y="846.0">[unknown]</text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (18 samples, 0.07%)</title>
            <rect x="522.4" y="819.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="525.4" y="830.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (12 samples, 0.05%)</title>
            <rect x="523.2" y="819.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="526.2" y="830.0"></text>
        </g>
        <g>
            <title>clock_gettime (7 samples, 0.03%)</title>
            <rect x="523.8" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="526.8" y="830.0"></text>
        </g>
        <g>
            <title>epoll_wait (1,866 samples, 7.19%)</title>
            <rect x="524.1" y="819.0" width="84.8" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="527.1" y="830.0">epoll_wait</text>
        </g>
        <g>
            <title>[unknown] (1,429 samples, 5.51%)</title>
            <rect x="544.0" y="803.0" width="64.9" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="547.0" y="814.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,429 samples, 5.51%)</title>
            <rect x="544.0" y="787.0" width="64.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="547.0" y="798.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,263 samples, 4.87%)</title>
            <rect x="551.5" y="771.0" width="57.4" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="554.5" y="782.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (1,237 samples, 4.77%)</title>
            <rect x="552.7" y="755.0" width="56.2" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="555.7" y="766.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (1,168 samples, 4.50%)</title>
            <rect x="555.8" y="739.0" width="53.1" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="558.8" y="750.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (1,028 samples, 3.96%)</title>
            <rect x="562.2" y="723.0" width="46.7" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="565.2" y="734.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (696 samples, 2.68%)</title>
            <rect x="577.3" y="707.0" width="31.6" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="580.3" y="718.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (539 samples, 2.08%)</title>
            <rect x="584.4" y="691.0" width="24.5" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="587.4" y="702.0">[..</text>
        </g>
        <g>
            <title>[unknown] (282 samples, 1.09%)</title>
            <rect x="596.1" y="675.0" width="12.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="599.1" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (27 samples, 0.10%)</title>
            <rect x="607.7" y="659.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="610.7" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (24 samples, 0.09%)</title>
            <rect x="607.8" y="643.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="610.8" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (24 samples, 0.09%)</title>
            <rect x="607.8" y="627.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="610.8" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (23 samples, 0.09%)</title>
            <rect x="607.9" y="611.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="610.9" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (20 samples, 0.08%)</title>
            <rect x="608.0" y="595.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
            <text x="611.0" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (18 samples, 0.07%)</title>
            <rect x="608.1" y="579.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="611.1" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (15 samples, 0.06%)</title>
            <rect x="608.3" y="563.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="611.3" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (14 samples, 0.05%)</title>
            <rect x="608.3" y="547.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="611.3" y="558.0"></text>
        </g>
        <g>
            <title>clock_gettime (10 samples, 0.04%)</title>
            <rect x="609.1" y="835.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
            <text x="612.1" y="846.0"></text>
        </g>
        <g>
            <title>epoll_wait (8 samples, 0.03%)</title>
            <rect x="609.5" y="835.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="612.5" y="846.0"></text>
        </g>
        <g>
            <title>gettimeofday (25 samples, 0.10%)</title>
            <rect x="609.9" y="835.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="612.9" y="846.0"></text>
        </g>
        <g>
            <title>clock_gettime (25 samples, 0.10%)</title>
            <rect x="609.9" y="819.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="612.9" y="830.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (24 samples, 0.09%)</title>
            <rect x="609.9" y="803.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="612.9" y="814.0"></text>
        </g>
        <g>
            <title>[vdso] (16 samples, 0.06%)</title>
            <rect x="610.3" y="787.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="613.3" y="798.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (26 samples, 0.10%)</title>
            <rect x="611.0" y="835.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="614.0" y="846.0"></text>
        </g>
        <g>
            <title>gettimeofday (26 samples, 0.10%)</title>
            <rect x="611.0" y="819.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="614.0" y="830.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (6 samples, 0.02%)</title>
            <rect x="611.0" y="803.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="614.0" y="814.0"></text>
        </g>
        <g>
            <title>clock_gettime (20 samples, 0.08%)</title>
            <rect x="611.3" y="803.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="614.3" y="814.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (8 samples, 0.03%)</title>
            <rect x="611.8" y="787.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
            <text x="614.8" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.process (3,838 samples, 14.79%)</title>
            <rect x="612.2" y="867.0" width="174.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="615.2" y="878.0">one/nio/net/Session.pr..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (3,749 samples, 14.44%)</title>
            <rect x="614.9" y="851.0" width="170.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="617.9" y="862.0">one/nio/http/HttpSessi..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (1,968 samples, 7.58%)</title>
            <rect x="616.0" y="835.0" width="89.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="619.0" y="846.0">one/nio/ht..</text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (9 samples, 0.03%)</title>
            <rect x="622.3" y="819.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="625.3" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (1,017 samples, 3.92%)</title>
            <rect x="622.7" y="819.0" width="46.2" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="625.7" y="830.0">one/..</text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (1,010 samples, 3.89%)</title>
            <rect x="623.0" y="803.0" width="45.9" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="626.0" y="814.0">one/..</text>
        </g>
        <g>
            <title>RequestHandler1_daoMethods.handleRequest (870 samples, 3.35%)</title>
            <rect x="623.3" y="787.0" width="39.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="626.3" y="798.0">Req..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (110 samples, 0.42%)</title>
            <rect x="623.4" y="771.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="626.4" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (33 samples, 0.13%)</title>
            <rect x="623.7" y="755.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="626.7" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (33 samples, 0.13%)</title>
            <rect x="623.7" y="739.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="626.7" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/URLEncoder.decode (8 samples, 0.03%)</title>
            <rect x="624.8" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="627.8" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.startsWith (23 samples, 0.09%)</title>
            <rect x="625.2" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="628.2" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (19 samples, 0.07%)</title>
            <rect x="625.4" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="628.4" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/String.coder (13 samples, 0.05%)</title>
            <rect x="625.7" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="628.7" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (8 samples, 0.03%)</title>
            <rect x="626.3" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="629.3" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (7 samples, 0.03%)</title>
            <rect x="626.3" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="629.3" y="750.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (7 samples, 0.03%)</title>
            <rect x="626.3" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="629.3" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/URLEncoder.decode (40 samples, 0.15%)</title>
            <rect x="626.6" y="755.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="629.6" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (40 samples, 0.15%)</title>
            <rect x="626.6" y="739.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="629.6" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (40 samples, 0.15%)</title>
            <rect x="626.6" y="723.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="629.6" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (39 samples, 0.15%)</title>
            <rect x="626.7" y="707.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="629.7" y="718.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.daoMethods (758 samples, 2.92%)</title>
            <rect x="628.4" y="771.0" width="34.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="631.4" y="782.0">ru..</text>
        </g>
        <g>
            <title>java/lang/String.getBytes (8 samples, 0.03%)</title>
            <rect x="628.5" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="631.5" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encode (8 samples, 0.03%)</title>
            <rect x="628.5" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="631.5" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.02%)</title>
            <rect x="628.6" y="723.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="631.6" y="734.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOf (6 samples, 0.02%)</title>
            <rect x="628.6" y="707.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="631.6" y="718.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (27 samples, 0.10%)</title>
            <rect x="628.8" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="631.8" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (19 samples, 0.07%)</title>
            <rect x="628.9" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="631.9" y="750.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.03%)</title>
            <rect x="629.3" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="632.3" y="734.0"></text>
        </g>
        <g>
            <title>jlong_disjoint_arraycopy (7 samples, 0.03%)</title>
            <rect x="629.8" y="739.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="632.8" y="750.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.executeAsync (722 samples, 2.78%)</title>
            <rect x="630.1" y="755.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="633.1" y="766.0">ru..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (721 samples, 2.78%)</title>
            <rect x="630.1" y="739.0" width="32.8" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="633.1" y="750.0">ja..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.offer (720 samples, 2.77%)</title>
            <rect x="630.2" y="723.0" width="32.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="633.2" y="734.0">ja..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (18 samples, 0.07%)</title>
            <rect x="630.2" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="633.2" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (567 samples, 2.18%)</title>
            <rect x="631.0" y="707.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="634.0" y="718.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (12 samples, 0.05%)</title>
            <rect x="631.0" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="634.0" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.05%)</title>
            <rect x="631.0" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="634.0" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.03%)</title>
            <rect x="631.0" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="634.0" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.03%)
            </title>
            <rect x="631.0" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="634.0" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.03%)</title>
            <rect x="631.0" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="634.0" y="638.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (9 samples, 0.03%)</title>
            <rect x="631.0" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="634.0" y="622.0"></text>
        </g>
        <g>
            <title>Unsafe_Park (7 samples, 0.03%)</title>
            <rect x="631.0" y="595.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="634.0" y="606.0"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (6 samples, 0.02%)</title>
            <rect x="631.1" y="579.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="634.1" y="590.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (555 samples, 2.14%)</title>
            <rect x="631.6" y="691.0" width="25.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="634.6" y="702.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (555 samples, 2.14%)</title>
            <rect x="631.6" y="675.0" width="25.2" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="634.6" y="686.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (555 samples, 2.14%)</title>
            <rect x="631.6" y="659.0" width="25.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="634.6" y="670.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (555 samples, 2.14%)</title>
            <rect x="631.6" y="643.0" width="25.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="634.6" y="654.0">j..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (555 samples, 2.14%)</title>
            <rect x="631.6" y="627.0" width="25.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="634.6" y="638.0">j..</text>
        </g>
        <g>
            <title>Unsafe_Unpark (68 samples, 0.26%)</title>
            <rect x="631.9" y="611.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="634.9" y="622.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (9
                samples, 0.03%)
            </title>
            <rect x="632.5" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="635.5" y="606.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples,
                0.03%)
            </title>
            <rect x="633.1" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="636.1" y="606.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_lock (9 samples, 0.03%)</title>
            <rect x="633.6" y="595.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
            <text x="636.6" y="606.0"></text>
        </g>
        <g>
            <title>oopDesc::address_field(int) const (9 samples, 0.03%)</title>
            <rect x="634.1" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="637.1" y="606.0"></text>
        </g>
        <g>
            <title>__tls_get_addr (8 samples, 0.03%)</title>
            <rect x="635.1" y="611.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="638.1" y="622.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (469 samples, 1.81%)</title>
            <rect x="635.5" y="611.0" width="21.3" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="638.5" y="622.0">p..</text>
        </g>
        <g>
            <title>[unknown] (359 samples, 1.38%)</title>
            <rect x="640.5" y="595.0" width="16.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="643.5" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (359 samples, 1.38%)</title>
            <rect x="640.5" y="579.0" width="16.3" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="643.5" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (316 samples, 1.22%)</title>
            <rect x="642.4" y="563.0" width="14.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="645.4" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (315 samples, 1.21%)</title>
            <rect x="642.5" y="547.0" width="14.3" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="645.5" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (310 samples, 1.19%)</title>
            <rect x="642.7" y="531.0" width="14.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="645.7" y="542.0"></text>
        </g>
        <g>
            <title>[unknown] (275 samples, 1.06%)</title>
            <rect x="644.3" y="515.0" width="12.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="647.3" y="526.0"></text>
        </g>
        <g>
            <title>[unknown] (248 samples, 0.96%)</title>
            <rect x="645.5" y="499.0" width="11.3" height="15" fill="#f57474" rx="2" ry="2"/>
            <text x="648.5" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (237 samples, 0.91%)</title>
            <rect x="646.0" y="483.0" width="10.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="649.0" y="494.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.03%)
            </title>
            <rect x="656.8" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="659.8" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (8 samples, 0.03%)
            </title>
            <rect x="656.8" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="659.8" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (126 samples, 0.49%)</title>
            <rect x="657.2" y="707.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="660.2" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (123 samples, 0.47%)</title>
            <rect x="657.3" y="691.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="660.3" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (45 samples, 0.17%)</title>
            <rect x="657.4" y="675.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="660.4" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (15 samples, 0.06%)
            </title>
            <rect x="657.4" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="660.4" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (26 samples,
                0.10%)
            </title>
            <rect x="658.1" y="659.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="661.1" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (47 samples, 0.18%)</title>
            <rect x="659.4" y="675.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="662.4" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (11 samples, 0.04%)</title>
            <rect x="660.3" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="663.3" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/Object.&lt;init&gt; (11 samples, 0.04%)</title>
            <rect x="660.3" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="663.3" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (14 samples, 0.05%)</title>
            <rect x="660.9" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="663.9" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (14 samples, 0.05%)</title>
            <rect x="660.9" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="663.9" y="654.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (11 samples, 0.04%)</title>
            <rect x="661.1" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="664.1" y="638.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (29 samples, 0.11%)</title>
            <rect x="661.6" y="675.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="664.6" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (24 samples, 0.09%)</title>
            <rect x="661.8" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="664.8" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (20 samples, 0.08%)
            </title>
            <rect x="661.8" y="643.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="664.8" y="654.0"></text>
        </g>
        <g>
            <title>one/nio/http/PathMapper.find (58 samples, 0.22%)</title>
            <rect x="662.9" y="787.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="665.9" y="798.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.get (57 samples, 0.22%)</title>
            <rect x="662.9" y="771.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="665.9" y="782.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.getNode (51 samples, 0.20%)</title>
            <rect x="662.9" y="755.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="665.9" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.equals (16 samples, 0.06%)</title>
            <rect x="664.3" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="667.3" y="750.0"></text>
        </g>
        <g>
            <title>jlong_disjoint_arraycopy (6 samples, 0.02%)</title>
            <rect x="665.0" y="739.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
            <text x="668.0" y="750.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.hash (6 samples, 0.02%)</title>
            <rect x="665.3" y="755.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="668.3" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.hashCode (6 samples, 0.02%)</title>
            <rect x="665.3" y="739.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="668.3" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getPath (75 samples, 0.29%)</title>
            <rect x="665.5" y="787.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="668.5" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (75 samples, 0.29%)</title>
            <rect x="665.5" y="771.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="668.5" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.checkBoundsBeginEnd (12 samples, 0.05%)</title>
            <rect x="665.9" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="668.9" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (55 samples, 0.21%)</title>
            <rect x="666.4" y="755.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="669.4" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (7 samples, 0.03%)</title>
            <rect x="667.6" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="670.6" y="750.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (22 samples, 0.08%)</title>
            <rect x="667.9" y="739.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="670.9" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (9 samples, 0.03%)</title>
            <rect x="668.5" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="671.5" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.parseRequest (444 samples, 1.71%)</title>
            <rect x="668.9" y="819.0" width="20.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="671.9" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (170 samples, 0.65%)</title>
            <rect x="675.4" y="803.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="678.4" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (121 samples, 0.47%)</title>
            <rect x="677.7" y="787.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="680.7" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (11 samples, 0.04%)</title>
            <rect x="677.7" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="680.7" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (110 samples, 0.42%)</title>
            <rect x="678.2" y="771.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="681.2" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (96 samples, 0.37%)</title>
            <rect x="678.8" y="755.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="681.8" y="766.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (9 samples, 0.03%)</title>
            <rect x="682.8" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="685.8" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (118 samples, 0.45%)</title>
            <rect x="683.2" y="803.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="686.2" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (111 samples, 0.43%)</title>
            <rect x="683.5" y="787.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="686.5" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.startsWith (13 samples, 0.05%)</title>
            <rect x="688.5" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="691.5" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.startParsingRequestBody (73 samples, 0.28%)</title>
            <rect x="689.1" y="819.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="692.1" y="830.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (40 samples, 0.15%)</title>
            <rect x="690.0" y="803.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="693.0" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (38 samples, 0.15%)</title>
            <rect x="690.1" y="787.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="693.1" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Character.digit (10 samples, 0.04%)</title>
            <rect x="691.2" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="694.2" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/Character.digit (10 samples, 0.04%)</title>
            <rect x="691.2" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="694.2" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.digit (10 samples, 0.04%)</title>
            <rect x="691.2" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="694.2" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.setBody (14 samples, 0.05%)</title>
            <rect x="691.8" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="694.8" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.addHeader (42 samples, 0.16%)</title>
            <rect x="692.4" y="819.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="695.4" y="830.0"></text>
        </g>
        <g>
            <title>jlong_disjoint_arraycopy (21 samples, 0.08%)</title>
            <rect x="693.4" y="803.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="696.4" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (125 samples, 0.48%)</title>
            <rect x="694.4" y="819.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="697.4" y="830.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (8 samples, 0.03%)</title>
            <rect x="695.3" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="698.3" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (50 samples, 0.19%)</title>
            <rect x="695.7" y="803.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="698.7" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (40 samples, 0.15%)</title>
            <rect x="696.1" y="787.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="699.1" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toLowerCase (10 samples, 0.04%)</title>
            <rect x="697.5" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="700.5" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toLowerCase (10 samples, 0.04%)</title>
            <rect x="697.5" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="700.5" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (46 samples, 0.18%)</title>
            <rect x="697.9" y="803.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="700.9" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (33 samples, 0.13%)</title>
            <rect x="698.5" y="787.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="701.5" y="798.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (28 samples, 0.11%)</title>
            <rect x="698.8" y="771.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="701.8" y="782.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (9 samples, 0.03%)</title>
            <rect x="699.6" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="702.6" y="766.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (119 samples, 0.46%)</title>
            <rect x="700.0" y="819.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="703.0" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (110 samples, 0.42%)</title>
            <rect x="700.4" y="803.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="703.4" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (14 samples, 0.05%)</title>
            <rect x="704.4" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="707.4" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (14 samples, 0.05%)</title>
            <rect x="704.4" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="707.4" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (14 samples, 0.05%)</title>
            <rect x="704.4" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="707.4" y="766.0"></text>
        </g>
        <g>
            <title>sun/misc/Unsafe.getByte (9 samples, 0.03%)</title>
            <rect x="705.0" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="708.0" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.read (1,757 samples, 6.77%)</title>
            <rect x="705.4" y="835.0" width="79.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="708.4" y="846.0">one/nio/n..</text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.read (1,750 samples, 6.74%)</title>
            <rect x="705.8" y="819.0" width="79.5" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="708.8" y="830.0">one/nio/n..</text>
        </g>
        <g>
            <title>[unknown] (237 samples, 0.91%)</title>
            <rect x="707.9" y="803.0" width="10.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="710.9" y="814.0"></text>
        </g>
        <g>
            <title>[unknown] (237 samples, 0.91%)</title>
            <rect x="707.9" y="787.0" width="10.7" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="710.9" y="798.0"></text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_read (178 samples, 0.69%)</title>
            <rect x="707.9" y="771.0" width="8.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="710.9" y="782.0"></text>
        </g>
        <g>
            <title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;,
                (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (9 samples, 0.03%)
            </title>
            <rect x="708.2" y="755.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="711.2" y="766.0"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (18 samples, 0.07%)</title>
            <rect x="709.0" y="755.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="712.0" y="766.0"></text>
        </g>
        <g>
            <title>jni_SetByteArrayRegion (125 samples, 0.48%)</title>
            <rect x="710.0" y="755.0" width="5.7" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="713.0" y="766.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (14 samples, 0.05%)</title>
            <rect x="710.7" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="713.7" y="750.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (6 samples, 0.02%)</title>
            <rect x="711.4" y="739.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="714.4" y="750.0"></text>
        </g>
        <g>
            <title>ThreadInVMfromNative::~ThreadInVMfromNative() (14 samples, 0.05%)</title>
            <rect x="711.6" y="739.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="714.6" y="750.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198]
                (20 samples, 0.08%)
            </title>
            <rect x="712.3" y="739.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="715.3" y="750.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (55 samples, 0.21%)</title>
            <rect x="713.2" y="739.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="716.2" y="750.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (30 samples, 0.12%)</title>
            <rect x="714.3" y="723.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="717.3" y="734.0"></text>
        </g>
        <g>
            <title>__GI___recv (17 samples, 0.07%)</title>
            <rect x="716.1" y="771.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="719.1" y="782.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (17 samples, 0.07%)</title>
            <rect x="716.9" y="771.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="719.9" y="782.0"></text>
        </g>
        <g>
            <title>jni_SetByteArrayRegion (22 samples, 0.08%)</title>
            <rect x="717.6" y="771.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="720.6" y="782.0"></text>
        </g>
        <g>
            <title>__GI___recv (1,459 samples, 5.62%)</title>
            <rect x="718.6" y="803.0" width="66.4" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="721.6" y="814.0">__GI___..</text>
        </g>
        <g>
            <title>[unknown] (1,145 samples, 4.41%)</title>
            <rect x="732.9" y="787.0" width="52.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="735.9" y="798.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (1,145 samples, 4.41%)</title>
            <rect x="732.9" y="771.0" width="52.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="735.9" y="782.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (941 samples, 3.63%)</title>
            <rect x="742.2" y="755.0" width="42.8" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="745.2" y="766.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (937 samples, 3.61%)</title>
            <rect x="742.4" y="739.0" width="42.6" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="745.4" y="750.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (897 samples, 3.46%)</title>
            <rect x="744.2" y="723.0" width="40.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
            <text x="747.2" y="734.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (837 samples, 3.22%)</title>
            <rect x="746.9" y="707.0" width="38.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="749.9" y="718.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (751 samples, 2.89%)</title>
            <rect x="750.8" y="691.0" width="34.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="753.8" y="702.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (651 samples, 2.51%)</title>
            <rect x="755.4" y="675.0" width="29.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="758.4" y="686.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (477 samples, 1.84%)</title>
            <rect x="763.3" y="659.0" width="21.7" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="766.3" y="670.0">[..</text>
        </g>
        <g>
            <title>[unknown] (322 samples, 1.24%)</title>
            <rect x="770.3" y="643.0" width="14.7" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="773.3" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (95 samples, 0.37%)</title>
            <rect x="780.6" y="627.0" width="4.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="783.6" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (20 samples, 0.08%)</title>
            <rect x="784.0" y="611.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
            <text x="787.0" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (16 samples, 0.06%)</title>
            <rect x="784.2" y="595.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
            <text x="787.2" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (15 samples, 0.06%)</title>
            <rect x="784.3" y="579.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="787.3" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (9 samples, 0.03%)</title>
            <rect x="784.5" y="563.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="787.5" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.03%)</title>
            <rect x="784.6" y="547.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="787.6" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.03%)</title>
            <rect x="784.6" y="531.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="787.6" y="542.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.02%)</title>
            <rect x="784.7" y="515.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="787.7" y="526.0"></text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (8 samples, 0.03%)</title>
            <rect x="785.0" y="803.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="788.0" y="814.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (30 samples, 0.12%)</title>
            <rect x="785.3" y="851.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="788.3" y="862.0"></text>
        </g>
        <g>
            <title>gettimeofday (23 samples, 0.09%)</title>
            <rect x="785.6" y="835.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="788.6" y="846.0"></text>
        </g>
        <g>
            <title>[vdso] (11 samples, 0.04%)</title>
            <rect x="786.2" y="819.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="789.2" y="830.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/LSMDao$FlusherThread.run (5,724 samples, 22.05%)</title>
            <rect x="786.7" y="883.0" width="260.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="789.7" y="894.0">ru/mail/polis/dao/senyast/LSMDao$Fl..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/LSMDao.flush (5,724 samples, 22.05%)</title>
            <rect x="786.7" y="867.0" width="260.2" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="789.7" y="878.0">ru/mail/polis/dao/senyast/LSMDao.fl..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/LSMDao.compact (2,444 samples, 9.42%)</title>
            <rect x="786.7" y="851.0" width="111.1" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="789.7" y="862.0">ru/mail/polis..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable.writeToFile (2,443 samples, 9.41%)</title>
            <rect x="786.8" y="835.0" width="111.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="789.8" y="846.0">ru/mail/polis..</text>
        </g>
        <g>
            <title>com/google/common/collect/TransformedIterator.next (17 samples, 0.07%)</title>
            <rect x="787.0" y="819.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="790.0" y="830.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (12 samples, 0.05%)
            </title>
            <rect x="787.3" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="790.3" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (12 samples, 0.05%)
            </title>
            <rect x="787.3" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="790.3" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (11 samples, 0.04%)</title>
            <rect x="787.3" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="790.3" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (11 samples, 0.04%)</title>
            <rect x="787.3" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="790.3" y="766.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (141 samples, 0.54%)</title>
            <rect x="788.0" y="819.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="791.0" y="830.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator.next (130 samples, 0.50%)</title>
            <rect x="788.3" y="803.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="791.3" y="814.0"></text>
        </g>
        <g>
            <title>java/util/AbstractQueue.remove (66 samples, 0.25%)</title>
            <rect x="788.5" y="787.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="791.5" y="798.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.poll (66 samples, 0.25%)</title>
            <rect x="788.5" y="771.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="791.5" y="782.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.siftDownUsingComparator (60 samples, 0.23%)</title>
            <rect x="788.7" y="755.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="791.7" y="766.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.22%)</title>
            <rect x="788.9" y="739.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="791.9" y="750.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.21%)</title>
            <rect x="789.0" y="723.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="792.0" y="734.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$PeekingImpl.peek (16 samples, 0.06%)</title>
            <rect x="789.0" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="792.0" y="718.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable$1.next (16 samples, 0.06%)</title>
            <rect x="789.0" y="691.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="792.0" y="702.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable$1.next (16 samples, 0.06%)</title>
            <rect x="789.0" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="792.0" y="686.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable.cellAt (16 samples, 0.06%)</title>
            <rect x="789.0" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="792.0" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.03%)</title>
            <rect x="789.0" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="792.0" y="654.0"></text>
        </g>
        <g>
            <title>java/util/Comparator$$Lambda$74/944898068.compare (38 samples, 0.15%)</title>
            <rect x="789.7" y="707.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="792.7" y="718.0"></text>
        </g>
        <g>
            <title>java/util/Comparator.lambda$thenComparing$36697e65$1 (35 samples, 0.13%)</title>
            <rect x="789.9" y="691.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="792.9" y="702.0"></text>
        </g>
        <g>
            <title>java/util/Comparator$$Lambda$74/944898068.compare (35 samples, 0.13%)</title>
            <rect x="789.9" y="675.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="792.9" y="686.0"></text>
        </g>
        <g>
            <title>java/util/Comparator.lambda$thenComparing$36697e65$1 (32 samples, 0.12%)</title>
            <rect x="790.0" y="659.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="793.0" y="670.0"></text>
        </g>
        <g>
            <title>java/util/Comparator$$Lambda$72/2109567755.compare (32 samples, 0.12%)</title>
            <rect x="790.0" y="643.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="793.0" y="654.0"></text>
        </g>
        <g>
            <title>java/util/Comparator.lambda$comparing$77a9974f$1 (32 samples, 0.12%)</title>
            <rect x="790.0" y="627.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="793.0" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (24 samples, 0.09%)</title>
            <rect x="790.2" y="611.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="793.2" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (22 samples, 0.08%)</title>
            <rect x="790.3" y="595.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="793.3" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (14 samples, 0.05%)</title>
            <rect x="790.5" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="793.5" y="590.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.add (60 samples, 0.23%)</title>
            <rect x="791.5" y="787.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="794.5" y="798.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.offer (60 samples, 0.23%)</title>
            <rect x="791.5" y="771.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="794.5" y="782.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.siftUp (59 samples, 0.23%)</title>
            <rect x="791.5" y="755.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="794.5" y="766.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.siftUpUsingComparator (59 samples, 0.23%)</title>
            <rect x="791.5" y="739.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="794.5" y="750.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.22%)</title>
            <rect x="791.6" y="723.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="794.6" y="734.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.22%)</title>
            <rect x="791.6" y="707.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="794.6" y="718.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$PeekingImpl.peek (49 samples, 0.19%)</title>
            <rect x="791.6" y="691.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="794.6" y="702.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable$1.next (49 samples, 0.19%)</title>
            <rect x="791.6" y="675.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="794.6" y="686.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable$1.next (49 samples, 0.19%)</title>
            <rect x="791.6" y="659.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="794.6" y="670.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable.cellAt (49 samples, 0.19%)</title>
            <rect x="791.6" y="643.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="794.6" y="654.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBufferR.duplicate (18 samples, 0.07%)</title>
            <rect x="792.0" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="795.0" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBufferR.&lt;init&gt; (15 samples, 0.06%)</title>
            <rect x="792.1" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="795.1" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.&lt;init&gt; (15 samples, 0.06%)</title>
            <rect x="792.1" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="795.1" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.03%)</title>
            <rect x="792.4" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="795.4" y="590.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title>
            <rect x="792.5" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="795.5" y="574.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title>
            <rect x="792.5" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="795.5" y="558.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBufferR.slice (14 samples, 0.05%)</title>
            <rect x="792.8" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="795.8" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.05%)</title>
            <rect x="792.9" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="795.9" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.05%)</title>
            <rect x="792.9" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="795.9" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.03%)</title>
            <rect x="793.0" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="796.0" y="590.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.03%)</title>
            <rect x="793.0" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="796.0" y="574.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.03%)</title>
            <rect x="793.0" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="796.0" y="558.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.02%)</title>
            <rect x="793.0" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="796.0" y="542.0"></text>
        </g>
        <g>
            <title>java/util/Comparator$$Lambda$74/944898068.compare (8 samples, 0.03%)</title>
            <rect x="793.8" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="796.8" y="702.0"></text>
        </g>
        <g>
            <title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.03%)</title>
            <rect x="793.9" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="796.9" y="686.0"></text>
        </g>
        <g>
            <title>java/util/Comparator$$Lambda$74/944898068.compare (7 samples, 0.03%)</title>
            <rect x="793.9" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="796.9" y="670.0"></text>
        </g>
        <g>
            <title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.03%)</title>
            <rect x="793.9" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="796.9" y="654.0"></text>
        </g>
        <g>
            <title>java/util/Comparator$$Lambda$72/2109567755.compare (7 samples, 0.03%)</title>
            <rect x="793.9" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="796.9" y="638.0"></text>
        </g>
        <g>
            <title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.03%)</title>
            <rect x="793.9" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="796.9" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (7 samples, 0.03%)</title>
            <rect x="793.9" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="796.9" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (7 samples, 0.03%)</title>
            <rect x="793.9" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="796.9" y="590.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (6 samples, 0.02%)</title>
            <rect x="793.9" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="796.9" y="574.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/model/Bytes.fromLong (8 samples, 0.03%)</title>
            <rect x="794.5" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="797.5" y="830.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.allocate (6 samples, 0.02%)</title>
            <rect x="794.5" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="797.5" y="814.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/FileChannelImpl.write (2,261 samples, 8.71%)</title>
            <rect x="795.0" y="819.0" width="102.8" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="798.0" y="830.0">sun/nio/ch/F..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileChannelImpl.beginBlocking (38 samples, 0.15%)</title>
            <rect x="795.5" y="803.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="798.5" y="814.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (38 samples, 0.15%)</title>
            <rect x="795.5" y="787.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="798.5" y="798.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.03%)</title>
            <rect x="796.8" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="799.8" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/System$2.blockedOn (7 samples, 0.03%)</title>
            <rect x="796.8" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="799.8" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.blockedOn (7 samples, 0.03%)</title>
            <rect x="796.8" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="799.8" y="750.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/FileChannelImpl.endBlocking (17 samples, 0.07%)</title>
            <rect x="797.2" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="800.2" y="814.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.end (17 samples, 0.07%)</title>
            <rect x="797.2" y="787.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="800.2" y="798.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (2,176 samples, 8.38%)</title>
            <rect x="798.1" y="803.0" width="98.9" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="801.1" y="814.0">sun/nio/ch/I..</text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (25 samples, 0.10%)</title>
            <rect x="798.8" y="787.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="801.8" y="798.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (23 samples, 0.09%)</title>
            <rect x="798.9" y="771.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="801.9" y="782.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.put (8 samples, 0.03%)</title>
            <rect x="799.0" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="802.0" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (8 samples, 0.03%)</title>
            <rect x="799.0" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="802.0" y="750.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.copyMemory (8 samples, 0.03%)</title>
            <rect x="799.5" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="802.5" y="766.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.copyMemoryChecks (8 samples, 0.03%)</title>
            <rect x="799.5" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="802.5" y="750.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.checkPrimitivePointer (8 samples, 0.03%)</title>
            <rect x="799.5" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="802.5" y="734.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.checkPrimitiveArray (8 samples, 0.03%)</title>
            <rect x="799.5" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="802.5" y="718.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2,105 samples, 8.11%)</title>
            <rect x="800.0" y="787.0" width="95.7" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="803.0" y="798.0">sun/nio/ch/..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write (2,077 samples, 8.00%)</title>
            <rect x="801.1" y="771.0" width="94.5" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="804.1" y="782.0">sun/nio/ch/..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (2,076 samples, 8.00%)</title>
            <rect x="801.2" y="755.0" width="94.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="804.2" y="766.0">sun/nio/ch/..</text>
        </g>
        <g>
            <title>Java_sun_nio_ch_FileDispatcherImpl_write0 (6 samples, 0.02%)</title>
            <rect x="802.0" y="739.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="805.0" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (2,042 samples, 7.87%)</title>
            <rect x="802.3" y="739.0" width="92.8" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="805.3" y="750.0">[unknown]</text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (8 samples, 0.03%)</title>
            <rect x="802.3" y="723.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="805.3" y="734.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (9 samples, 0.03%)</title>
            <rect x="802.7" y="723.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="805.7" y="734.0"></text>
        </g>
        <g>
            <title>write (2,025 samples, 7.80%)</title>
            <rect x="803.1" y="723.0" width="92.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
            <text x="806.1" y="734.0">write</text>
        </g>
        <g>
            <title>[unknown] (1,703 samples, 6.56%)</title>
            <rect x="817.7" y="707.0" width="77.4" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="820.7" y="718.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,703 samples, 6.56%)</title>
            <rect x="817.7" y="691.0" width="77.4" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="820.7" y="702.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,518 samples, 5.85%)</title>
            <rect x="826.1" y="675.0" width="69.0" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="829.1" y="686.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,497 samples, 5.77%)</title>
            <rect x="827.1" y="659.0" width="68.0" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="830.1" y="670.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,459 samples, 5.62%)</title>
            <rect x="828.8" y="643.0" width="66.3" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="831.8" y="654.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,392 samples, 5.36%)</title>
            <rect x="831.9" y="627.0" width="63.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="834.9" y="638.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,310 samples, 5.05%)</title>
            <rect x="835.6" y="611.0" width="59.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="838.6" y="622.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (1,280 samples, 4.93%)</title>
            <rect x="837.0" y="595.0" width="58.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="840.0" y="606.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (1,226 samples, 4.72%)</title>
            <rect x="839.4" y="579.0" width="55.7" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="842.4" y="590.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (1,150 samples, 4.43%)</title>
            <rect x="842.9" y="563.0" width="52.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="845.9" y="574.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (1,028 samples, 3.96%)</title>
            <rect x="848.4" y="547.0" width="46.7" height="15" fill="#f87878" rx="2" ry="2"/>
            <text x="851.4" y="558.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (907 samples, 3.49%)</title>
            <rect x="853.9" y="531.0" width="41.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="856.9" y="542.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (811 samples, 3.12%)</title>
            <rect x="858.3" y="515.0" width="36.8" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="861.3" y="526.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (666 samples, 2.57%)</title>
            <rect x="864.9" y="499.0" width="30.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="867.9" y="510.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (601 samples, 2.32%)</title>
            <rect x="867.8" y="483.0" width="27.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="870.8" y="494.0">[..</text>
        </g>
        <g>
            <title>[unknown] (503 samples, 1.94%)</title>
            <rect x="872.3" y="467.0" width="22.8" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="875.3" y="478.0">[..</text>
        </g>
        <g>
            <title>[unknown] (383 samples, 1.48%)</title>
            <rect x="877.7" y="451.0" width="17.4" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="880.7" y="462.0"></text>
        </g>
        <g>
            <title>[unknown] (304 samples, 1.17%)</title>
            <rect x="881.3" y="435.0" width="13.8" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="884.3" y="446.0"></text>
        </g>
        <g>
            <title>[unknown] (213 samples, 0.82%)</title>
            <rect x="885.5" y="419.0" width="9.6" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="888.5" y="430.0"></text>
        </g>
        <g>
            <title>[unknown] (84 samples, 0.32%)</title>
            <rect x="891.3" y="403.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="894.3" y="414.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util.getTemporaryDirectBuffer (17 samples, 0.07%)</title>
            <rect x="895.7" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="898.7" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (7 samples, 0.03%)</title>
            <rect x="895.8" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="898.8" y="782.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$BufferCache.get (8 samples, 0.03%)</title>
            <rect x="896.1" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="899.1" y="782.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (11 samples, 0.04%)</title>
            <rect x="896.5" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="899.5" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (7 samples, 0.03%)</title>
            <rect x="896.6" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="899.6" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.03%)</title>
            <rect x="896.6" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="899.6" y="766.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/NativeThreadSet.add (14 samples, 0.05%)</title>
            <rect x="897.0" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="900.0" y="814.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/NativeThread.current (11 samples, 0.04%)</title>
            <rect x="897.1" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="900.1" y="798.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable.writeToFile (3,279 samples, 12.63%)</title>
            <rect x="897.8" y="851.0" width="149.1" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="900.8" y="862.0">ru/mail/polis/dao/s..</text>
        </g>
        <g>
            <title>com/google/common/collect/TransformedIterator.next (18 samples, 0.07%)</title>
            <rect x="898.2" y="835.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="901.2" y="846.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$6.transform (16 samples, 0.06%)</title>
            <rect x="898.2" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="901.2" y="830.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable$$Lambda$70/1650770946.apply (7 samples, 0.03%)</title>
            <rect x="898.6" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="901.6" y="814.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable.lambda$iterator$0 (7 samples, 0.03%)</title>
            <rect x="898.6" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="901.6" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Long.valueOf (6 samples, 0.02%)</title>
            <rect x="899.0" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="902.0" y="846.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList.add (14 samples, 0.05%)</title>
            <rect x="899.5" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="902.5" y="846.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList.add (14 samples, 0.05%)</title>
            <rect x="899.5" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="902.5" y="830.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList.grow (12 samples, 0.05%)</title>
            <rect x="899.6" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="902.6" y="814.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList.grow (12 samples, 0.05%)</title>
            <rect x="899.6" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="902.6" y="798.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/FileChannelImpl.write (3,225 samples, 12.42%)</title>
            <rect x="900.3" y="835.0" width="146.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="903.3" y="846.0">sun/nio/ch/FileCha..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileChannelImpl.beginBlocking (50 samples, 0.19%)</title>
            <rect x="900.6" y="819.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="903.6" y="830.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (49 samples, 0.19%)</title>
            <rect x="900.7" y="803.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="903.7" y="814.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (12 samples, 0.05%)</title>
            <rect x="902.4" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="905.4" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/System$2.blockedOn (12 samples, 0.05%)</title>
            <rect x="902.4" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="905.4" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.blockedOn (12 samples, 0.05%)</title>
            <rect x="902.4" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="905.4" y="766.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/FileChannelImpl.endBlocking (17 samples, 0.07%)</title>
            <rect x="902.9" y="819.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="905.9" y="830.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.end (16 samples, 0.06%)</title>
            <rect x="903.0" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="906.0" y="814.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (3,117 samples, 12.01%)</title>
            <rect x="903.7" y="819.0" width="141.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="906.7" y="830.0">sun/nio/ch/IOUtil...</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title>
            <rect x="905.0" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="908.0" y="814.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.position (7 samples, 0.03%)</title>
            <rect x="905.0" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="908.0" y="798.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (38 samples, 0.15%)</title>
            <rect x="905.3" y="803.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="908.3" y="814.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (28 samples, 0.11%)</title>
            <rect x="905.8" y="787.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="908.8" y="798.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.put (11 samples, 0.04%)</title>
            <rect x="906.1" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="909.1" y="782.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (6 samples, 0.02%)</title>
            <rect x="906.3" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="909.3" y="766.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.copyMemory (8 samples, 0.03%)</title>
            <rect x="906.7" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="909.7" y="782.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.copyMemoryChecks (7 samples, 0.03%)</title>
            <rect x="906.7" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="909.7" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/MappedByteBuffer.flip (7 samples, 0.03%)</title>
            <rect x="907.1" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="910.1" y="814.0"></text>
        </g>
        <g>
            <title>java/nio/MappedByteBuffer.flip (7 samples, 0.03%)</title>
            <rect x="907.1" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="910.1" y="798.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.flip (7 samples, 0.03%)</title>
            <rect x="907.1" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="910.1" y="782.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.flip (7 samples, 0.03%)</title>
            <rect x="907.1" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="910.1" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (6 samples, 0.02%)</title>
            <rect x="907.1" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="910.1" y="750.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2,972 samples, 11.45%)</title>
            <rect x="907.4" y="803.0" width="135.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="910.4" y="814.0">sun/nio/ch/IOUtil..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write (2,956 samples, 11.39%)</title>
            <rect x="908.0" y="787.0" width="134.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="911.0" y="798.0">sun/nio/ch/FileDi..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (2,954 samples, 11.38%)</title>
            <rect x="908.1" y="771.0" width="134.3" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="911.1" y="782.0">sun/nio/ch/FileDi..</text>
        </g>
        <g>
            <title>[unknown] (2,895 samples, 11.15%)</title>
            <rect x="910.1" y="755.0" width="131.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="913.1" y="766.0">[unknown]</text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (14 samples, 0.05%)</title>
            <rect x="910.1" y="739.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="913.1" y="750.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (17 samples, 0.07%)</title>
            <rect x="910.7" y="739.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
            <text x="913.7" y="750.0"></text>
        </g>
        <g>
            <title>write (2,864 samples, 11.03%)</title>
            <rect x="911.5" y="739.0" width="130.2" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="914.5" y="750.0">write</text>
        </g>
        <g>
            <title>[unknown] (2,361 samples, 9.10%)</title>
            <rect x="934.3" y="723.0" width="107.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
            <text x="937.3" y="734.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,361 samples, 9.10%)</title>
            <rect x="934.3" y="707.0" width="107.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="937.3" y="718.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,119 samples, 8.16%)</title>
            <rect x="945.3" y="691.0" width="96.4" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="948.3" y="702.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,108 samples, 8.12%)</title>
            <rect x="945.8" y="675.0" width="95.9" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="948.8" y="686.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (2,040 samples, 7.86%)</title>
            <rect x="948.9" y="659.0" width="92.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="951.9" y="670.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,945 samples, 7.49%)</title>
            <rect x="953.2" y="643.0" width="88.5" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="956.2" y="654.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,836 samples, 7.07%)</title>
            <rect x="958.2" y="627.0" width="83.5" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="961.2" y="638.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,795 samples, 6.92%)</title>
            <rect x="960.1" y="611.0" width="81.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
            <text x="963.1" y="622.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,721 samples, 6.63%)</title>
            <rect x="963.4" y="595.0" width="78.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="966.4" y="606.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,623 samples, 6.25%)</title>
            <rect x="967.9" y="579.0" width="73.8" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="970.9" y="590.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,456 samples, 5.61%)</title>
            <rect x="975.5" y="563.0" width="66.2" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="978.5" y="574.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,315 samples, 5.07%)</title>
            <rect x="981.9" y="547.0" width="59.8" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="984.9" y="558.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (1,174 samples, 4.52%)</title>
            <rect x="988.3" y="531.0" width="53.4" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="991.3" y="542.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (939 samples, 3.62%)</title>
            <rect x="999.0" y="515.0" width="42.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="1002.0" y="526.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (827 samples, 3.19%)</title>
            <rect x="1004.1" y="499.0" width="37.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="1007.1" y="510.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (687 samples, 2.65%)</title>
            <rect x="1010.4" y="483.0" width="31.3" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="1013.4" y="494.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (511 samples, 1.97%)</title>
            <rect x="1018.4" y="467.0" width="23.3" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="1021.4" y="478.0">[..</text>
        </g>
        <g>
            <title>[unknown] (405 samples, 1.56%)</title>
            <rect x="1023.3" y="451.0" width="18.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="1026.3" y="462.0"></text>
        </g>
        <g>
            <title>[unknown] (273 samples, 1.05%)</title>
            <rect x="1029.3" y="435.0" width="12.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="1032.3" y="446.0"></text>
        </g>
        <g>
            <title>[unknown] (103 samples, 0.40%)</title>
            <rect x="1037.0" y="419.0" width="4.7" height="15" fill="#e96464" rx="2" ry="2"/>
            <text x="1040.0" y="430.0"></text>
        </g>
        <g>
            <title>fdval (10 samples, 0.04%)</title>
            <rect x="1041.8" y="755.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="1044.8" y="766.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util.getTemporaryDirectBuffer (28 samples, 0.11%)</title>
            <rect x="1042.5" y="803.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1045.5" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (21 samples, 0.08%)</title>
            <rect x="1042.6" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1045.6" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (9 samples, 0.03%)</title>
            <rect x="1043.1" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1046.1" y="782.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (36 samples, 0.14%)</title>
            <rect x="1043.8" y="803.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="1046.8" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (19 samples, 0.07%)</title>
            <rect x="1044.0" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="1047.0" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (12 samples, 0.05%)</title>
            <rect x="1044.3" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="1047.3" y="782.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$BufferCache.offerFirst (12 samples, 0.05%)</title>
            <rect x="1044.8" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1047.8" y="798.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.12%)</title>
            <rect x="1045.4" y="819.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1048.4" y="830.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/NativeThread.current (26 samples, 0.10%)</title>
            <rect x="1045.6" y="803.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="1048.6" y="814.0"></text>
        </g>
        <g>
            <title>start_thread (3,147 samples, 12.12%)</title>
            <rect x="1046.9" y="883.0" width="143.1" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="1049.9" y="894.0">start_thread</text>
        </g>
        <g>
            <title>thread_native_entry(Thread*) (3,147 samples, 12.12%)</title>
            <rect x="1046.9" y="867.0" width="143.1" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="1049.9" y="878.0">thread_native_entr..</text>
        </g>
        <g>
            <title>Thread::call_run() (3,147 samples, 12.12%)</title>
            <rect x="1046.9" y="851.0" width="143.1" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1049.9" y="862.0">Thread::call_run()</text>
        </g>
        <g>
            <title>ConcurrentGCThread::run() (9 samples, 0.03%)</title>
            <rect x="1046.9" y="835.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1049.9" y="846.0"></text>
        </g>
        <g>
            <title>GangWorker::loop() (3,015 samples, 11.62%)</title>
            <rect x="1047.3" y="835.0" width="137.1" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1050.3" y="846.0">GangWorker::loop()</text>
        </g>
        <g>
            <title>G1CMConcurrentMarkingTask::work(unsigned int) (1,448 samples, 5.58%)</title>
            <rect x="1047.4" y="819.0" width="65.8" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1050.4" y="830.0">G1CMCon..</text>
        </g>
        <g>
            <title>G1CMTask::do_marking_step(double, bool, bool) (1,426 samples, 5.49%)</title>
            <rect x="1047.8" y="803.0" width="64.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1050.8" y="814.0">G1CMTas..</text>
        </g>
        <g>
            <title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.99] (10 samples,
                0.04%)
            </title>
            <rect x="1048.8" y="787.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1051.8" y="798.0"></text>
        </g>
        <g>
            <title>G1CMBitMapClosure::do_addr(HeapWord*) (457 samples, 1.76%)</title>
            <rect x="1049.2" y="787.0" width="20.8" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1052.2" y="798.0"></text>
        </g>
        <g>
            <title>G1CMTask::drain_local_queue(bool) [clone .part.154] (215 samples, 0.83%)</title>
            <rect x="1050.7" y="771.0" width="9.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1053.7" y="782.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (165 samples, 0.64%)</title>
            <rect x="1052.9" y="755.0" width="7.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1055.9" y="766.0"></text>
        </g>
        <g>
            <title>G1CMObjArrayProcessor::process_slice(HeapWord*) (12 samples, 0.05%)</title>
            <rect x="1053.8" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1056.8" y="750.0"></text>
        </g>
        <g>
            <title>void OopOopIterateBoundedDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass,
                unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*, MemRegion) (12 samples, 0.05%)
            </title>
            <rect x="1053.8" y="723.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1056.8" y="734.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (11 samples, 0.04%)</title>
            <rect x="1053.8" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1056.8" y="718.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (121 samples, 0.47%)
            </title>
            <rect x="1054.6" y="739.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1057.6" y="750.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (87 samples, 0.34%)</title>
            <rect x="1055.4" y="723.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1058.4" y="734.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (13 samples, 0.05%)</title>
            <rect x="1058.6" y="707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1061.6" y="718.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (7 samples, 0.03%)</title>
            <rect x="1059.5" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1062.5" y="734.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (7 samples, 0.03%)</title>
            <rect x="1059.8" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1062.8" y="734.0"></text>
        </g>
        <g>
            <title>G1CMTask::regular_clock_call() (6 samples, 0.02%)</title>
            <rect x="1060.4" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1063.4" y="782.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (6 samples, 0.02%)</title>
            <rect x="1060.7" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1063.7" y="782.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (197 samples, 0.76%)</title>
            <rect x="1061.0" y="771.0" width="8.9" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1064.0" y="782.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (143 samples, 0.55%)
            </title>
            <rect x="1063.0" y="755.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1066.0" y="766.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (99 samples, 0.38%)</title>
            <rect x="1064.5" y="739.0" width="4.5" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1067.5" y="750.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (9 samples, 0.03%)</title>
            <rect x="1068.5" y="723.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1071.5" y="734.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (8 samples, 0.03%)</title>
            <rect x="1069.2" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1072.2" y="750.0"></text>
        </g>
        <g>
            <title>G1CMTask::drain_global_stack(bool) [clone .constprop.396] (7 samples, 0.03%)</title>
            <rect x="1070.0" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1073.0" y="798.0"></text>
        </g>
        <g>
            <title>G1CMTask::drain_local_queue(bool) [clone .part.154] (910 samples, 3.51%)</title>
            <rect x="1070.3" y="787.0" width="41.4" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1073.3" y="798.0">G1C..</text>
        </g>
        <g>
            <title>G1CMTask::regular_clock_call() (20 samples, 0.08%)</title>
            <rect x="1077.1" y="771.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1080.1" y="782.0"></text>
        </g>
        <g>
            <title>__GI_getrusage (18 samples, 0.07%)</title>
            <rect x="1077.1" y="755.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
            <text x="1080.1" y="766.0"></text>
        </g>
        <g>
            <title>[unknown] (10 samples, 0.04%)</title>
            <rect x="1077.4" y="739.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="1080.4" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (10 samples, 0.04%)</title>
            <rect x="1077.4" y="723.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="1080.4" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (9 samples, 0.03%)</title>
            <rect x="1077.5" y="707.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="1080.5" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (9 samples, 0.03%)</title>
            <rect x="1077.5" y="691.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="1080.5" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (9 samples, 0.03%)</title>
            <rect x="1077.5" y="675.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="1080.5" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.03%)</title>
            <rect x="1077.6" y="659.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="1080.6" y="670.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (726 samples, 2.80%)</title>
            <rect x="1078.2" y="771.0" width="33.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1081.2" y="782.0">vo..</text>
        </g>
        <g>
            <title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (11 samples, 0.04%)</title>
            <rect x="1081.5" y="755.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1084.5" y="766.0"></text>
        </g>
        <g>
            <title>G1CMObjArrayProcessor::process_slice(HeapWord*) (128 samples, 0.49%)</title>
            <rect x="1082.0" y="755.0" width="5.9" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1085.0" y="766.0"></text>
        </g>
        <g>
            <title>void OopOopIterateBoundedDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass,
                unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*, MemRegion) (124 samples, 0.48%)
            </title>
            <rect x="1082.2" y="739.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1085.2" y="750.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (103 samples, 0.40%)</title>
            <rect x="1082.7" y="723.0" width="4.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1085.7" y="734.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (6 samples, 0.02%)</title>
            <rect x="1087.4" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1090.4" y="734.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (7 samples, 0.03%)</title>
            <rect x="1087.9" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1090.9" y="766.0"></text>
        </g>
        <g>
            <title>Klass::start_of_vtable() const (7 samples, 0.03%)</title>
            <rect x="1088.2" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1091.2" y="766.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (496 samples, 1.91%)
            </title>
            <rect x="1088.6" y="755.0" width="22.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1091.6" y="766.0">v..</text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (367 samples, 1.41%)</title>
            <rect x="1092.9" y="739.0" width="16.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1095.9" y="750.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (55 samples, 0.21%)</title>
            <rect x="1106.6" y="723.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1109.6" y="734.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (9 samples, 0.03%)</title>
            <rect x="1109.1" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1112.1" y="734.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (13 samples, 0.05%)</title>
            <rect x="1109.8" y="739.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1112.8" y="750.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (18 samples, 0.07%)</title>
            <rect x="1110.4" y="739.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1113.4" y="750.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (11 samples, 0.04%)
            </title>
            <rect x="1111.2" y="771.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1114.2" y="782.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (11 samples, 0.04%)</title>
            <rect x="1112.2" y="787.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1115.2" y="798.0"></text>
        </g>
        <g>
            <title>oopDesc::size_given_klass(Klass*) (11 samples, 0.04%)</title>
            <rect x="1112.7" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1115.7" y="814.0"></text>
        </g>
        <g>
            <title>G1CMRemarkTask::work(unsigned int) (21 samples, 0.08%)</title>
            <rect x="1113.2" y="819.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1116.2" y="830.0"></text>
        </g>
        <g>
            <title>G1CMTask::do_marking_step(double, bool, bool) (20 samples, 0.08%)</title>
            <rect x="1113.2" y="803.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1116.2" y="814.0"></text>
        </g>
        <g>
            <title>SpinPause (15 samples, 0.06%)</title>
            <rect x="1113.4" y="787.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="1116.4" y="798.0"></text>
        </g>
        <g>
            <title>G1CMRootRegionScanTask::work(unsigned int) (11 samples, 0.04%)</title>
            <rect x="1114.2" y="819.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1117.2" y="830.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass,
                unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (7 samples, 0.03%)
            </title>
            <rect x="1114.4" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1117.4" y="814.0"></text>
        </g>
        <g>
            <title>G1ParTask::work(unsigned int) (732 samples, 2.82%)</title>
            <rect x="1114.9" y="819.0" width="33.3" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1117.9" y="830.0">G1..</text>
        </g>
        <g>
            <title>G1ParEvacuateFollowersClosure::do_void() (497 samples, 1.91%)</title>
            <rect x="1114.9" y="803.0" width="22.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1117.9" y="814.0">G..</text>
        </g>
        <g>
            <title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples,
                0.02%)
            </title>
            <rect x="1115.1" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1118.1" y="798.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::trim_queue() (391 samples, 1.51%)</title>
            <rect x="1115.4" y="787.0" width="17.8" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1118.4" y="798.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (250 samples,
                0.96%)
            </title>
            <rect x="1121.5" y="771.0" width="11.4" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1124.5" y="782.0"></text>
        </g>
        <g>
            <title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass,
                unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (69 samples, 0.27%)
            </title>
            <rect x="1129.8" y="755.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1132.8" y="766.0"></text>
        </g>
        <g>
            <title>SpinPause (89 samples, 0.34%)</title>
            <rect x="1133.4" y="787.0" width="4.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="1136.4" y="798.0"></text>
        </g>
        <g>
            <title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (175 samples, 0.67%)
            </title>
            <rect x="1137.6" y="803.0" width="7.9" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1140.6" y="814.0"></text>
        </g>
        <g>
            <title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (175 samples, 0.67%)</title>
            <rect x="1137.6" y="787.0" width="7.9" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1140.6" y="798.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (175 samples,
                0.67%)
            </title>
            <rect x="1137.6" y="771.0" width="7.9" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1140.6" y="782.0"></text>
        </g>
        <g>
            <title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (175 samples,
                0.67%)
            </title>
            <rect x="1137.6" y="755.0" width="7.9" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1140.6" y="766.0"></text>
        </g>
        <g>
            <title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (175 samples, 0.67%)</title>
            <rect x="1137.6" y="739.0" width="7.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1140.6" y="750.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::trim_queue_partially() (123 samples, 0.47%)</title>
            <rect x="1137.6" y="723.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1140.6" y="734.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (72 samples,
                0.28%)
            </title>
            <rect x="1139.7" y="707.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1142.7" y="718.0"></text>
        </g>
        <g>
            <title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass,
                unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (11 samples, 0.04%)
            </title>
            <rect x="1142.4" y="691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1145.4" y="702.0"></text>
        </g>
        <g>
            <title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (52
                samples, 0.20%)
            </title>
            <rect x="1143.2" y="723.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1146.2" y="734.0"></text>
        </g>
        <g>
            <title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion,
                G1ScanObjsDuringUpdateRSClosure*) (50 samples, 0.19%)
            </title>
            <rect x="1143.2" y="707.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1146.2" y="718.0"></text>
        </g>
        <g>
            <title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (22
                samples, 0.08%)
            </title>
            <rect x="1143.2" y="691.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1146.2" y="702.0"></text>
        </g>
        <g>
            <title>HeapRegion::block_size(HeapWord const*) const (16 samples, 0.06%)</title>
            <rect x="1143.5" y="675.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1146.5" y="686.0"></text>
        </g>
        <g>
            <title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (16 samples,
                0.06%)
            </title>
            <rect x="1144.5" y="691.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1147.5" y="702.0"></text>
        </g>
        <g>
            <title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (29 samples, 0.11%)</title>
            <rect x="1145.5" y="803.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1148.5" y="814.0"></text>
        </g>
        <g>
            <title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (29 samples,
                0.11%)
            </title>
            <rect x="1145.5" y="787.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1148.5" y="798.0"></text>
        </g>
        <g>
            <title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (29 samples, 0.11%)</title>
            <rect x="1145.5" y="771.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1148.5" y="782.0"></text>
        </g>
        <g>
            <title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (28 samples, 0.11%)</title>
            <rect x="1145.6" y="755.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1148.6" y="766.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::trim_queue_partially() (20 samples, 0.08%)</title>
            <rect x="1145.6" y="739.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1148.6" y="750.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (14 samples,
                0.05%)
            </title>
            <rect x="1145.9" y="723.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1148.9" y="734.0"></text>
        </g>
        <g>
            <title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion,
                G1ScanObjsDuringScanRSClosure*) (6 samples, 0.02%)
            </title>
            <rect x="1146.6" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1149.6" y="750.0"></text>
        </g>
        <g>
            <title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (26 samples, 0.10%)</title>
            <rect x="1146.9" y="803.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1149.9" y="814.0"></text>
        </g>
        <g>
            <title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (20 samples,
                0.08%)
            </title>
            <rect x="1147.0" y="787.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1150.0" y="798.0"></text>
        </g>
        <g>
            <title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (16 samples, 0.06%)</title>
            <rect x="1147.2" y="771.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1150.2" y="782.0"></text>
        </g>
        <g>
            <title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (15 samples, 0.06%)</title>
            <rect x="1147.2" y="755.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1150.2" y="766.0"></text>
        </g>
        <g>
            <title>G1ParallelCleaningTask::work(unsigned int) (14 samples, 0.05%)</title>
            <rect x="1148.2" y="819.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1151.2" y="830.0"></text>
        </g>
        <g>
            <title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (6 samples, 0.02%)</title>
            <rect x="1148.3" y="803.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1151.3" y="814.0"></text>
        </g>
        <g>
            <title>G1RebuildRemSetTask::work(unsigned int) (776 samples, 2.99%)</title>
            <rect x="1148.8" y="819.0" width="35.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1151.8" y="830.0">G1R..</text>
        </g>
        <g>
            <title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (776
                samples, 2.99%)
            </title>
            <rect x="1148.8" y="803.0" width="35.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1151.8" y="814.0">Hea..</text>
        </g>
        <g>
            <title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (751 samples,
                2.89%)
            </title>
            <rect x="1148.9" y="787.0" width="34.1" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1151.9" y="798.0">G1..</text>
        </g>
        <g>
            <title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (14
                samples, 0.05%)
            </title>
            <rect x="1169.5" y="771.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1172.5" y="782.0"></text>
        </g>
        <g>
            <title>HeapRegion::block_size(HeapWord const*) const (8 samples, 0.03%)</title>
            <rect x="1169.8" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1172.8" y="766.0"></text>
        </g>
        <g>
            <title>Klass::start_of_vtable() const (13 samples, 0.05%)</title>
            <rect x="1170.2" y="771.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1173.2" y="782.0"></text>
        </g>
        <g>
            <title>OtherRegionsTable::add_reference(void*, unsigned int) (31 samples, 0.12%)</title>
            <rect x="1170.8" y="771.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1173.8" y="782.0"></text>
        </g>
        <g>
            <title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (28
                samples, 0.11%)
            </title>
            <rect x="1172.2" y="771.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1175.2" y="782.0"></text>
        </g>
        <g>
            <title>void OopOopIterateBoundedDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass,
                unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*, MemRegion) (27 samples, 0.10%)
            </title>
            <rect x="1173.5" y="771.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1176.5" y="782.0"></text>
        </g>
        <g>
            <title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (17
                samples, 0.07%)
            </title>
            <rect x="1174.0" y="755.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1177.0" y="766.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass,
                unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (180 samples, 0.69%)
            </title>
            <rect x="1174.7" y="771.0" width="8.2" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1177.7" y="782.0"></text>
        </g>
        <g>
            <title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (57
                samples, 0.22%)
            </title>
            <rect x="1180.3" y="755.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1183.3" y="766.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass,
                unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (16 samples, 0.06%)
            </title>
            <rect x="1183.0" y="787.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1186.0" y="798.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass,
                unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (7 samples, 0.03%)
            </title>
            <rect x="1183.8" y="787.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1186.8" y="798.0"></text>
        </g>
        <g>
            <title>JavaThread::run() (96 samples, 0.37%)</title>
            <rect x="1184.4" y="835.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1187.4" y="846.0"></text>
        </g>
        <g>
            <title>JavaThread::thread_main_inner() (96 samples, 0.37%)</title>
            <rect x="1184.4" y="819.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1187.4" y="830.0"></text>
        </g>
        <g>
            <title>CompileBroker::compiler_thread_loop() (94 samples, 0.36%)</title>
            <rect x="1184.4" y="803.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1187.4" y="814.0"></text>
        </g>
        <g>
            <title>CompileBroker::invoke_compiler_on_method(CompileTask*) (94 samples, 0.36%)</title>
            <rect x="1184.4" y="787.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1187.4" y="798.0"></text>
        </g>
        <g>
            <title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (85 samples, 0.33%)</title>
            <rect x="1184.4" y="771.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1187.4" y="782.0"></text>
        </g>
        <g>
            <title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (85 samples,
                0.33%)
            </title>
            <rect x="1184.4" y="755.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1187.4" y="766.0"></text>
        </g>
        <g>
            <title>Compile::Code_Gen() (53 samples, 0.20%)</title>
            <rect x="1184.4" y="739.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1187.4" y="750.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Register_Allocate() (42 samples, 0.16%)</title>
            <rect x="1184.9" y="723.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1187.9" y="734.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Select() (6 samples, 0.02%)</title>
            <rect x="1184.9" y="707.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1187.9" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::build_ifg_physical(ResourceArea*) (10 samples, 0.04%)</title>
            <rect x="1185.4" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1188.4" y="718.0"></text>
        </g>
        <g>
            <title>Compile::Optimize() (20 samples, 0.08%)</title>
            <rect x="1186.8" y="739.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1189.8" y="750.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (12 samples, 0.05%)</title>
            <rect x="1187.0" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1190.0" y="734.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.02%)
            </title>
            <rect x="1187.2" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1190.2" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_loop_late_post(Node*) (6 samples, 0.02%)</title>
            <rect x="1187.2" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1190.2" y="702.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (10 samples, 0.04%)</title>
            <rect x="1187.7" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1190.7" y="750.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.04%)</title>
            <rect x="1187.7" y="723.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1190.7" y="734.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (10 samples, 0.04%)</title>
            <rect x="1187.7" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1190.7" y="718.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (10 samples, 0.04%)</title>
            <rect x="1187.7" y="691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1190.7" y="702.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (10 samples, 0.04%)</title>
            <rect x="1187.7" y="675.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1190.7" y="686.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (9 samples, 0.03%)</title>
            <rect x="1187.7" y="659.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1190.7" y="670.0"></text>
        </g>
        <g>
            <title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.03%)</title>
            <rect x="1188.3" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1191.3" y="782.0"></text>
        </g>
        <g>
            <title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (8
                samples, 0.03%)
            </title>
            <rect x="1188.3" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1191.3" y="766.0"></text>
        </g>
        <g>
            <title>Compilation::compile_method() (8 samples, 0.03%)</title>
            <rect x="1188.3" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1191.3" y="750.0"></text>
        </g>
        <g>
            <title>Compilation::compile_java_method() (8 samples, 0.03%)</title>
            <rect x="1188.3" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1191.3" y="734.0"></text>
        </g>
        <g>
            <title>VMThread::run() (19 samples, 0.07%)</title>
            <rect x="1188.8" y="835.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1191.8" y="846.0"></text>
        </g>
        <g>
            <title>VMThread::loop() (18 samples, 0.07%)</title>
            <rect x="1188.8" y="819.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1191.8" y="830.0"></text>
        </g>
        <g>
            <title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (7 samples, 0.03%)</title>
            <rect x="1189.1" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1192.1" y="814.0"></text>
        </g>
        <g>
            <title>VM_Operation::evaluate() (7 samples, 0.03%)</title>
            <rect x="1189.1" y="787.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1192.1" y="798.0"></text>
        </g>
        <g>
            <title>VM_G1CollectForAllocation::doit() (7 samples, 0.03%)</title>
            <rect x="1189.1" y="771.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1192.1" y="782.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (6 samples, 0.02%)</title>
            <rect x="1189.1" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1192.1" y="766.0"></text>
        </g>
        <g>
            <title>WatcherThread::run() (7 samples, 0.03%)</title>
            <rect x="1189.6" y="835.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1192.6" y="846.0"></text>
        </g>
        <g>
            <title>WatcherThread::sleep() const (6 samples, 0.02%)</title>
            <rect x="1189.7" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1192.7" y="830.0"></text>
        </g>
    </g>
</svg>
