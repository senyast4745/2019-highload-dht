<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950"
     xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="933"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="933"></text>
    <g id="frames">
        <g>
            <title>all (5,492 samples, 100.00%)</title>
            <rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="13.0" y="910.0">all</text>
        </g>
        <g>
            <title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.20%)</title>
            <rect x="10.4" y="883.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="13.4" y="894.0"></text>
        </g>
        <g>
            <title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.05%)</title>
            <rect x="10.9" y="867.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="13.9" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title>
            <rect x="10.9" y="851.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="13.9" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (2 samples, 0.04%)</title>
            <rect x="10.9" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="13.9" y="846.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)
            </title>
            <rect x="10.9" y="819.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="13.9" y="830.0"></text>
        </g>
        <g>
            <title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.11%)</title>
            <rect x="11.5" y="867.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="14.5" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.11%)</title>
            <rect x="11.5" y="851.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="14.5" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (5 samples, 0.09%)</title>
            <rect x="11.5" y="835.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="14.5" y="846.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)
            </title>
            <rect x="11.9" y="819.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="14.9" y="830.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title>
            <rect x="12.8" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="15.8" y="894.0"></text>
        </g>
        <g>
            <title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title>
            <rect x="12.8" y="867.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="15.8" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title>
            <rect x="12.8" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="15.8" y="862.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.15%)</title>
            <rect x="13.2" y="883.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="16.2" y="894.0"></text>
        </g>
        <g>
            <title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title>
            <rect x="13.2" y="867.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="16.2" y="878.0"></text>
        </g>
        <g>
            <title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.09%)</title>
            <rect x="13.7" y="867.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="16.7" y="878.0"></text>
        </g>
        <g>
            <title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.09%)</title>
            <rect x="13.7" y="851.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="16.7" y="862.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (5 samples, 0.09%)</title>
            <rect x="13.7" y="835.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="16.7" y="846.0"></text>
        </g>
        <g>
            <title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title>
            <rect x="14.3" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="17.3" y="830.0"></text>
        </g>
        <g>
            <title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.18%)
            </title>
            <rect x="14.9" y="883.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="17.9" y="894.0"></text>
        </g>
        <g>
            <title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.15%)</title>
            <rect x="15.4" y="867.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="18.4" y="878.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) (3 samples, 0.05%)</title>
            <rect x="15.8" y="851.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="18.8" y="862.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.04%)</title>
            <rect x="15.8" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="18.8" y="846.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) [clone .part.96] (3 samples, 0.05%)</title>
            <rect x="16.4" y="851.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="19.4" y="862.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.04%)</title>
            <rect x="16.7" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="19.7" y="846.0"></text>
        </g>
        <g>
            <title>[not_walkable] (2 samples, 0.04%)</title>
            <rect x="17.1" y="883.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="20.1" y="894.0"></text>
        </g>
        <g>
            <title>[not_walkable_Java] (6 samples, 0.11%)</title>
            <rect x="17.5" y="883.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
            <text x="20.5" y="894.0"></text>
        </g>
        <g>
            <title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title>
            <rect x="18.2" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="21.2" y="878.0"></text>
        </g>
        <g>
            <title>[unknown_Java] (18 samples, 0.33%)</title>
            <rect x="19.0" y="883.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="22.0" y="894.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="21.8" y="867.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="24.8" y="878.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="21.8" y="851.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="24.8" y="862.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="21.8" y="835.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="24.8" y="846.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="21.8" y="819.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="24.8" y="830.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="21.8" y="803.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="24.8" y="814.0"></text>
        </g>
        <g>
            <title>__pthread_cond_timedwait (2 samples, 0.04%)</title>
            <rect x="23.1" y="883.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="26.1" y="894.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="23.1" y="867.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="26.1" y="878.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="23.1" y="851.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="26.1" y="862.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (3,081 samples, 56.10%)</title>
            <rect x="23.5" y="883.0" width="662.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="26.5" y="894.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,081 samples, 56.10%)</title>
            <rect x="23.5" y="867.0" width="662.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="26.5" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,080 samples, 56.08%)</title>
            <rect x="23.5" y="851.0" width="661.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="26.5" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
        </g>
        <g>
            <title>I2C/C2I adapters (8 samples, 0.15%)</title>
            <rect x="29.8" y="835.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="32.8" y="846.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="31.5" y="835.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
            <text x="34.5" y="846.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="31.5" y="819.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="34.5" y="830.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="31.5" y="803.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="34.5" y="814.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.07%)</title>
            <rect x="31.9" y="787.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="34.9" y="798.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.07%)</title>
            <rect x="31.9" y="771.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="34.9" y="782.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="32.1" y="755.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="35.1" y="766.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="32.1" y="739.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="35.1" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="32.1" y="723.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="35.1" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (10 samples, 0.18%)</title>
            <rect x="32.8" y="835.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="35.8" y="846.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.isInterrupted (9 samples, 0.16%)</title>
            <rect x="33.0" y="819.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="36.0" y="830.0"></text>
        </g>
        <g>
            <title>JVM_IsInterrupted (7 samples, 0.13%)</title>
            <rect x="33.0" y="803.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="36.0" y="814.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.05%)</title>
            <rect x="33.2" y="787.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="36.2" y="798.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.04%)</title>
            <rect x="34.1" y="787.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="37.1" y="798.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (2
                samples, 0.04%)
            </title>
            <rect x="34.5" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="37.5" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (4 samples, 0.07%)</title>
            <rect x="34.9" y="835.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="37.9" y="846.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.07%)</title>
            <rect x="34.9" y="819.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="37.9" y="830.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.05%)</title>
            <rect x="35.1" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="38.1" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.05%)</title>
            <rect x="35.1" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="38.1" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.05%)</title>
            <rect x="35.1" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="38.1" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title>
            <rect x="35.1" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="38.1" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (13 samples, 0.24%)</title>
            <rect x="35.8" y="835.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="38.8" y="846.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.18%)</title>
            <rect x="36.4" y="819.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="39.4" y="830.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (3 samples, 0.05%)</title>
            <rect x="37.9" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="40.9" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (2 samples, 0.04%)</title>
            <rect x="38.1" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="41.1" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (664 samples, 12.09%)</title>
            <rect x="38.6" y="835.0" width="142.6" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="41.6" y="846.0">java/util/concurre..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.take (653 samples, 11.89%)</title>
            <rect x="40.3" y="819.0" width="140.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="43.3" y="830.0">java/util/concurre..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (479 samples, 8.72%)
            </title>
            <rect x="40.9" y="803.0" width="103.0" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="43.9" y="814.0">java/util/co..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples,
                0.16%)
            </title>
            <rect x="41.8" y="787.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="44.8" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (6 samples, 0.11%)</title>
            <rect x="42.4" y="771.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="45.4" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LI_V (3 samples, 0.05%)</title>
            <rect x="43.1" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="46.1" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.15%)</title>
            <rect x="43.9" y="787.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="46.9" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)
            </title>
            <rect x="44.6" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="47.6" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title>
            <rect x="44.6" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="47.6" y="766.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title>
            <rect x="44.6" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="47.6" y="750.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title>
            <rect x="45.2" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="48.2" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title>
            <rect x="45.2" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="48.2" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (54 samples, 0.98%)</title>
            <rect x="45.7" y="787.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="48.7" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (6 samples, 0.11%)</title>
            <rect x="45.7" y="771.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="48.7" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (48 samples, 0.87%)</title>
            <rect x="47.0" y="771.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="50.0" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (47 samples, 0.86%)</title>
            <rect x="47.0" y="755.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="50.0" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (47 samples, 0.86%)</title>
            <rect x="47.0" y="739.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="50.0" y="750.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (46 samples, 0.84%)</title>
            <rect x="47.2" y="723.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="50.2" y="734.0"></text>
        </g>
        <g>
            <title>Unsafe_Unpark (10 samples, 0.18%)</title>
            <rect x="47.4" y="707.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="50.4" y="718.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.09%)</title>
            <rect x="47.4" y="691.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="50.4" y="702.0"></text>
        </g>
        <g>
            <title>pthread_mutex_lock (2 samples, 0.04%)</title>
            <rect x="49.1" y="691.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="52.1" y="702.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (35 samples, 0.64%)</title>
            <rect x="49.5" y="707.0" width="7.6" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="52.5" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (33 samples, 0.60%)</title>
            <rect x="50.0" y="691.0" width="7.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="53.0" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (33 samples, 0.60%)</title>
            <rect x="50.0" y="675.0" width="7.1" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="53.0" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (29 samples, 0.53%)</title>
            <rect x="50.8" y="659.0" width="6.3" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="53.8" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (28 samples, 0.51%)</title>
            <rect x="51.0" y="643.0" width="6.1" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="54.0" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (27 samples, 0.49%)</title>
            <rect x="51.3" y="627.0" width="5.8" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="54.3" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (25 samples, 0.46%)</title>
            <rect x="51.7" y="611.0" width="5.4" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="54.7" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (23 samples, 0.42%)</title>
            <rect x="52.1" y="595.0" width="5.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="55.1" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (23 samples, 0.42%)</title>
            <rect x="52.1" y="579.0" width="5.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="55.1" y="590.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (403 samples, 7.34%)</title>
            <rect x="57.3" y="787.0" width="86.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="60.3" y="798.0">java/util/..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (402 samples, 7.32%)</title>
            <rect x="57.5" y="771.0" width="86.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="60.5" y="782.0">jdk/intern..</text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2
                samples, 0.04%)
            </title>
            <rect x="59.6" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="62.6" y="766.0"></text>
        </g>
        <g>
            <title>Unsafe_Park (200 samples, 3.64%)</title>
            <rect x="60.1" y="755.0" width="42.9" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="63.1" y="766.0">Unsa..</text>
        </g>
        <g>
            <title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.05%)</title>
            <rect x="62.2" y="739.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="65.2" y="750.0"></text>
        </g>
        <g>
            <title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.09%)</title>
            <rect x="62.9" y="739.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="65.9" y="750.0"></text>
        </g>
        <g>
            <title>Monitor::lock_without_safepoint_check() (3 samples, 0.05%)</title>
            <rect x="63.9" y="739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="66.9" y="750.0"></text>
        </g>
        <g>
            <title>Parker::park(bool, long) (39 samples, 0.71%)</title>
            <rect x="64.8" y="739.0" width="8.4" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="67.8" y="750.0"></text>
        </g>
        <g>
            <title>Monitor::lock_without_safepoint_check() (10 samples, 0.18%)</title>
            <rect x="69.1" y="723.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="72.1" y="734.0"></text>
        </g>
        <g>
            <title>Monitor::unlock() (2 samples, 0.04%)</title>
            <rect x="71.2" y="723.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="74.2" y="734.0"></text>
        </g>
        <g>
            <title>__tls_get_addr (5 samples, 0.09%)</title>
            <rect x="71.9" y="723.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="74.9" y="734.0"></text>
        </g>
        <g>
            <title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.11%)</title>
            <rect x="73.2" y="739.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="76.2" y="750.0"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (100 samples, 1.82%)</title>
            <rect x="74.9" y="739.0" width="21.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
            <text x="77.9" y="750.0">_..</text>
        </g>
        <g>
            <title>[unknown] (44 samples, 0.80%)</title>
            <rect x="86.9" y="723.0" width="9.5" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="89.9" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (44 samples, 0.80%)</title>
            <rect x="86.9" y="707.0" width="9.5" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="89.9" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (15 samples, 0.27%)</title>
            <rect x="93.2" y="691.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="96.2" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (15 samples, 0.27%)</title>
            <rect x="93.2" y="675.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="96.2" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (14 samples, 0.25%)</title>
            <rect x="93.4" y="659.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="96.4" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.15%)</title>
            <rect x="94.7" y="643.0" width="1.7" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="97.7" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.07%)</title>
            <rect x="95.5" y="627.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="98.5" y="638.0"></text>
        </g>
        <g>
            <title>__pthread_cond_wait (9 samples, 0.16%)</title>
            <rect x="96.4" y="739.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="99.4" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_trylock (2 samples, 0.04%)</title>
            <rect x="98.3" y="739.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="101.3" y="750.0"></text>
        </g>
        <g>
            <title>_init (3 samples, 0.05%)</title>
            <rect x="99.0" y="739.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="102.0" y="750.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.05%)</title>
            <rect x="99.6" y="739.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="102.6" y="750.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.07%)
            </title>
            <rect x="100.2" y="739.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="103.2" y="750.0"></text>
        </g>
        <g>
            <title>os::is_interrupted(Thread*, bool) (3 samples, 0.05%)</title>
            <rect x="101.1" y="739.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="104.1" y="750.0"></text>
        </g>
        <g>
            <title>pthread_mutex_unlock (6 samples, 0.11%)</title>
            <rect x="101.7" y="739.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
            <text x="104.7" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (187 samples, 3.40%)</title>
            <rect x="103.0" y="755.0" width="40.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="106.0" y="766.0">[un..</text>
        </g>
        <g>
            <title>__pthread_cond_wait (171 samples, 3.11%)</title>
            <rect x="103.2" y="739.0" width="36.8" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="106.2" y="750.0">__p..</text>
        </g>
        <g>
            <title>[unknown] (109 samples, 1.98%)</title>
            <rect x="116.6" y="723.0" width="23.4" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="119.6" y="734.0">[..</text>
        </g>
        <g>
            <title>[unknown] (109 samples, 1.98%)</title>
            <rect x="116.6" y="707.0" width="23.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="119.6" y="718.0">[..</text>
        </g>
        <g>
            <title>[unknown] (95 samples, 1.73%)</title>
            <rect x="119.6" y="691.0" width="20.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="122.6" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (91 samples, 1.66%)</title>
            <rect x="120.4" y="675.0" width="19.6" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="123.4" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (89 samples, 1.62%)</title>
            <rect x="120.9" y="659.0" width="19.1" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="123.9" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (82 samples, 1.49%)</title>
            <rect x="122.4" y="643.0" width="17.6" height="15" fill="#ec6868" rx="2" ry="2"/>
            <text x="125.4" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (63 samples, 1.15%)</title>
            <rect x="126.5" y="627.0" width="13.5" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="129.5" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (51 samples, 0.93%)</title>
            <rect x="129.0" y="611.0" width="11.0" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="132.0" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (41 samples, 0.75%)</title>
            <rect x="131.2" y="595.0" width="8.8" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="134.2" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.15%)</title>
            <rect x="138.3" y="579.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="141.3" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.15%)</title>
            <rect x="138.3" y="563.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="141.3" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.15%)</title>
            <rect x="138.3" y="547.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="141.3" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.15%)</title>
            <rect x="138.3" y="531.0" width="1.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
            <text x="141.3" y="542.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.13%)</title>
            <rect x="138.5" y="515.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="141.5" y="526.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.13%)</title>
            <rect x="138.5" y="499.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="141.5" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="138.7" y="483.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="141.7" y="494.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="138.7" y="467.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="141.7" y="478.0"></text>
        </g>
        <g>
            <title>__pthread_disable_asynccancel (5 samples, 0.09%)</title>
            <rect x="140.0" y="739.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="143.0" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_enable_asynccancel (2 samples, 0.04%)</title>
            <rect x="141.1" y="739.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="144.1" y="750.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_trylock (6 samples, 0.11%)</title>
            <rect x="141.7" y="739.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="144.7" y="750.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.05%)
            </title>
            <rect x="143.2" y="755.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="146.2" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (73 samples, 1.33%)</title>
            <rect x="144.1" y="803.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="147.1" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (73 samples, 1.33%)
            </title>
            <rect x="144.1" y="787.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="147.1" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (2 samples, 0.04%)</title>
            <rect x="144.1" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="147.1" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (68 samples, 1.24%)
            </title>
            <rect x="144.5" y="771.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="147.5" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.04%)</title>
            <rect x="145.6" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="148.6" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (34 samples, 0.62%)
            </title>
            <rect x="146.0" y="755.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="149.0" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (13 samples, 0.24%)</title>
            <rect x="147.1" y="739.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="150.1" y="750.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.29%)</title>
            <rect x="149.9" y="739.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="152.9" y="750.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.setBlocker (7 samples, 0.13%)</title>
            <rect x="149.9" y="723.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="152.9" y="734.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (9 samples, 0.16%)</title>
            <rect x="151.4" y="723.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="154.4" y="734.0"></text>
        </g>
        <g>
            <title>Unsafe_Park (4 samples, 0.07%)</title>
            <rect x="151.4" y="707.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="154.4" y="718.0"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (2 samples, 0.04%)</title>
            <rect x="151.6" y="691.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="154.6" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (4 samples, 0.07%)</title>
            <rect x="152.2" y="707.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="155.2" y="718.0"></text>
        </g>
        <g>
            <title>__pthread_cond_wait (4 samples, 0.07%)</title>
            <rect x="152.2" y="691.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="155.2" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (4 samples, 0.07%)</title>
            <rect x="153.3" y="755.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="156.3" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (19 samples, 0.35%)</title>
            <rect x="154.2" y="755.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="157.2" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (17 samples, 0.31%)</title>
            <rect x="154.6" y="739.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="157.6" y="750.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (14 samples, 0.25%)
            </title>
            <rect x="154.6" y="723.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="157.6" y="734.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.05%)</title>
            <rect x="157.6" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="160.6" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.05%)</title>
            <rect x="157.6" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="160.6" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.04%)</title>
            <rect x="158.3" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="161.3" y="766.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title>
            <rect x="158.7" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="161.7" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.05%)</title>
            <rect x="159.1" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="162.1" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.05%)</title>
            <rect x="159.1" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="162.1" y="766.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.04%)</title>
            <rect x="159.3" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="162.3" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.04%)</title>
            <rect x="159.3" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="162.3" y="734.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (97 samples, 1.77%)</title>
            <rect x="159.8" y="803.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="162.8" y="814.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (97 samples, 1.77%)</title>
            <rect x="159.8" y="787.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="162.8" y="798.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (97 samples, 1.77%)</title>
            <rect x="159.8" y="771.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="162.8" y="782.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (97 samples, 1.77%)</title>
            <rect x="159.8" y="755.0" width="20.8" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="162.8" y="766.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (97 samples, 1.77%)</title>
            <rect x="159.8" y="739.0" width="20.8" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="162.8" y="750.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2
                samples, 0.04%)
            </title>
            <rect x="160.0" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="163.0" y="734.0"></text>
        </g>
        <g>
            <title>Unsafe_Unpark (18 samples, 0.33%)</title>
            <rect x="160.6" y="723.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="163.6" y="734.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title>
            <rect x="161.7" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="164.7" y="718.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples,
                0.04%)
            </title>
            <rect x="162.1" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="165.1" y="718.0"></text>
        </g>
        <g>
            <title>oopDesc::address_field(int) const (5 samples, 0.09%)</title>
            <rect x="163.2" y="707.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="166.2" y="718.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (74 samples, 1.35%)</title>
            <rect x="164.7" y="723.0" width="15.9" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="167.7" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (60 samples, 1.09%)</title>
            <rect x="167.7" y="707.0" width="12.9" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="170.7" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (60 samples, 1.09%)</title>
            <rect x="167.7" y="691.0" width="12.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="170.7" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (56 samples, 1.02%)</title>
            <rect x="168.6" y="675.0" width="12.0" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="171.6" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (55 samples, 1.00%)</title>
            <rect x="168.8" y="659.0" width="11.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="171.8" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (55 samples, 1.00%)</title>
            <rect x="168.8" y="643.0" width="11.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
            <text x="171.8" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (46 samples, 0.84%)</title>
            <rect x="170.7" y="627.0" width="9.9" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="173.7" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (41 samples, 0.75%)</title>
            <rect x="171.8" y="611.0" width="8.8" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="174.8" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (40 samples, 0.73%)</title>
            <rect x="172.0" y="595.0" width="8.6" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="175.0" y="606.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (3 samples, 0.05%)</title>
            <rect x="180.6" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="183.6" y="830.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$68/543070206.run (2,345 samples, 42.70%)</title>
            <rect x="181.5" y="835.0" width="503.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="184.5" y="846.0">ru/mail/polis/service/senyast/ServiceImpl$$Lambda$68/543070206.run</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.lambda$executeAsync$3 (2,339 samples, 42.59%)</title>
            <rect x="182.7" y="819.0" width="502.6" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="185.7" y="830.0">ru/mail/polis/service/senyast/ServiceImpl.lambda$executeAsync$3</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$65/931400431.act (542 samples, 9.87%)</title>
            <rect x="183.2" y="803.0" width="116.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="186.2" y="814.0">ru/mail/polis/..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.lambda$daoMethods$1 (542 samples, 9.87%)</title>
            <rect x="183.2" y="787.0" width="116.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="186.2" y="798.0">ru/mail/polis/..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.putMethod (542 samples, 9.87%)</title>
            <rect x="183.2" y="771.0" width="116.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="186.2" y="782.0">ru/mail/polis/..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (36 samples, 0.66%)</title>
            <rect x="184.0" y="755.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="187.0" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (33 samples, 0.60%)</title>
            <rect x="184.7" y="739.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="187.7" y="750.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.&lt;init&gt; (29 samples, 0.53%)</title>
            <rect x="185.5" y="723.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="188.5" y="734.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.51%)</title>
            <rect x="185.8" y="707.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="188.8" y="718.0"></text>
        </g>
        <g>
            <title>gettimeofday (6 samples, 0.11%)</title>
            <rect x="187.0" y="691.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="190.0" y="702.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title>
            <rect x="188.3" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="191.3" y="702.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title>
            <rect x="188.8" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="191.8" y="702.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title>
            <rect x="189.2" y="691.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="192.2" y="702.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (9 samples, 0.16%)</title>
            <rect x="189.8" y="691.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="192.8" y="702.0"></text>
        </g>
        <g>
            <title>gettimeofday (8 samples, 0.15%)</title>
            <rect x="190.1" y="675.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="193.1" y="686.0"></text>
        </g>
        <g>
            <title>[vdso] (4 samples, 0.07%)</title>
            <rect x="190.9" y="659.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="193.9" y="670.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getBody (3 samples, 0.05%)</title>
            <rect x="191.8" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="194.8" y="766.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.07%)</title>
            <rect x="192.4" y="755.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="195.4" y="766.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/LSMDao.upsert (495 samples, 9.01%)</title>
            <rect x="193.3" y="755.0" width="106.3" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="196.3" y="766.0">ru/mail/polis..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTablePool.upsert (495 samples, 9.01%)</title>
            <rect x="193.3" y="739.0" width="106.3" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="196.3" y="750.0">ru/mail/polis..</text>
        </g>
        <g>
            <title>java/util/concurrent/atomic/AtomicBoolean.get (4 samples, 0.07%)</title>
            <rect x="193.3" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="196.3" y="734.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable.upsert (482 samples, 8.78%)</title>
            <rect x="194.1" y="723.0" width="103.6" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="197.1" y="734.0">ru/mail/poli..</text>
        </g>
        <g>
            <title>java/nio/Buffer.remaining (6 samples, 0.11%)</title>
            <rect x="194.3" y="707.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="197.3" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.07%)</title>
            <rect x="194.8" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="197.8" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.put (464 samples, 8.45%)</title>
            <rect x="195.6" y="707.0" width="99.7" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="198.6" y="718.0">java/util/co..</text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (464 samples, 8.45%)</title>
            <rect x="195.6" y="691.0" width="99.7" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="198.6" y="702.0">java/util/co..</text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (30 samples, 0.55%)</title>
            <rect x="199.3" y="675.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="202.3" y="686.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (27 samples, 0.49%)</title>
            <rect x="199.9" y="659.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="202.9" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="205.3" y="643.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="208.3" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="205.3" y="627.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="208.3" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="205.3" y="611.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="208.3" y="622.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (24 samples, 0.44%)</title>
            <rect x="205.7" y="675.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="208.7" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (11 samples, 0.20%)</title>
            <rect x="210.9" y="675.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="213.9" y="686.0"></text>
        </g>
        <g>
            <title>java/lang/Object.&lt;init&gt; (4 samples, 0.07%)</title>
            <rect x="211.8" y="659.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="214.8" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (4 samples, 0.07%)</title>
            <rect x="211.8" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="214.8" y="654.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title>
            <rect x="212.6" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="215.6" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (23 samples, 0.42%)</title>
            <rect x="213.5" y="675.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="216.5" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (9 samples, 0.16%)</title>
            <rect x="213.9" y="659.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="216.9" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.07%)</title>
            <rect x="215.0" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="218.0" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.04%)</title>
            <rect x="215.4" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="218.4" y="638.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (12 samples, 0.22%)</title>
            <rect x="215.8" y="659.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="218.8" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (12 samples, 0.22%)</title>
            <rect x="215.8" y="643.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="218.8" y="654.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (8 samples, 0.15%)</title>
            <rect x="216.7" y="627.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="219.7" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.position (3 samples, 0.05%)</title>
            <rect x="216.7" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="219.7" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (4 samples, 0.07%)</title>
            <rect x="217.3" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="220.3" y="622.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (4 samples, 0.07%)</title>
            <rect x="217.3" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="220.3" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.ix (2 samples, 0.04%)</title>
            <rect x="217.8" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="220.8" y="590.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (358 samples, 6.52%)</title>
            <rect x="218.4" y="675.0" width="76.9" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="221.4" y="686.0">java/uti..</text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="255.2" y="659.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="258.2" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="255.2" y="643.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="258.2" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="255.2" y="627.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="258.2" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="255.2" y="611.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="258.2" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="255.2" y="595.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="258.2" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="255.2" y="579.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="258.2" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="255.2" y="563.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="258.2" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="255.2" y="547.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="258.2" y="558.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (185 samples, 3.37%)</title>
            <rect x="255.6" y="659.0" width="39.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="258.6" y="670.0">jav..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (140 samples, 2.55%)</title>
            <rect x="265.3" y="643.0" width="30.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="268.3" y="654.0">ja..</text>
        </g>
        <g>
            <title>java/nio/Buffer.position (5 samples, 0.09%)</title>
            <rect x="266.8" y="627.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="269.8" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.remaining (10 samples, 0.18%)</title>
            <rect x="267.8" y="627.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="270.8" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (78 samples, 1.42%)</title>
            <rect x="270.0" y="627.0" width="16.7" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="273.0" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (38 samples, 0.69%)</title>
            <rect x="278.6" y="611.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="281.6" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="283.5" y="595.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="286.5" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="283.5" y="579.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="286.5" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="283.5" y="563.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="286.5" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="283.5" y="547.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="286.5" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="283.5" y="531.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="286.5" y="542.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="283.5" y="515.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="286.5" y="526.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="283.7" y="499.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="286.7" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="283.7" y="483.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="286.7" y="494.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (6 samples, 0.11%)</title>
            <rect x="284.2" y="595.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="287.2" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.ix (6 samples, 0.11%)</title>
            <rect x="285.4" y="595.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="288.4" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (40 samples, 0.73%)</title>
            <rect x="286.7" y="627.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="289.7" y="638.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (30 samples, 0.55%)</title>
            <rect x="287.6" y="611.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="290.6" y="622.0"></text>
        </g>
        <g>
            <title>vectorizedMismatch (27 samples, 0.49%)</title>
            <rect x="288.2" y="595.0" width="5.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="291.2" y="606.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.ix (6 samples, 0.11%)</title>
            <rect x="294.0" y="611.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="297.0" y="622.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (3 samples, 0.05%)</title>
            <rect x="295.3" y="707.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="298.3" y="718.0"></text>
        </g>
        <g>
            <title>gettimeofday (3 samples, 0.05%)</title>
            <rect x="295.3" y="691.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="298.3" y="702.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/model/Value.getData (7 samples, 0.13%)</title>
            <rect x="296.0" y="707.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="299.0" y="718.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.13%)</title>
            <rect x="296.0" y="691.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="299.0" y="702.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.11%)</title>
            <rect x="296.2" y="675.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="299.2" y="686.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.11%)</title>
            <rect x="296.2" y="659.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="299.2" y="670.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title>
            <rect x="296.8" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="299.8" y="654.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTablePool.syncAddToFlush (9 samples, 0.16%)</title>
            <rect x="297.7" y="723.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="300.7" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="298.3" y="707.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="301.3" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="298.3" y="691.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="301.3" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="298.3" y="675.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="301.3" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="298.3" y="659.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="301.3" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="298.3" y="643.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="301.3" y="654.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable.&lt;init&gt; (2 samples, 0.04%)</title>
            <rect x="298.8" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="301.8" y="718.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/TableToFlush.&lt;init&gt; (2 samples, 0.04%)</title>
            <rect x="299.2" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="302.2" y="718.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/TableToFlush.&lt;init&gt; (2 samples, 0.04%)</title>
            <rect x="299.2" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="302.2" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title>
            <rect x="299.2" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="302.2" y="686.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.sendResponse (1,795 samples, 32.68%)</title>
            <rect x="299.6" y="803.0" width="385.7" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="302.6" y="814.0">ru/mail/polis/service/senyast/ServiceImpl.sendResponse</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (1,794 samples, 32.67%)</title>
            <rect x="299.8" y="787.0" width="385.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="302.8" y="798.0">one/nio/http/HttpSession.sendResponse</text>
        </g>
        <g>
            <title>java/lang/String.equalsIgnoreCase (13 samples, 0.24%)</title>
            <rect x="304.6" y="771.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="307.6" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (2 samples, 0.04%)</title>
            <rect x="305.2" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="308.2" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (8 samples, 0.15%)</title>
            <rect x="305.6" y="755.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="308.6" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.15%)</title>
            <rect x="305.6" y="739.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="308.6" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (1,744 samples, 31.76%)</title>
            <rect x="307.6" y="771.0" width="374.7" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="310.6" y="782.0">one/nio/http/HttpSession.writeResponse</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (69 samples, 1.26%)</title>
            <rect x="307.8" y="755.0" width="14.8" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="310.8" y="766.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (9 samples, 0.16%)</title>
            <rect x="310.4" y="739.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="313.4" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.05%)</title>
            <rect x="312.3" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="315.3" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.append (45 samples, 0.82%)</title>
            <rect x="312.9" y="739.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="315.9" y="750.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="312.9" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="315.9" y="734.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="312.9" y="707.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="315.9" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="312.9" y="691.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="315.9" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.ensureCapacity (4 samples, 0.07%)</title>
            <rect x="313.4" y="723.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="316.4" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.length (17 samples, 0.31%)</title>
            <rect x="314.2" y="723.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="317.2" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (5 samples, 0.09%)</title>
            <rect x="316.6" y="707.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="319.6" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.charAt (5 samples, 0.09%)</title>
            <rect x="316.6" y="691.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="319.6" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.write (22 samples, 0.40%)</title>
            <rect x="317.9" y="723.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="320.9" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.write (22 samples, 0.40%)</title>
            <rect x="317.9" y="707.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="320.9" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (3 samples, 0.05%)</title>
            <rect x="321.5" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="324.5" y="702.0"></text>
        </g>
        <g>
            <title>java/lang/String.isLatin1 (3 samples, 0.05%)</title>
            <rect x="321.5" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="324.5" y="686.0"></text>
        </g>
        <g>
            <title>sun/misc/Unsafe.putByte (2 samples, 0.04%)</title>
            <rect x="322.2" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="325.2" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.write (1,674 samples, 30.48%)</title>
            <rect x="322.6" y="755.0" width="359.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="325.6" y="766.0">one/nio/net/Session.write</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (1,672 samples, 30.44%)</title>
            <rect x="323.0" y="739.0" width="359.3" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="326.0" y="750.0">one/nio/net/Session.write</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (1,666 samples, 30.34%)</title>
            <rect x="323.7" y="723.0" width="357.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="326.7" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.write (1,661 samples, 30.24%)</title>
            <rect x="324.8" y="707.0" width="356.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="327.8" y="718.0">one/nio/net/NativeSocket.write</text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_write (3 samples, 0.05%)</title>
            <rect x="328.6" y="691.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="331.6" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (50 samples, 0.91%)</title>
            <rect x="329.3" y="691.0" width="10.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="332.3" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (50 samples, 0.91%)</title>
            <rect x="329.3" y="675.0" width="10.7" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="332.3" y="686.0"></text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_write (39 samples, 0.71%)</title>
            <rect x="329.3" y="659.0" width="8.4" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="332.3" y="670.0"></text>
        </g>
        <g>
            <title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;,
                (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)
            </title>
            <rect x="330.4" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="333.4" y="654.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title>
            <rect x="330.8" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="333.8" y="654.0"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (4 samples, 0.07%)</title>
            <rect x="331.6" y="643.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="334.6" y="654.0"></text>
        </g>
        <g>
            <title>jni_GetByteArrayRegion (22 samples, 0.40%)</title>
            <rect x="332.7" y="643.0" width="4.7" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="335.7" y="654.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title>
            <rect x="333.6" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="336.6" y="638.0"></text>
        </g>
        <g>
            <title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title>
            <rect x="334.0" y="627.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="337.0" y="638.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (6
                samples, 0.11%)
            </title>
            <rect x="334.4" y="627.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="337.4" y="638.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (8 samples, 0.15%)</title>
            <rect x="335.7" y="627.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="338.7" y="638.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (5 samples, 0.09%)</title>
            <rect x="336.2" y="611.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="339.2" y="622.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (5 samples, 0.09%)</title>
            <rect x="337.9" y="659.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="340.9" y="670.0"></text>
        </g>
        <g>
            <title>__send (3 samples, 0.05%)</title>
            <rect x="338.9" y="659.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="341.9" y="670.0"></text>
        </g>
        <g>
            <title>jni_GetByteArrayRegion (2 samples, 0.04%)</title>
            <rect x="339.6" y="659.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="342.6" y="670.0"></text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (4 samples, 0.07%)</title>
            <rect x="340.0" y="691.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="343.0" y="702.0"></text>
        </g>
        <g>
            <title>__send (1,586 samples, 28.88%)</title>
            <rect x="340.9" y="691.0" width="340.7" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="343.9" y="702.0">__send</text>
        </g>
        <g>
            <title>[unknown] (1,517 samples, 27.62%)</title>
            <rect x="355.7" y="675.0" width="325.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
            <text x="358.7" y="686.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,517 samples, 27.62%)</title>
            <rect x="355.7" y="659.0" width="325.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="358.7" y="670.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,467 samples, 26.71%)</title>
            <rect x="366.4" y="643.0" width="315.2" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="369.4" y="654.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,464 samples, 26.66%)</title>
            <rect x="367.1" y="627.0" width="314.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="370.1" y="638.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,451 samples, 26.42%)</title>
            <rect x="369.9" y="611.0" width="311.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="372.9" y="622.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,437 samples, 26.17%)</title>
            <rect x="372.9" y="595.0" width="308.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="375.9" y="606.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,419 samples, 25.84%)</title>
            <rect x="376.8" y="579.0" width="304.8" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="379.8" y="590.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,415 samples, 25.76%)</title>
            <rect x="377.6" y="563.0" width="304.0" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="380.6" y="574.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,335 samples, 24.31%)</title>
            <rect x="394.8" y="547.0" width="286.8" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="397.8" y="558.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,292 samples, 23.53%)</title>
            <rect x="404.0" y="531.0" width="277.6" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="407.0" y="542.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,229 samples, 22.38%)</title>
            <rect x="417.6" y="515.0" width="264.0" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="420.6" y="526.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,165 samples, 21.21%)</title>
            <rect x="431.3" y="499.0" width="250.3" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="434.3" y="510.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,075 samples, 19.57%)</title>
            <rect x="450.7" y="483.0" width="230.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="453.7" y="494.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (1,021 samples, 18.59%)</title>
            <rect x="462.3" y="467.0" width="219.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="465.3" y="478.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (998 samples, 18.17%)</title>
            <rect x="467.2" y="451.0" width="214.4" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="470.2" y="462.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (976 samples, 17.77%)</title>
            <rect x="471.9" y="435.0" width="209.7" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="474.9" y="446.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (921 samples, 16.77%)</title>
            <rect x="483.8" y="419.0" width="197.8" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="486.8" y="430.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (847 samples, 15.42%)</title>
            <rect x="499.7" y="403.0" width="181.9" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="502.7" y="414.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (777 samples, 14.15%)</title>
            <rect x="514.7" y="387.0" width="166.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="517.7" y="398.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (667 samples, 12.14%)</title>
            <rect x="538.3" y="371.0" width="143.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
            <text x="541.3" y="382.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (627 samples, 11.42%)</title>
            <rect x="546.9" y="355.0" width="134.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="549.9" y="366.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (603 samples, 10.98%)</title>
            <rect x="552.1" y="339.0" width="129.5" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="555.1" y="350.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (577 samples, 10.51%)</title>
            <rect x="557.7" y="323.0" width="123.9" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="560.7" y="334.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (555 samples, 10.11%)</title>
            <rect x="562.4" y="307.0" width="119.2" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="565.4" y="318.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (543 samples, 9.89%)</title>
            <rect x="565.0" y="291.0" width="116.6" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="568.0" y="302.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (515 samples, 9.38%)</title>
            <rect x="571.0" y="275.0" width="110.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="574.0" y="286.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (500 samples, 9.10%)</title>
            <rect x="574.2" y="259.0" width="107.4" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="577.2" y="270.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (466 samples, 8.49%)</title>
            <rect x="581.5" y="243.0" width="100.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="584.5" y="254.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (458 samples, 8.34%)</title>
            <rect x="583.2" y="227.0" width="98.4" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="586.2" y="238.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (423 samples, 7.70%)</title>
            <rect x="590.8" y="211.0" width="90.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="593.8" y="222.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (394 samples, 7.17%)</title>
            <rect x="597.0" y="195.0" width="84.6" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="600.0" y="206.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (315 samples, 5.74%)</title>
            <rect x="614.0" y="179.0" width="67.6" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="617.0" y="190.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (282 samples, 5.13%)</title>
            <rect x="621.1" y="163.0" width="60.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
            <text x="624.1" y="174.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (224 samples, 4.08%)</title>
            <rect x="633.5" y="147.0" width="48.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="636.5" y="158.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (157 samples, 2.86%)</title>
            <rect x="647.9" y="131.0" width="33.7" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="650.9" y="142.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (138 samples, 2.51%)</title>
            <rect x="652.0" y="115.0" width="29.6" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="655.0" y="126.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (129 samples, 2.35%)</title>
            <rect x="653.9" y="99.0" width="27.7" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="656.9" y="110.0">[..</text>
        </g>
        <g>
            <title>[unknown] (25 samples, 0.46%)</title>
            <rect x="676.3" y="83.0" width="5.3" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="679.3" y="94.0"></text>
        </g>
        <g>
            <title>[unknown] (22 samples, 0.40%)</title>
            <rect x="676.9" y="67.0" width="4.7" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="679.9" y="78.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="680.4" y="51.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="683.4" y="62.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="680.4" y="35.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="683.4" y="46.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (3 samples, 0.05%)</title>
            <rect x="681.6" y="723.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="684.6" y="734.0"></text>
        </g>
        <g>
            <title>gettimeofday (3 samples, 0.05%)</title>
            <rect x="681.6" y="707.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="684.6" y="718.0"></text>
        </g>
        <g>
            <title>[vdso] (2 samples, 0.04%)</title>
            <rect x="681.9" y="691.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="684.9" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (14 samples, 0.25%)</title>
            <rect x="682.3" y="771.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="685.3" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (13 samples, 0.24%)</title>
            <rect x="682.5" y="755.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="685.5" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (3 samples, 0.05%)</title>
            <rect x="682.5" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="685.5" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.18%)</title>
            <rect x="683.2" y="739.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="686.2" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title>
            <rect x="684.0" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="687.0" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (4 samples, 0.07%)</title>
            <rect x="684.4" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="687.4" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (4 samples, 0.07%)</title>
            <rect x="684.4" y="707.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="687.4" y="718.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.07%)</title>
            <rect x="684.4" y="691.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="687.4" y="702.0"></text>
        </g>
        <g>
            <title>one/nio/server/AcceptorThread.run (2 samples, 0.04%)</title>
            <rect x="685.7" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="688.7" y="894.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.createSession (2 samples, 0.04%)</title>
            <rect x="685.7" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="688.7" y="878.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.createSession (2 samples, 0.04%)</title>
            <rect x="685.7" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="688.7" y="862.0"></text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (1,704 samples, 31.03%)</title>
            <rect x="686.2" y="883.0" width="366.1" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="689.2" y="894.0">one/nio/server/SelectorThread.run</text>
        </g>
        <g>
            <title>I2C/C2I adapters (2 samples, 0.04%)</title>
            <rect x="690.2" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="693.2" y="878.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title>
            <rect x="690.9" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="693.9" y="878.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector.select (548 samples, 9.98%)</title>
            <rect x="691.3" y="867.0" width="117.8" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="694.3" y="878.0">one/nio/net/Na..</text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.&lt;init&gt; (34 samples, 0.62%)</title>
            <rect x="694.5" y="851.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="697.5" y="862.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector$2.findNext (17 samples, 0.31%)</title>
            <rect x="698.2" y="835.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="701.2" y="846.0"></text>
        </g>
        <g>
            <title>one/nio/net/NativeSelector.epollWait (499 samples, 9.09%)</title>
            <rect x="701.8" y="851.0" width="107.3" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="704.8" y="862.0">one/nio/net/N..</text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.07%)</title>
            <rect x="707.0" y="835.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="710.0" y="846.0"></text>
        </g>
        <g>
            <title>[unknown] (443 samples, 8.07%)</title>
            <rect x="707.9" y="835.0" width="95.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="710.9" y="846.0">[unknown]</text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (6 samples, 0.11%)</title>
            <rect x="708.1" y="819.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
            <text x="711.1" y="830.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (4 samples, 0.07%)</title>
            <rect x="709.4" y="819.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="712.4" y="830.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (2 samples, 0.04%)</title>
            <rect x="710.2" y="819.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="713.2" y="830.0"></text>
        </g>
        <g>
            <title>clock_gettime (2 samples, 0.04%)</title>
            <rect x="710.7" y="819.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="713.7" y="830.0"></text>
        </g>
        <g>
            <title>epoll_wait (428 samples, 7.79%)</title>
            <rect x="711.1" y="819.0" width="91.9" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="714.1" y="830.0">epoll_wait</text>
        </g>
        <g>
            <title>[unknown] (370 samples, 6.74%)</title>
            <rect x="723.5" y="803.0" width="79.5" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="726.5" y="814.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (370 samples, 6.74%)</title>
            <rect x="723.5" y="787.0" width="79.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="726.5" y="798.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (338 samples, 6.15%)</title>
            <rect x="730.4" y="771.0" width="72.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="733.4" y="782.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (331 samples, 6.03%)</title>
            <rect x="731.9" y="755.0" width="71.1" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="734.9" y="766.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (309 samples, 5.63%)</title>
            <rect x="736.6" y="739.0" width="66.4" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="739.6" y="750.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (265 samples, 4.83%)</title>
            <rect x="746.1" y="723.0" width="56.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
            <text x="749.1" y="734.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (198 samples, 3.61%)</title>
            <rect x="760.5" y="707.0" width="42.5" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="763.5" y="718.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (161 samples, 2.93%)</title>
            <rect x="768.4" y="691.0" width="34.6" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="771.4" y="702.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (114 samples, 2.08%)</title>
            <rect x="778.5" y="675.0" width="24.5" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="781.5" y="686.0">[..</text>
        </g>
        <g>
            <title>[unknown] (16 samples, 0.29%)</title>
            <rect x="799.6" y="659.0" width="3.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="802.6" y="670.0"></text>
        </g>
        <g>
            <title>[unknown] (14 samples, 0.25%)</title>
            <rect x="800.0" y="643.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="803.0" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (14 samples, 0.25%)</title>
            <rect x="800.0" y="627.0" width="3.0" height="15" fill="#e66060" rx="2" ry="2"/>
            <text x="803.0" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (14 samples, 0.25%)</title>
            <rect x="800.0" y="611.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="803.0" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (13 samples, 0.24%)</title>
            <rect x="800.2" y="595.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
            <text x="803.2" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (12 samples, 0.22%)</title>
            <rect x="800.5" y="579.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="803.5" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (10 samples, 0.18%)</title>
            <rect x="800.9" y="563.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="803.9" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (10 samples, 0.18%)</title>
            <rect x="800.9" y="547.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
            <text x="803.9" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="802.6" y="531.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="805.6" y="542.0"></text>
        </g>
        <g>
            <title>_init (4 samples, 0.07%)</title>
            <rect x="803.0" y="835.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="806.0" y="846.0"></text>
        </g>
        <g>
            <title>clock_gettime (8 samples, 0.15%)</title>
            <rect x="803.9" y="835.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
            <text x="806.9" y="846.0"></text>
        </g>
        <g>
            <title>epoll_wait (4 samples, 0.07%)</title>
            <rect x="805.6" y="835.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="808.6" y="846.0"></text>
        </g>
        <g>
            <title>gettimeofday (3 samples, 0.05%)</title>
            <rect x="806.5" y="835.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
            <text x="809.5" y="846.0"></text>
        </g>
        <g>
            <title>clock_gettime (3 samples, 0.05%)</title>
            <rect x="806.5" y="819.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="809.5" y="830.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (2 samples, 0.04%)</title>
            <rect x="806.7" y="803.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="809.7" y="814.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (9 samples, 0.16%)</title>
            <rect x="807.1" y="835.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="810.1" y="846.0"></text>
        </g>
        <g>
            <title>gettimeofday (9 samples, 0.16%)</title>
            <rect x="807.1" y="819.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="810.1" y="830.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (4 samples, 0.07%)</title>
            <rect x="807.1" y="803.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="810.1" y="814.0"></text>
        </g>
        <g>
            <title>clock_gettime (5 samples, 0.09%)</title>
            <rect x="808.0" y="803.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="811.0" y="814.0"></text>
        </g>
        <g>
            <title>__vdso_clock_gettime (3 samples, 0.05%)</title>
            <rect x="808.4" y="787.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="811.4" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.process (1,132 samples, 20.61%)</title>
            <rect x="809.1" y="867.0" width="243.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="812.1" y="878.0">one/nio/net/Session.process</text>
        </g>
        <g>
            <title>gettimeofday (5 samples, 0.09%)</title>
            <rect x="812.3" y="851.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="815.3" y="862.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (1,105 samples, 20.12%)</title>
            <rect x="813.4" y="851.0" width="237.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="816.4" y="862.0">one/nio/http/HttpSession.proces..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (584 samples, 10.63%)</title>
            <rect x="815.9" y="835.0" width="125.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="818.9" y="846.0">one/nio/http/Ht..</text>
        </g>
        <g>
            <title>RequestHandler1_daoMethods.handleRequest (2 samples, 0.04%)</title>
            <rect x="821.3" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="824.3" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.04%)</title>
            <rect x="822.2" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="825.2" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (363 samples, 6.61%)</title>
            <rect x="822.6" y="819.0" width="78.0" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="825.6" y="830.0">one/nio/h..</text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="825.2" y="803.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="828.2" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (349 samples, 6.35%)</title>
            <rect x="825.6" y="803.0" width="75.0" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="828.6" y="814.0">one/nio/..</text>
        </g>
        <g>
            <title>RequestHandler1_daoMethods.handleRequest (316 samples, 5.75%)</title>
            <rect x="826.0" y="787.0" width="67.9" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="829.0" y="798.0">Request..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (31 samples, 0.56%)</title>
            <rect x="826.7" y="771.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="829.7" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (11 samples, 0.20%)</title>
            <rect x="827.5" y="755.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="830.5" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (10 samples, 0.18%)</title>
            <rect x="827.7" y="739.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="830.7" y="750.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title>
            <rect x="828.4" y="723.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="831.4" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title>
            <rect x="829.3" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="832.3" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.startsWith (8 samples, 0.15%)</title>
            <rect x="829.9" y="755.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="832.9" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (7 samples, 0.13%)</title>
            <rect x="830.1" y="739.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="833.1" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/String.coder (5 samples, 0.09%)</title>
            <rect x="830.5" y="723.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="833.5" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (2 samples, 0.04%)</title>
            <rect x="831.6" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="834.6" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title>
            <rect x="831.6" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="834.6" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/util/URLEncoder.decode (6 samples, 0.11%)</title>
            <rect x="832.0" y="755.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="835.0" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (5 samples, 0.09%)</title>
            <rect x="832.3" y="739.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="835.3" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (5 samples, 0.09%)</title>
            <rect x="832.3" y="723.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="835.3" y="734.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title>
            <rect x="832.5" y="707.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="835.5" y="718.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.daoMethods (282 samples, 5.13%)</title>
            <rect x="833.3" y="771.0" width="60.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="836.3" y="782.0">ru/mai..</text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.27%)</title>
            <rect x="834.2" y="755.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="837.2" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.27%)</title>
            <rect x="834.2" y="739.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="837.2" y="750.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$65/931400431.get$Lambda (15 samples, 0.27%)</title>
            <rect x="834.2" y="723.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="837.2" y="734.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$65/931400431.&lt;init&gt; (13 samples, 0.24%)
            </title>
            <rect x="834.6" y="707.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="837.6" y="718.0"></text>
        </g>
        <g>
            <title>jlong_disjoint_arraycopy (3 samples, 0.05%)</title>
            <rect x="836.8" y="691.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="839.8" y="702.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title>
            <rect x="837.4" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="840.4" y="766.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title>
            <rect x="837.4" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="840.4" y="750.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/senyast/ServiceImpl.executeAsync (261 samples, 4.75%)</title>
            <rect x="837.8" y="755.0" width="56.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="840.8" y="766.0">ru/mai..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (257 samples, 4.68%)</title>
            <rect x="838.7" y="739.0" width="55.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="841.7" y="750.0">java/..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.offer (252 samples, 4.59%)</title>
            <rect x="839.8" y="723.0" width="54.1" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="842.8" y="734.0">java/..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.enqueue (2 samples, 0.04%)</title>
            <rect x="840.0" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="843.0" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (208 samples, 3.79%)</title>
            <rect x="840.4" y="707.0" width="44.7" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="843.4" y="718.0">java..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.15%)</title>
            <rect x="840.4" y="691.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="843.4" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.15%)</title>
            <rect x="840.4" y="675.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="843.4" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title>
            <rect x="840.4" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="843.4" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)
            </title>
            <rect x="840.4" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="843.4" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title>
            <rect x="840.4" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="843.4" y="638.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title>
            <rect x="840.4" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="843.4" y="622.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.11%)</title>
            <rect x="840.9" y="659.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="843.9" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.11%)</title>
            <rect x="840.9" y="643.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="843.9" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (6 samples, 0.11%)</title>
            <rect x="840.9" y="627.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="843.9" y="638.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (200 samples, 3.64%)</title>
            <rect x="842.1" y="691.0" width="43.0" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="845.1" y="702.0">java..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (200 samples, 3.64%)</title>
            <rect x="842.1" y="675.0" width="43.0" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="845.1" y="686.0">java..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (200 samples, 3.64%)</title>
            <rect x="842.1" y="659.0" width="43.0" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="845.1" y="670.0">java..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (200 samples, 3.64%)</title>
            <rect x="842.1" y="643.0" width="43.0" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="845.1" y="654.0">java..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (200 samples, 3.64%)</title>
            <rect x="842.1" y="627.0" width="43.0" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="845.1" y="638.0">jdk/..</text>
        </g>
        <g>
            <title>Unsafe_Unpark (30 samples, 0.55%)</title>
            <rect x="842.6" y="611.0" width="6.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="845.6" y="622.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples,
                0.15%)
            </title>
            <rect x="844.1" y="595.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="847.1" y="606.0"></text>
        </g>
        <g>
            <title>__pthread_mutex_lock (6 samples, 0.11%)</title>
            <rect x="846.2" y="595.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="849.2" y="606.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.05%)</title>
            <rect x="847.5" y="595.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="850.5" y="606.0"></text>
        </g>
        <g>
            <title>pthread_mutex_lock (2 samples, 0.04%)</title>
            <rect x="848.2" y="595.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="851.2" y="606.0"></text>
        </g>
        <g>
            <title>pthread_mutex_unlock (2 samples, 0.04%)</title>
            <rect x="848.6" y="595.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
            <text x="851.6" y="606.0"></text>
        </g>
        <g>
            <title>__pthread_cond_signal (3 samples, 0.05%)</title>
            <rect x="849.0" y="611.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="852.0" y="622.0"></text>
        </g>
        <g>
            <title>__tls_get_addr (4 samples, 0.07%)</title>
            <rect x="849.7" y="611.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="852.7" y="622.0"></text>
        </g>
        <g>
            <title>pthread_cond_signal@@GLIBC_2.3.2 (160 samples, 2.91%)</title>
            <rect x="850.7" y="611.0" width="34.4" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="853.7" y="622.0">pt..</text>
        </g>
        <g>
            <title>[unknown] (126 samples, 2.29%)</title>
            <rect x="858.0" y="595.0" width="27.1" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="861.0" y="606.0">[..</text>
        </g>
        <g>
            <title>[unknown] (126 samples, 2.29%)</title>
            <rect x="858.0" y="579.0" width="27.1" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="861.0" y="590.0">[..</text>
        </g>
        <g>
            <title>[unknown] (114 samples, 2.08%)</title>
            <rect x="860.6" y="563.0" width="24.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="863.6" y="574.0">[..</text>
        </g>
        <g>
            <title>[unknown] (113 samples, 2.06%)</title>
            <rect x="860.8" y="547.0" width="24.3" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="863.8" y="558.0">[..</text>
        </g>
        <g>
            <title>[unknown] (111 samples, 2.02%)</title>
            <rect x="861.3" y="531.0" width="23.8" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="864.3" y="542.0">[..</text>
        </g>
        <g>
            <title>[unknown] (102 samples, 1.86%)</title>
            <rect x="863.2" y="515.0" width="21.9" height="15" fill="#f57474" rx="2" ry="2"/>
            <text x="866.2" y="526.0">[..</text>
        </g>
        <g>
            <title>[unknown] (94 samples, 1.71%)</title>
            <rect x="864.9" y="499.0" width="20.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="867.9" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (89 samples, 1.62%)</title>
            <rect x="866.0" y="483.0" width="19.1" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="869.0" y="494.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="884.7" y="467.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="887.7" y="478.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="884.7" y="451.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="887.7" y="462.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="884.7" y="435.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="887.7" y="446.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="884.7" y="419.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="887.7" y="430.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="884.7" y="403.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="887.7" y="414.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="884.7" y="387.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="887.7" y="398.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="884.7" y="371.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="887.7" y="382.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="884.7" y="355.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="887.7" y="366.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)
            </title>
            <rect x="885.1" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="888.1" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.04%)
            </title>
            <rect x="885.1" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="888.1" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.04%)</title>
            <rect x="885.1" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="888.1" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.04%)</title>
            <rect x="885.1" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="888.1" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (39 samples, 0.71%)</title>
            <rect x="885.5" y="707.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="888.5" y="718.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (39 samples, 0.71%)</title>
            <rect x="885.5" y="691.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="888.5" y="702.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.11%)</title>
            <rect x="885.8" y="675.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="888.8" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (17 samples, 0.31%)</title>
            <rect x="887.1" y="675.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="890.1" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (6 samples, 0.11%)</title>
            <rect x="887.7" y="659.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="890.7" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LL_V (6 samples, 0.11%)</title>
            <rect x="887.7" y="643.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="890.7" y="654.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.04%)</title>
            <rect x="888.6" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="891.6" y="638.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (8 samples, 0.15%)</title>
            <rect x="889.0" y="659.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="892.0" y="670.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.15%)</title>
            <rect x="889.0" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="892.0" y="654.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (7 samples, 0.13%)</title>
            <rect x="889.2" y="627.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="892.2" y="638.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (15 samples, 0.27%)</title>
            <rect x="890.7" y="675.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="893.7" y="686.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (15 samples, 0.27%)</title>
            <rect x="890.7" y="659.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="893.7" y="670.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (6 samples, 0.11%)
            </title>
            <rect x="890.7" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="893.7" y="654.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (9 samples, 0.16%)</title>
            <rect x="892.0" y="643.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="895.0" y="654.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleGuards.guard_LII_Z (9 samples, 0.16%)</title>
            <rect x="892.0" y="627.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="895.0" y="638.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarForm.getMemberName (5 samples, 0.09%)</title>
            <rect x="892.2" y="611.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="895.2" y="622.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title>
            <rect x="893.3" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="896.3" y="622.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.findHandlerByHost (5 samples, 0.09%)</title>
            <rect x="893.9" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="896.9" y="798.0"></text>
        </g>
        <g>
            <title>one/nio/http/PathMapper.find (15 samples, 0.27%)</title>
            <rect x="895.0" y="787.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="898.0" y="798.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.get (15 samples, 0.27%)</title>
            <rect x="895.0" y="771.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="898.0" y="782.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.getNode (9 samples, 0.16%)</title>
            <rect x="895.0" y="755.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="898.0" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.equals (7 samples, 0.13%)</title>
            <rect x="895.4" y="739.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="898.4" y="750.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.hash (6 samples, 0.11%)</title>
            <rect x="896.9" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="899.9" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/String.hashCode (6 samples, 0.11%)</title>
            <rect x="896.9" y="739.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="899.9" y="750.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.hashCode (5 samples, 0.09%)</title>
            <rect x="897.1" y="723.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="900.1" y="734.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getPath (11 samples, 0.20%)</title>
            <rect x="898.2" y="787.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="901.2" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (10 samples, 0.18%)</title>
            <rect x="898.4" y="771.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="901.4" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (10 samples, 0.18%)</title>
            <rect x="898.4" y="755.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="901.4" y="766.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.parseRequest (105 samples, 1.91%)</title>
            <rect x="900.6" y="819.0" width="22.5" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="903.6" y="830.0">o..</text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (23 samples, 0.42%)</title>
            <rect x="908.5" y="803.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="911.5" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (9 samples, 0.16%)</title>
            <rect x="911.5" y="787.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="914.5" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (9 samples, 0.16%)</title>
            <rect x="911.5" y="771.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="914.5" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (2 samples, 0.04%)</title>
            <rect x="912.0" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="915.0" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (5 samples, 0.09%)</title>
            <rect x="912.4" y="755.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="915.4" y="766.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (40 samples, 0.73%)</title>
            <rect x="913.5" y="803.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="916.5" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (38 samples, 0.69%)</title>
            <rect x="913.9" y="787.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="916.9" y="798.0"></text>
        </g>
        <g>
            <title>sun/misc/Unsafe.getByte (3 samples, 0.05%)</title>
            <rect x="921.4" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="924.4" y="782.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.startsWith (5 samples, 0.09%)</title>
            <rect x="922.1" y="803.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="925.1" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.startParsingRequestBody (12 samples, 0.22%)</title>
            <rect x="923.1" y="819.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="926.1" y="830.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (8 samples, 0.15%)</title>
            <rect x="924.0" y="803.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="927.0" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (7 samples, 0.13%)</title>
            <rect x="924.2" y="787.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="927.2" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Character.digit (2 samples, 0.04%)</title>
            <rect x="925.3" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="928.3" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/Character.digit (2 samples, 0.04%)</title>
            <rect x="925.3" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="928.3" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.digit (2 samples, 0.04%)</title>
            <rect x="925.3" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="928.3" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.addHeader (11 samples, 0.20%)</title>
            <rect x="925.7" y="819.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="928.7" y="830.0"></text>
        </g>
        <g>
            <title>jbyte_arraycopy (3 samples, 0.05%)</title>
            <rect x="927.0" y="803.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="930.0" y="814.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title>
            <rect x="927.7" y="803.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="930.7" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (35 samples, 0.64%)</title>
            <rect x="928.1" y="819.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="931.1" y="830.0"></text>
        </g>
        <g>
            <title>java/lang/String.length (6 samples, 0.11%)</title>
            <rect x="928.5" y="803.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="931.5" y="814.0"></text>
        </g>
        <g>
            <title>jlong_disjoint_arraycopy (6 samples, 0.11%)</title>
            <rect x="928.5" y="787.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="931.5" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (15 samples, 0.27%)</title>
            <rect x="929.8" y="803.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="932.8" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.15%)</title>
            <rect x="930.2" y="787.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="933.2" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (3 samples, 0.05%)</title>
            <rect x="931.3" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="934.3" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title>
            <rect x="931.5" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="934.5" y="766.0"></text>
        </g>
        <g>
            <title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.04%)</title>
            <rect x="931.5" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="934.5" y="750.0"></text>
        </g>
        <g>
            <title>one/nio/http/PathMapper.find (5 samples, 0.09%)</title>
            <rect x="932.0" y="787.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="935.0" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (12 samples, 0.22%)</title>
            <rect x="933.0" y="803.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="936.0" y="814.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (8 samples, 0.15%)</title>
            <rect x="933.9" y="787.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="936.9" y="798.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title>
            <rect x="933.9" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="936.9" y="782.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title>
            <rect x="934.5" y="771.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="937.5" y="782.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (5 samples, 0.09%)</title>
            <rect x="934.5" y="755.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="937.5" y="766.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (27 samples, 0.49%)</title>
            <rect x="935.6" y="819.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="938.6" y="830.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (21 samples, 0.38%)</title>
            <rect x="936.9" y="803.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="939.9" y="814.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.read (509 samples, 9.27%)</title>
            <rect x="941.4" y="835.0" width="109.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="944.4" y="846.0">one/nio/net/S..</text>
        </g>
        <g>
            <title>one/nio/net/NativeSocket.read (505 samples, 9.20%)</title>
            <rect x="942.3" y="819.0" width="108.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="945.3" y="830.0">one/nio/net/N..</text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title>
            <rect x="948.5" y="803.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="951.5" y="814.0"></text>
        </g>
        <g>
            <title>[unknown] (79 samples, 1.44%)</title>
            <rect x="948.9" y="803.0" width="17.0" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="951.9" y="814.0"></text>
        </g>
        <g>
            <title>[unknown] (79 samples, 1.44%)</title>
            <rect x="948.9" y="787.0" width="17.0" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="951.9" y="798.0"></text>
        </g>
        <g>
            <title>Java_one_nio_net_NativeSocket_read (64 samples, 1.17%)</title>
            <rect x="948.9" y="771.0" width="13.8" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="951.9" y="782.0"></text>
        </g>
        <g>
            <title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;,
                (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.07%)
            </title>
            <rect x="950.4" y="755.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="953.4" y="766.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4
                samples, 0.07%)
            </title>
            <rect x="951.5" y="755.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="954.5" y="766.0"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (5 samples, 0.09%)</title>
            <rect x="952.4" y="755.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="955.4" y="766.0"></text>
        </g>
        <g>
            <title>jni_SetByteArrayRegion (40 samples, 0.73%)</title>
            <rect x="953.7" y="755.0" width="8.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="956.7" y="766.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (4 samples, 0.07%)</title>
            <rect x="955.2" y="739.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="958.2" y="750.0"></text>
        </g>
        <g>
            <title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title>
            <rect x="956.2" y="739.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="959.2" y="750.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (9
                samples, 0.16%)
            </title>
            <rect x="956.9" y="739.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="959.9" y="750.0"></text>
        </g>
        <g>
            <title>check_bounds(int, int, int, Thread*) (16 samples, 0.29%)</title>
            <rect x="958.8" y="739.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="961.8" y="750.0"></text>
        </g>
        <g>
            <title>ResourceMark::reset_to_mark() (7 samples, 0.13%)</title>
            <rect x="960.7" y="723.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="963.7" y="734.0"></text>
        </g>
        <g>
            <title>__GI___recv (8 samples, 0.15%)</title>
            <rect x="962.7" y="771.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
            <text x="965.7" y="782.0"></text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (3 samples, 0.05%)</title>
            <rect x="964.4" y="771.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="967.4" y="782.0"></text>
        </g>
        <g>
            <title>jni_SetByteArrayRegion (4 samples, 0.07%)</title>
            <rect x="965.0" y="771.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="968.0" y="782.0"></text>
        </g>
        <g>
            <title>__GI___recv (393 samples, 7.16%)</title>
            <rect x="965.9" y="803.0" width="84.4" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="968.9" y="814.0">__GI___recv</text>
        </g>
        <g>
            <title>[unknown] (332 samples, 6.05%)</title>
            <rect x="979.0" y="787.0" width="71.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="982.0" y="798.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (332 samples, 6.05%)</title>
            <rect x="979.0" y="771.0" width="71.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="982.0" y="782.0">[unknown]</text>
        </g>
        <g>
            <title>[unknown] (273 samples, 4.97%)</title>
            <rect x="991.7" y="755.0" width="58.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="994.7" y="766.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (268 samples, 4.88%)</title>
            <rect x="992.8" y="739.0" width="57.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="995.8" y="750.0">[unkno..</text>
        </g>
        <g>
            <title>[unknown] (260 samples, 4.73%)</title>
            <rect x="994.5" y="723.0" width="55.8" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="997.5" y="734.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (245 samples, 4.46%)</title>
            <rect x="997.7" y="707.0" width="52.6" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="1000.7" y="718.0">[unkn..</text>
        </g>
        <g>
            <title>[unknown] (217 samples, 3.95%)</title>
            <rect x="1003.7" y="691.0" width="46.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="1006.7" y="702.0">[unk..</text>
        </g>
        <g>
            <title>[unknown] (185 samples, 3.37%)</title>
            <rect x="1010.6" y="675.0" width="39.7" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="1013.6" y="686.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (147 samples, 2.68%)</title>
            <rect x="1018.8" y="659.0" width="31.5" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="1021.8" y="670.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (85 samples, 1.55%)</title>
            <rect x="1032.1" y="643.0" width="18.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="1035.1" y="654.0"></text>
        </g>
        <g>
            <title>[unknown] (23 samples, 0.42%)</title>
            <rect x="1045.4" y="627.0" width="4.9" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="1048.4" y="638.0"></text>
        </g>
        <g>
            <title>[unknown] (8 samples, 0.15%)</title>
            <rect x="1048.6" y="611.0" width="1.7" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="1051.6" y="622.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="1049.1" y="595.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="1052.1" y="606.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="1049.1" y="579.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
            <text x="1052.1" y="590.0"></text>
        </g>
        <g>
            <title>[unknown] (6 samples, 0.11%)</title>
            <rect x="1049.1" y="563.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="1052.1" y="574.0"></text>
        </g>
        <g>
            <title>[unknown] (3 samples, 0.05%)</title>
            <rect x="1049.7" y="547.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="1052.7" y="558.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="1049.9" y="531.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
            <text x="1052.9" y="542.0"></text>
        </g>
        <g>
            <title>__libc_disable_asynccancel (2 samples, 0.04%)</title>
            <rect x="1050.3" y="803.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="1053.3" y="814.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (7 samples, 0.13%)</title>
            <rect x="1050.8" y="851.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1053.8" y="862.0"></text>
        </g>
        <g>
            <title>gettimeofday (5 samples, 0.09%)</title>
            <rect x="1051.2" y="835.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="1054.2" y="846.0"></text>
        </g>
        <g>
            <title>[vdso] (3 samples, 0.05%)</title>
            <rect x="1051.6" y="819.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="1054.6" y="830.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/LSMDao$FlusherThread.run (301 samples, 5.48%)</title>
            <rect x="1052.5" y="883.0" width="64.7" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1055.5" y="894.0">ru/mail..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/LSMDao.flush (301 samples, 5.48%)</title>
            <rect x="1052.5" y="867.0" width="64.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="1055.5" y="878.0">ru/mail..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/FileTable.writeToFile (298 samples, 5.43%)</title>
            <rect x="1052.7" y="851.0" width="64.0" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1055.7" y="862.0">ru/mail..</text>
        </g>
        <g>
            <title>com/google/common/collect/TransformedIterator.next (4 samples, 0.07%)</title>
            <rect x="1053.6" y="835.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="1056.6" y="846.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$6.transform (2 samples, 0.04%)</title>
            <rect x="1053.8" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="1056.8" y="830.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable$$Lambda$70/1966587758.apply (2 samples, 0.04%)</title>
            <rect x="1053.8" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1056.8" y="814.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable.lambda$iterator$0 (2 samples, 0.04%)</title>
            <rect x="1053.8" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1056.8" y="798.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList$Itr.next (2 samples, 0.04%)</title>
            <rect x="1054.4" y="835.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1057.4" y="846.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/model/Bytes.fromInt (3 samples, 0.05%)</title>
            <rect x="1055.1" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1058.1" y="846.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.putInt (2 samples, 0.04%)</title>
            <rect x="1055.3" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="1058.3" y="830.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/model/Bytes.fromLong (4 samples, 0.07%)</title>
            <rect x="1055.7" y="835.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="1058.7" y="846.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.allocate (3 samples, 0.05%)</title>
            <rect x="1055.7" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="1058.7" y="830.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title>
            <rect x="1055.7" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="1058.7" y="814.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title>
            <rect x="1055.7" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1058.7" y="798.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/FileChannelImpl.write (279 samples, 5.08%)</title>
            <rect x="1056.8" y="835.0" width="59.9" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1059.8" y="846.0">sun/ni..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title>
            <rect x="1056.8" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1059.8" y="830.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title>
            <rect x="1056.8" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1059.8" y="814.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (268 samples, 4.88%)</title>
            <rect x="1057.4" y="819.0" width="57.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="1060.4" y="830.0">sun/ni..</text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (6 samples, 0.11%)</title>
            <rect x="1057.9" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1060.9" y="814.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (4 samples, 0.07%)</title>
            <rect x="1058.3" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="1061.3" y="798.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.05%)</title>
            <rect x="1058.5" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="1061.5" y="782.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.04%)</title>
            <rect x="1058.7" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1061.7" y="766.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.04%)</title>
            <rect x="1058.7" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="1061.7" y="750.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.04%)</title>
            <rect x="1058.7" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="1061.7" y="734.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (252 samples, 4.59%)</title>
            <rect x="1059.2" y="803.0" width="54.1" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1062.2" y="814.0">sun/n..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write (251 samples, 4.57%)</title>
            <rect x="1059.4" y="787.0" width="53.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="1062.4" y="798.0">sun/n..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (251 samples, 4.57%)</title>
            <rect x="1059.4" y="771.0" width="53.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="1062.4" y="782.0">sun/n..</text>
        </g>
        <g>
            <title>[unknown] (247 samples, 4.50%)</title>
            <rect x="1060.0" y="755.0" width="53.1" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="1063.0" y="766.0">[unkn..</text>
        </g>
        <g>
            <title>__libc_enable_asynccancel (2 samples, 0.04%)</title>
            <rect x="1060.0" y="739.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="1063.0" y="750.0"></text>
        </g>
        <g>
            <title>write (245 samples, 4.46%)</title>
            <rect x="1060.4" y="739.0" width="52.7" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="1063.4" y="750.0">write</text>
        </g>
        <g>
            <title>[unknown] (195 samples, 3.55%)</title>
            <rect x="1071.2" y="723.0" width="41.9" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="1074.2" y="734.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (195 samples, 3.55%)</title>
            <rect x="1071.2" y="707.0" width="41.9" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="1074.2" y="718.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (171 samples, 3.11%)</title>
            <rect x="1076.3" y="691.0" width="36.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="1079.3" y="702.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (169 samples, 3.08%)</title>
            <rect x="1076.8" y="675.0" width="36.3" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="1079.8" y="686.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (164 samples, 2.99%)</title>
            <rect x="1077.8" y="659.0" width="35.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="1080.8" y="670.0">[un..</text>
        </g>
        <g>
            <title>[unknown] (153 samples, 2.79%)</title>
            <rect x="1080.2" y="643.0" width="32.9" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="1083.2" y="654.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (146 samples, 2.66%)</title>
            <rect x="1081.7" y="627.0" width="31.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="1084.7" y="638.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (145 samples, 2.64%)</title>
            <rect x="1081.9" y="611.0" width="31.2" height="15" fill="#e96464" rx="2" ry="2"/>
            <text x="1084.9" y="622.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (140 samples, 2.55%)</title>
            <rect x="1083.0" y="595.0" width="30.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="1086.0" y="606.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (132 samples, 2.40%)</title>
            <rect x="1084.7" y="579.0" width="28.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="1087.7" y="590.0">[u..</text>
        </g>
        <g>
            <title>[unknown] (118 samples, 2.15%)</title>
            <rect x="1087.7" y="563.0" width="25.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="1090.7" y="574.0">[..</text>
        </g>
        <g>
            <title>[unknown] (107 samples, 1.95%)</title>
            <rect x="1090.1" y="547.0" width="23.0" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="1093.1" y="558.0">[..</text>
        </g>
        <g>
            <title>[unknown] (99 samples, 1.80%)</title>
            <rect x="1091.8" y="531.0" width="21.3" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="1094.8" y="542.0">[..</text>
        </g>
        <g>
            <title>[unknown] (78 samples, 1.42%)</title>
            <rect x="1096.3" y="515.0" width="16.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="1099.3" y="526.0"></text>
        </g>
        <g>
            <title>[unknown] (71 samples, 1.29%)</title>
            <rect x="1097.8" y="499.0" width="15.3" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="1100.8" y="510.0"></text>
        </g>
        <g>
            <title>[unknown] (60 samples, 1.09%)</title>
            <rect x="1100.2" y="483.0" width="12.9" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="1103.2" y="494.0"></text>
        </g>
        <g>
            <title>[unknown] (40 samples, 0.73%)</title>
            <rect x="1104.5" y="467.0" width="8.6" height="15" fill="#e66060" rx="2" ry="2"/>
            <text x="1107.5" y="478.0"></text>
        </g>
        <g>
            <title>[unknown] (28 samples, 0.51%)</title>
            <rect x="1107.1" y="451.0" width="6.0" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="1110.1" y="462.0"></text>
        </g>
        <g>
            <title>[unknown] (18 samples, 0.33%)</title>
            <rect x="1109.2" y="435.0" width="3.9" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="1112.2" y="446.0"></text>
        </g>
        <g>
            <title>[unknown] (7 samples, 0.13%)</title>
            <rect x="1111.6" y="419.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="1114.6" y="430.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.15%)</title>
            <rect x="1113.3" y="803.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1116.3" y="814.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.07%)</title>
            <rect x="1113.5" y="787.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1116.5" y="798.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util.isBufferTooLarge (3 samples, 0.05%)</title>
            <rect x="1114.4" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="1117.4" y="798.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.13%)</title>
            <rect x="1115.0" y="819.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1118.0" y="830.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/NativeThread.current (5 samples, 0.09%)</title>
            <rect x="1115.4" y="803.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="1118.4" y="814.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/senyast/tables/MemTable.iterator (2 samples, 0.04%)</title>
            <rect x="1116.7" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1119.7" y="862.0"></text>
        </g>
        <g>
            <title>start_thread (339 samples, 6.17%)</title>
            <rect x="1117.2" y="883.0" width="72.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="1120.2" y="894.0">start_th..</text>
        </g>
        <g>
            <title>thread_native_entry(Thread*) (339 samples, 6.17%)</title>
            <rect x="1117.2" y="867.0" width="72.8" height="15" fill="#f47373" rx="2" ry="2"/>
            <text x="1120.2" y="878.0">thread_n..</text>
        </g>
        <g>
            <title>Thread::call_run() (339 samples, 6.17%)</title>
            <rect x="1117.2" y="851.0" width="72.8" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1120.2" y="862.0">Thread::..</text>
        </g>
        <g>
            <title>GangWorker::loop() (98 samples, 1.78%)</title>
            <rect x="1117.4" y="835.0" width="21.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1120.4" y="846.0">G..</text>
        </g>
        <g>
            <title>G1CMConcurrentMarkingTask::work(unsigned int) (39 samples, 0.71%)</title>
            <rect x="1117.4" y="819.0" width="8.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1120.4" y="830.0"></text>
        </g>
        <g>
            <title>G1CMTask::do_marking_step(double, bool, bool) (39 samples, 0.71%)</title>
            <rect x="1117.4" y="803.0" width="8.4" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1120.4" y="814.0"></text>
        </g>
        <g>
            <title>G1CMBitMapClosure::do_addr(HeapWord*) (18 samples, 0.33%)</title>
            <rect x="1117.4" y="787.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1120.4" y="798.0"></text>
        </g>
        <g>
            <title>G1CMTask::drain_local_queue(bool) [clone .part.154] (12 samples, 0.22%)</title>
            <rect x="1117.6" y="771.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1120.6" y="782.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (10 samples, 0.18%)</title>
            <rect x="1118.0" y="755.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1121.0" y="766.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (9 samples, 0.16%)
            </title>
            <rect x="1118.2" y="739.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1121.2" y="750.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (6 samples, 0.11%)</title>
            <rect x="1118.7" y="723.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1121.7" y="734.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.09%)</title>
            <rect x="1120.2" y="771.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1123.2" y="782.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.07%)
            </title>
            <rect x="1120.2" y="755.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1123.2" y="766.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (3 samples, 0.05%)</title>
            <rect x="1120.2" y="739.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1123.2" y="750.0"></text>
        </g>
        <g>
            <title>G1CMTask::drain_local_queue(bool) [clone .part.154] (20 samples, 0.36%)</title>
            <rect x="1121.2" y="787.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1124.2" y="798.0"></text>
        </g>
        <g>
            <title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (17 samples, 0.31%)</title>
            <rect x="1121.9" y="771.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1124.9" y="782.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned
                int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (15 samples, 0.27%)
            </title>
            <rect x="1122.3" y="755.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1125.3" y="766.0"></text>
        </g>
        <g>
            <title>G1CMTask::make_reference_grey(oopDesc*) (14 samples, 0.25%)</title>
            <rect x="1122.5" y="739.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1125.5" y="750.0"></text>
        </g>
        <g>
            <title>oopDesc::size() (3 samples, 0.05%)</title>
            <rect x="1124.9" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1127.9" y="734.0"></text>
        </g>
        <g>
            <title>G1CMRootRegionScanTask::work(unsigned int) (2 samples, 0.04%)</title>
            <rect x="1125.8" y="819.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1128.8" y="830.0"></text>
        </g>
        <g>
            <title>G1ParTask::work(unsigned int) (40 samples, 0.73%)</title>
            <rect x="1126.2" y="819.0" width="8.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1129.2" y="830.0"></text>
        </g>
        <g>
            <title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.07%)</title>
            <rect x="1126.2" y="803.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1129.2" y="814.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::trim_queue() (2 samples, 0.04%)</title>
            <rect x="1126.4" y="787.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1129.4" y="798.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples,
                0.04%)
            </title>
            <rect x="1126.4" y="771.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1129.4" y="782.0"></text>
        </g>
        <g>
            <title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (32 samples, 0.58%)
            </title>
            <rect x="1127.0" y="803.0" width="6.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1130.0" y="814.0"></text>
        </g>
        <g>
            <title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (32 samples, 0.58%)</title>
            <rect x="1127.0" y="787.0" width="6.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1130.0" y="798.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (32 samples,
                0.58%)
            </title>
            <rect x="1127.0" y="771.0" width="6.9" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1130.0" y="782.0"></text>
        </g>
        <g>
            <title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (32 samples,
                0.58%)
            </title>
            <rect x="1127.0" y="755.0" width="6.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1130.0" y="766.0"></text>
        </g>
        <g>
            <title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (32 samples, 0.58%)</title>
            <rect x="1127.0" y="739.0" width="6.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1130.0" y="750.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::trim_queue_partially() (24 samples, 0.44%)</title>
            <rect x="1127.0" y="723.0" width="5.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1130.0" y="734.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (15 samples,
                0.27%)
            </title>
            <rect x="1129.0" y="707.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1132.0" y="718.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="1130.5" y="691.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
            <text x="1133.5" y="702.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="1130.5" y="675.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="1133.5" y="686.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="1130.5" y="659.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="1133.5" y="670.0"></text>
        </g>
        <g>
            <title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass,
                unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.11%)
            </title>
            <rect x="1130.9" y="691.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1133.9" y="702.0"></text>
        </g>
        <g>
            <title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (8
                samples, 0.15%)
            </title>
            <rect x="1132.2" y="723.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1135.2" y="734.0"></text>
        </g>
        <g>
            <title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion,
                G1ScanObjsDuringUpdateRSClosure*) (8 samples, 0.15%)
            </title>
            <rect x="1132.2" y="707.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1135.2" y="718.0"></text>
        </g>
        <g>
            <title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (5
                samples, 0.09%)
            </title>
            <rect x="1132.4" y="691.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1135.4" y="702.0"></text>
        </g>
        <g>
            <title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.04%)</title>
            <rect x="1133.1" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1136.1" y="686.0"></text>
        </g>
        <g>
            <title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.05%)</title>
            <rect x="1134.1" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1137.1" y="814.0"></text>
        </g>
        <g>
            <title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples,
                0.05%)
            </title>
            <rect x="1134.1" y="787.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1137.1" y="798.0"></text>
        </g>
        <g>
            <title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.04%)</title>
            <rect x="1134.1" y="771.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1137.1" y="782.0"></text>
        </g>
        <g>
            <title>G1CLDScanClosure::do_cld(ClassLoaderData*) (2 samples, 0.04%)</title>
            <rect x="1134.1" y="755.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1137.1" y="766.0"></text>
        </g>
        <g>
            <title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (2 samples, 0.04%)</title>
            <rect x="1134.1" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1137.1" y="750.0"></text>
        </g>
        <g>
            <title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.04%)</title>
            <rect x="1134.1" y="723.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1137.1" y="734.0"></text>
        </g>
        <g>
            <title>G1RebuildRemSetTask::work(unsigned int) (17 samples, 0.31%)</title>
            <rect x="1134.8" y="819.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1137.8" y="830.0"></text>
        </g>
        <g>
            <title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (17
                samples, 0.31%)
            </title>
            <rect x="1134.8" y="803.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1137.8" y="814.0"></text>
        </g>
        <g>
            <title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (17 samples,
                0.31%)
            </title>
            <rect x="1134.8" y="787.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1137.8" y="798.0"></text>
        </g>
        <g>
            <title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass,
                unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (6 samples, 0.11%)
            </title>
            <rect x="1137.1" y="771.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1140.1" y="782.0"></text>
        </g>
        <g>
            <title>OtherRegionsTable::add_reference(void*, unsigned int) (3 samples, 0.05%)</title>
            <rect x="1137.6" y="755.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1140.6" y="766.0"></text>
        </g>
        <g>
            <title>JavaThread::run() (234 samples, 4.26%)</title>
            <rect x="1138.4" y="835.0" width="50.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1141.4" y="846.0">JavaT..</text>
        </g>
        <g>
            <title>JavaThread::thread_main_inner() (234 samples, 4.26%)</title>
            <rect x="1138.4" y="819.0" width="50.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1141.4" y="830.0">JavaT..</text>
        </g>
        <g>
            <title>CompileBroker::compiler_thread_loop() (232 samples, 4.22%)</title>
            <rect x="1138.4" y="803.0" width="49.9" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1141.4" y="814.0">Compi..</text>
        </g>
        <g>
            <title>CompileBroker::invoke_compiler_on_method(CompileTask*) (230 samples, 4.19%)</title>
            <rect x="1138.6" y="787.0" width="49.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1141.6" y="798.0">Compi..</text>
        </g>
        <g>
            <title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (198 samples, 3.61%)</title>
            <rect x="1138.6" y="771.0" width="42.6" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1141.6" y="782.0">C2Co..</text>
        </g>
        <g>
            <title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (198 samples,
                3.61%)
            </title>
            <rect x="1138.6" y="755.0" width="42.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1141.6" y="766.0">Comp..</text>
        </g>
        <g>
            <title>Compile::Code_Gen() (105 samples, 1.91%)</title>
            <rect x="1138.9" y="739.0" width="22.5" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1141.9" y="750.0">C..</text>
        </g>
        <g>
            <title>Compile::Output() (3 samples, 0.05%)</title>
            <rect x="1138.9" y="723.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1141.9" y="734.0"></text>
        </g>
        <g>
            <title>Compile::init_buffer(unsigned int*) (2 samples, 0.04%)</title>
            <rect x="1139.1" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1142.1" y="718.0"></text>
        </g>
        <g>
            <title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.04%)</title>
            <rect x="1139.1" y="691.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1142.1" y="702.0"></text>
        </g>
        <g>
            <title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.05%)</title>
            <rect x="1139.5" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1142.5" y="734.0"></text>
        </g>
        <g>
            <title>Matcher::match() (8 samples, 0.15%)</title>
            <rect x="1140.2" y="723.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1143.2" y="734.0"></text>
        </g>
        <g>
            <title>Matcher::xform(Node*, int) (7 samples, 0.13%)</title>
            <rect x="1140.4" y="707.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1143.4" y="718.0"></text>
        </g>
        <g>
            <title>Matcher::match_tree(Node const*) (5 samples, 0.09%)</title>
            <rect x="1140.8" y="691.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1143.8" y="702.0"></text>
        </g>
        <g>
            <title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (5 samples, 0.09%)</title>
            <rect x="1140.8" y="675.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1143.8" y="686.0"></text>
        </g>
        <g>
            <title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (5 samples, 0.09%)</title>
            <rect x="1140.8" y="659.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1143.8" y="670.0"></text>
        </g>
        <g>
            <title>PhaseCFG::do_global_code_motion() (10 samples, 0.18%)</title>
            <rect x="1142.1" y="723.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1145.1" y="734.0"></text>
        </g>
        <g>
            <title>PhaseCFG::global_code_motion() (9 samples, 0.16%)</title>
            <rect x="1142.3" y="707.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1145.3" y="718.0"></text>
        </g>
        <g>
            <title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.05%)</title>
            <rect x="1142.3" y="691.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1145.3" y="702.0"></text>
        </g>
        <g>
            <title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (3 samples,
                0.05%)
            </title>
            <rect x="1142.9" y="691.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1145.9" y="702.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Register_Allocate() (80 samples, 1.46%)</title>
            <rect x="1144.2" y="723.0" width="17.2" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1147.2" y="734.0"></text>
        </g>
        <g>
            <title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (4 samples, 0.07%)</title>
            <rect x="1144.9" y="707.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1147.9" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Select() (7 samples, 0.13%)</title>
            <rect x="1145.7" y="707.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1148.7" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIFG::re_insert(unsigned int) (3 samples, 0.05%)</title>
            <rect x="1146.6" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1149.6" y="702.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Simplify() (4 samples, 0.07%)</title>
            <rect x="1147.2" y="707.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1150.2" y="718.0"></text>
        </g>
        <g>
            <title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title>
            <rect x="1147.2" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1150.2" y="702.0"></text>
        </g>
        <g>
            <title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.04%)</title>
            <rect x="1147.7" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1150.7" y="702.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Split(unsigned int, ResourceArea*) (9 samples, 0.16%)</title>
            <rect x="1148.1" y="707.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1151.1" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::build_ifg_physical(ResourceArea*) (18 samples, 0.33%)</title>
            <rect x="1150.0" y="707.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1153.0" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;,
                PhaseChaitin::Pressure&amp;) (3 samples, 0.05%)
            </title>
            <rect x="1150.3" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1153.3" y="702.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (8 samples, 0.15%)</title>
            <rect x="1150.9" y="691.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1153.9" y="702.0"></text>
        </g>
        <g>
            <title>IndexSetIterator::advance_and_next() (5 samples, 0.09%)</title>
            <rect x="1151.5" y="675.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1154.5" y="686.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;)
                (4 samples, 0.07%)
            </title>
            <rect x="1152.6" y="691.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1155.6" y="702.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::gather_lrg_masks(bool) (6 samples, 0.11%)</title>
            <rect x="1153.9" y="707.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1156.9" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::post_allocate_copy_removal() (7 samples, 0.13%)</title>
            <rect x="1155.4" y="707.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1158.4" y="718.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples,
                0.07%)
            </title>
            <rect x="1156.1" y="691.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1159.1" y="702.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (2 samples, 0.04%)</title>
            <rect x="1156.9" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1159.9" y="718.0"></text>
        </g>
        <g>
            <title>PhaseCoalesce::coalesce_driver() (6 samples, 0.11%)</title>
            <rect x="1157.3" y="707.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1160.3" y="718.0"></text>
        </g>
        <g>
            <title>PhaseConservativeCoalesce::coalesce(Block*) (5 samples, 0.09%)</title>
            <rect x="1157.6" y="691.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1160.6" y="702.0"></text>
        </g>
        <g>
            <title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (3
                samples, 0.05%)
            </title>
            <rect x="1158.0" y="675.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1161.0" y="686.0"></text>
        </g>
        <g>
            <title>PhaseIFG::Compute_Effective_Degree() (4 samples, 0.07%)</title>
            <rect x="1158.6" y="707.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1161.6" y="718.0"></text>
        </g>
        <g>
            <title>PhaseLive::compute(unsigned int) (5 samples, 0.09%)</title>
            <rect x="1159.9" y="707.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1162.9" y="718.0"></text>
        </g>
        <g>
            <title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.04%)</title>
            <rect x="1160.6" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1163.6" y="702.0"></text>
        </g>
        <g>
            <title>Compile::Optimize() (60 samples, 1.09%)</title>
            <rect x="1161.4" y="739.0" width="12.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1164.4" y="750.0"></text>
        </g>
        <g>
            <title>Compile::final_graph_reshaping() (2 samples, 0.04%)</title>
            <rect x="1161.6" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1164.6" y="734.0"></text>
        </g>
        <g>
            <title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (2 samples, 0.04%)</title>
            <rect x="1162.1" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1165.1" y="734.0"></text>
        </g>
        <g>
            <title>PhaseCCP::analyze() (3 samples, 0.05%)</title>
            <rect x="1162.9" y="723.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1165.9" y="734.0"></text>
        </g>
        <g>
            <title>PhaseCCP::do_transform() (2 samples, 0.04%)</title>
            <rect x="1163.6" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1166.6" y="734.0"></text>
        </g>
        <g>
            <title>PhaseCCP::transform(Node*) (2 samples, 0.04%)</title>
            <rect x="1163.6" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1166.6" y="718.0"></text>
        </g>
        <g>
            <title>PhaseCCP::transform_once(Node*) (2 samples, 0.04%)</title>
            <rect x="1163.6" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1166.6" y="702.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (34 samples, 0.62%)</title>
            <rect x="1164.0" y="723.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1167.0" y="734.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::Dominators() (4 samples, 0.07%)</title>
            <rect x="1164.6" y="707.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1167.6" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (13 samples,
                0.24%)
            </title>
            <rect x="1165.7" y="707.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1168.7" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_loop_late_post(Node*) (11 samples, 0.20%)</title>
            <rect x="1166.2" y="691.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1169.2" y="702.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (7 samples, 0.13%)</title>
            <rect x="1166.6" y="675.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1169.6" y="686.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::is_dominator(Node*, Node*) (6 samples, 0.11%)</title>
            <rect x="1166.8" y="659.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1169.8" y="670.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_loop_tree() (2 samples, 0.04%)</title>
            <rect x="1168.5" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1171.5" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (6 samples, 0.11%)
            </title>
            <rect x="1168.9" y="707.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1171.9" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (4 samples, 0.07%)</title>
            <rect x="1169.4" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1172.4" y="702.0"></text>
        </g>
        <g>
            <title>PhaseIterGVN::optimize() (4 samples, 0.07%)</title>
            <rect x="1170.2" y="707.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1173.2" y="718.0"></text>
        </g>
        <g>
            <title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.07%)</title>
            <rect x="1170.2" y="691.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1173.2" y="702.0"></text>
        </g>
        <g>
            <title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.04%)</title>
            <rect x="1170.7" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1173.7" y="686.0"></text>
        </g>
        <g>
            <title>PhaseIterGVN::optimize() (10 samples, 0.18%)</title>
            <rect x="1171.3" y="723.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1174.3" y="734.0"></text>
        </g>
        <g>
            <title>PhaseIterGVN::transform_old(Node*) (10 samples, 0.18%)</title>
            <rect x="1171.3" y="707.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1174.3" y="718.0"></text>
        </g>
        <g>
            <title>PhiNode::Ideal(PhaseGVN*, bool) (3 samples, 0.05%)</title>
            <rect x="1172.2" y="691.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1175.2" y="702.0"></text>
        </g>
        <g>
            <title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.04%)</title>
            <rect x="1172.8" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1175.8" y="702.0"></text>
        </g>
        <g>
            <title>CompileWrapper::CompileWrapper(Compile*) (2 samples, 0.04%)</title>
            <rect x="1174.3" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1177.3" y="750.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (27 samples, 0.49%)</title>
            <rect x="1174.7" y="739.0" width="5.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1177.7" y="750.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (27 samples, 0.49%)</title>
            <rect x="1174.7" y="723.0" width="5.8" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1177.7" y="734.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (26 samples, 0.47%)</title>
            <rect x="1175.0" y="707.0" width="5.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1178.0" y="718.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (26 samples, 0.47%)</title>
            <rect x="1175.0" y="691.0" width="5.5" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1178.0" y="702.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (26 samples, 0.47%)</title>
            <rect x="1175.0" y="675.0" width="5.5" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1178.0" y="686.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (22 samples, 0.40%)</title>
            <rect x="1175.0" y="659.0" width="4.7" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1178.0" y="670.0"></text>
        </g>
        <g>
            <title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3
                samples, 0.05%)
            </title>
            <rect x="1175.0" y="643.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1178.0" y="654.0"></text>
        </g>
        <g>
            <title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2
                samples, 0.04%)
            </title>
            <rect x="1175.2" y="627.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1178.2" y="638.0"></text>
        </g>
        <g>
            <title>ciMethod::get_flow_analysis() (2 samples, 0.04%)</title>
            <rect x="1175.2" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1178.2" y="622.0"></text>
        </g>
        <g>
            <title>ciTypeFlow::do_flow() (2 samples, 0.04%)</title>
            <rect x="1175.2" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1178.2" y="606.0"></text>
        </g>
        <g>
            <title>ciTypeFlow::flow_types() (2 samples, 0.04%)</title>
            <rect x="1175.2" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1178.2" y="590.0"></text>
        </g>
        <g>
            <title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2
                samples, 0.04%)
            </title>
            <rect x="1175.2" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1178.2" y="574.0"></text>
        </g>
        <g>
            <title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples,
                0.04%)
            </title>
            <rect x="1175.2" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1178.2" y="558.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (16 samples, 0.29%)</title>
            <rect x="1175.6" y="643.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1178.6" y="654.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (16 samples, 0.29%)</title>
            <rect x="1175.6" y="627.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1178.6" y="638.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (16 samples, 0.29%)</title>
            <rect x="1175.6" y="611.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1178.6" y="622.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (16 samples, 0.29%)</title>
            <rect x="1175.6" y="595.0" width="3.4" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1178.6" y="606.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (16 samples, 0.29%)</title>
            <rect x="1175.6" y="579.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1178.6" y="590.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (15 samples, 0.27%)</title>
            <rect x="1175.6" y="563.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1178.6" y="574.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (12 samples, 0.22%)</title>
            <rect x="1175.6" y="547.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1178.6" y="558.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.22%)</title>
            <rect x="1175.6" y="531.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1178.6" y="542.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (10 samples, 0.18%)</title>
            <rect x="1175.8" y="515.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1178.8" y="526.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (10 samples, 0.18%)</title>
            <rect x="1175.8" y="499.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1178.8" y="510.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (10 samples, 0.18%)</title>
            <rect x="1175.8" y="483.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1178.8" y="494.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (8 samples, 0.15%)</title>
            <rect x="1175.8" y="467.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1178.8" y="478.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (7 samples, 0.13%)</title>
            <rect x="1176.0" y="451.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1179.0" y="462.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.13%)</title>
            <rect x="1176.0" y="435.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1179.0" y="446.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (7 samples, 0.13%)</title>
            <rect x="1176.0" y="419.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1179.0" y="430.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (7 samples, 0.13%)</title>
            <rect x="1176.0" y="403.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1179.0" y="414.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (7 samples, 0.13%)</title>
            <rect x="1176.0" y="387.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1179.0" y="398.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (6 samples, 0.11%)</title>
            <rect x="1176.0" y="371.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1179.0" y="382.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (6 samples, 0.11%)</title>
            <rect x="1176.0" y="355.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1179.0" y="366.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.11%)</title>
            <rect x="1176.0" y="339.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1179.0" y="350.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (6 samples, 0.11%)</title>
            <rect x="1176.0" y="323.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1179.0" y="334.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (6 samples, 0.11%)</title>
            <rect x="1176.0" y="307.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1179.0" y="318.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (5 samples, 0.09%)</title>
            <rect x="1176.2" y="291.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1179.2" y="302.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (3 samples, 0.05%)</title>
            <rect x="1176.5" y="275.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1179.5" y="286.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title>
            <rect x="1176.7" y="259.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1179.7" y="270.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title>
            <rect x="1176.7" y="243.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1179.7" y="254.0"></text>
        </g>
        <g>
            <title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title>
            <rect x="1178.2" y="547.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1181.2" y="558.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title>
            <rect x="1178.2" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1181.2" y="542.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title>
            <rect x="1178.2" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1181.2" y="526.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1181.2" y="510.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="483.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1181.2" y="494.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="467.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1181.2" y="478.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="451.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1181.2" y="462.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title>
            <rect x="1178.2" y="435.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1181.2" y="446.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title>
            <rect x="1178.2" y="419.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1181.2" y="430.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="403.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1181.2" y="414.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="387.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1181.2" y="398.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="371.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1181.2" y="382.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="355.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1181.2" y="366.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title>
            <rect x="1178.2" y="339.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1181.2" y="350.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title>
            <rect x="1178.2" y="323.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1181.2" y="334.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="307.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1181.2" y="318.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="291.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1181.2" y="302.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="275.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1181.2" y="286.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (2 samples, 0.04%)</title>
            <rect x="1178.2" y="259.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1181.2" y="270.0"></text>
        </g>
        <g>
            <title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title>
            <rect x="1179.0" y="643.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1182.0" y="654.0"></text>
        </g>
        <g>
            <title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title>
            <rect x="1179.0" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1182.0" y="638.0"></text>
        </g>
        <g>
            <title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title>
            <rect x="1179.0" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1182.0" y="622.0"></text>
        </g>
        <g>
            <title>Parse::do_all_blocks() (2 samples, 0.04%)</title>
            <rect x="1179.0" y="595.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1182.0" y="606.0"></text>
        </g>
        <g>
            <title>Parse::do_one_block() (2 samples, 0.04%)</title>
            <rect x="1179.0" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1182.0" y="590.0"></text>
        </g>
        <g>
            <title>Parse::do_one_bytecode() (2 samples, 0.04%)</title>
            <rect x="1179.0" y="563.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1182.0" y="574.0"></text>
        </g>
        <g>
            <title>Parse::do_call() (2 samples, 0.04%)</title>
            <rect x="1179.0" y="547.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1182.0" y="558.0"></text>
        </g>
        <g>
            <title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.04%)</title>
            <rect x="1179.9" y="659.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1182.9" y="670.0"></text>
        </g>
        <g>
            <title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples,
                0.04%)
            </title>
            <rect x="1180.5" y="739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1183.5" y="750.0"></text>
        </g>
        <g>
            <title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (31 samples, 0.56%)</title>
            <rect x="1181.4" y="771.0" width="6.7" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1184.4" y="782.0"></text>
        </g>
        <g>
            <title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (30
                samples, 0.55%)
            </title>
            <rect x="1181.6" y="755.0" width="6.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1184.6" y="766.0"></text>
        </g>
        <g>
            <title>Compilation::compile_method() (30 samples, 0.55%)</title>
            <rect x="1181.6" y="739.0" width="6.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1184.6" y="750.0"></text>
        </g>
        <g>
            <title>Compilation::compile_java_method() (27 samples, 0.49%)</title>
            <rect x="1181.6" y="723.0" width="5.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1184.6" y="734.0"></text>
        </g>
        <g>
            <title>Compilation::build_hir() [clone .part.93] (13 samples, 0.24%)</title>
            <rect x="1181.6" y="707.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1184.6" y="718.0"></text>
        </g>
        <g>
            <title>GlobalValueNumbering::GlobalValueNumbering(IR*) (2 samples, 0.04%)</title>
            <rect x="1181.6" y="691.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1184.6" y="702.0"></text>
        </g>
        <g>
            <title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.04%)</title>
            <rect x="1181.6" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1184.6" y="686.0"></text>
        </g>
        <g>
            <title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.04%)
            </title>
            <rect x="1181.6" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1184.6" y="670.0"></text>
        </g>
        <g>
            <title>SubstitutionResolver::block_do(BlockBegin*) (2 samples, 0.04%)</title>
            <rect x="1181.6" y="643.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1184.6" y="654.0"></text>
        </g>
        <g>
            <title>IR::IR(Compilation*, ciMethod*, int) (11 samples, 0.20%)</title>
            <rect x="1182.1" y="691.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1185.1" y="702.0"></text>
        </g>
        <g>
            <title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (11 samples, 0.20%)</title>
            <rect x="1182.1" y="675.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1185.1" y="686.0"></text>
        </g>
        <g>
            <title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (11 samples, 0.20%)</title>
            <rect x="1182.1" y="659.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1185.1" y="670.0"></text>
        </g>
        <g>
            <title>GraphBuilder::iterate_all_blocks(bool) (11 samples, 0.20%)</title>
            <rect x="1182.1" y="643.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1185.1" y="654.0"></text>
        </g>
        <g>
            <title>GraphBuilder::iterate_bytecodes_for_block(int) (11 samples, 0.20%)</title>
            <rect x="1182.1" y="627.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1185.1" y="638.0"></text>
        </g>
        <g>
            <title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.05%)</title>
            <rect x="1182.1" y="611.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1185.1" y="622.0"></text>
        </g>
        <g>
            <title>ciBytecodeStream::get_field(bool&amp;) (3 samples, 0.05%)</title>
            <rect x="1182.1" y="595.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1185.1" y="606.0"></text>
        </g>
        <g>
            <title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.04%)</title>
            <rect x="1182.1" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1185.1" y="590.0"></text>
        </g>
        <g>
            <title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.04%)</title>
            <rect x="1182.1" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="1185.1" y="574.0"></text>
        </g>
        <g>
            <title>GraphBuilder::invoke(Bytecodes::Code) (8 samples, 0.15%)</title>
            <rect x="1182.7" y="611.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1185.7" y="622.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.13%)
            </title>
            <rect x="1182.9" y="595.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1185.9" y="606.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples,
                0.13%)
            </title>
            <rect x="1182.9" y="579.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1185.9" y="590.0"></text>
        </g>
        <g>
            <title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.11%)</title>
            <rect x="1182.9" y="563.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1185.9" y="574.0"></text>
        </g>
        <g>
            <title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.11%)</title>
            <rect x="1182.9" y="547.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1185.9" y="558.0"></text>
        </g>
        <g>
            <title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 0.11%)</title>
            <rect x="1182.9" y="531.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1185.9" y="542.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.09%)
            </title>
            <rect x="1183.1" y="515.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1186.1" y="526.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples,
                0.04%)
            </title>
            <rect x="1183.1" y="499.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1186.1" y="510.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (3 samples, 0.05%)</title>
            <rect x="1183.6" y="499.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1186.6" y="510.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)
            </title>
            <rect x="1183.6" y="483.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1186.6" y="494.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples,
                0.04%)
            </title>
            <rect x="1183.6" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1186.6" y="478.0"></text>
        </g>
        <g>
            <title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title>
            <rect x="1183.6" y="451.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1186.6" y="462.0"></text>
        </g>
        <g>
            <title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title>
            <rect x="1183.6" y="435.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1186.6" y="446.0"></text>
        </g>
        <g>
            <title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title>
            <rect x="1183.6" y="419.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1186.6" y="430.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)
            </title>
            <rect x="1183.6" y="403.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1186.6" y="414.0"></text>
        </g>
        <g>
            <title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples,
                0.04%)
            </title>
            <rect x="1183.6" y="387.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1186.6" y="398.0"></text>
        </g>
        <g>
            <title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title>
            <rect x="1183.6" y="371.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1186.6" y="382.0"></text>
        </g>
        <g>
            <title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title>
            <rect x="1183.6" y="355.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1186.6" y="366.0"></text>
        </g>
        <g>
            <title>Compilation::emit_code_body() (2 samples, 0.04%)</title>
            <rect x="1184.4" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1187.4" y="718.0"></text>
        </g>
        <g>
            <title>Compilation::emit_lir() (12 samples, 0.22%)</title>
            <rect x="1184.8" y="707.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1187.8" y="718.0"></text>
        </g>
        <g>
            <title>BlockList::iterate_forward(BlockClosure*) (3 samples, 0.05%)</title>
            <rect x="1184.8" y="691.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1187.8" y="702.0"></text>
        </g>
        <g>
            <title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (2 samples, 0.04%)</title>
            <rect x="1185.1" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1188.1" y="686.0"></text>
        </g>
        <g>
            <title>LinearScan::do_linear_scan() (9 samples, 0.16%)</title>
            <rect x="1185.5" y="691.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1188.5" y="702.0"></text>
        </g>
        <g>
            <title>LinearScan::assign_reg_num() (3 samples, 0.05%)</title>
            <rect x="1185.7" y="675.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1188.7" y="686.0"></text>
        </g>
        <g>
            <title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (3 samples, 0.05%)</title>
            <rect x="1185.7" y="659.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1188.7" y="670.0"></text>
        </g>
        <g>
            <title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples,
                0.04%)
            </title>
            <rect x="1185.9" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1188.9" y="654.0"></text>
        </g>
        <g>
            <title>LinearScan::build_intervals() (2 samples, 0.04%)</title>
            <rect x="1186.3" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1189.3" y="686.0"></text>
        </g>
        <g>
            <title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*,
                ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (2 samples,
                0.04%)
            </title>
            <rect x="1187.6" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="1190.6" y="734.0"></text>
        </g>
        <g>
            <title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*,
                Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*,
                AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.04%)
            </title>
            <rect x="1187.6" y="707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1190.6" y="718.0"></text>
        </g>
        <g>
            <title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*,
                Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*,
                AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.04%)
            </title>
            <rect x="1187.6" y="691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1190.6" y="702.0"></text>
        </g>
        <g>
            <title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.04%)</title>
            <rect x="1188.3" y="803.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1191.3" y="814.0"></text>
        </g>
        <g>
            <title>JvmtiDeferredEvent::post() (2 samples, 0.04%)</title>
            <rect x="1188.3" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1191.3" y="798.0"></text>
        </g>
        <g>
            <title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.04%)</title>
            <rect x="1188.3" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1191.3" y="782.0"></text>
        </g>
        <g>
            <title>VMThread::run() (2 samples, 0.04%)</title>
            <rect x="1188.9" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1191.9" y="846.0"></text>
        </g>
        <g>
            <title>VMThread::loop() (2 samples, 0.04%)</title>
            <rect x="1188.9" y="819.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1191.9" y="830.0"></text>
        </g>
        <g>
            <title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title>
            <rect x="1188.9" y="803.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1191.9" y="814.0"></text>
        </g>
        <g>
            <title>VM_Operation::evaluate() (2 samples, 0.04%)</title>
            <rect x="1188.9" y="787.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1191.9" y="798.0"></text>
        </g>
        <g>
            <title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title>
            <rect x="1188.9" y="771.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1191.9" y="782.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.04%)</title>
            <rect x="1188.9" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1191.9" y="766.0"></text>
        </g>
        <g>
            <title>WatcherThread::run() (3 samples, 0.05%)</title>
            <rect x="1189.4" y="835.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1192.4" y="846.0"></text>
        </g>
        <g>
            <title>WatcherThread::sleep() const (3 samples, 0.05%)</title>
            <rect x="1189.4" y="819.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1192.4" y="830.0"></text>
        </g>
        <g>
            <title>Monitor::wait(bool, long, bool) (3 samples, 0.05%)</title>
            <rect x="1189.4" y="803.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1192.4" y="814.0"></text>
        </g>
        <g>
            <title>Monitor::IWait(Thread*, long) (3 samples, 0.05%)</title>
            <rect x="1189.4" y="787.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1192.4" y="798.0"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (3 samples, 0.05%)</title>
            <rect x="1189.4" y="771.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="1192.4" y="782.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="1189.6" y="755.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="1192.6" y="766.0"></text>
        </g>
        <g>
            <title>[unknown] (2 samples, 0.04%)</title>
            <rect x="1189.6" y="739.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="1192.6" y="750.0"></text>
        </g>
    </g>
</svg>
